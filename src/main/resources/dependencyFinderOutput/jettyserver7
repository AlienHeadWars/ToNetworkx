<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.BufferedReader</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Request$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._reader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            <feature confirmed="no">
                <name>java.io.BufferedReader.BufferedReader(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayInputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ByteArrayOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.ByteArrayOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ByteArrayOutputStream.toByteArray()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.DataInputStream</name>
            <feature confirmed="no">
                <name>java.io.DataInputStream.DataInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataInputStream.readBoolean()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataInputStream.readInt()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataInputStream.readLong()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataInputStream.readUTF()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.DataOutputStream</name>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.writeBoolean(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.writeInt(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.writeLong(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.DataOutputStream.writeUTF(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$200(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getStoreDirectory()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setStoreDirectory(java.io.File)</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.io.File, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.canRead()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.canWrite()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.createNewFile()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.delete()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.exists()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getCanonicalPath()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.listFiles()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.mkdir()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.pathSeparatorChar</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.separator</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileOutputStream</name>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.FileOutputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.println(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.write(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.fill(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$000(org.eclipse.jetty.server.nio.SelectChannelConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.configure(java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.io.IOException.IOException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.IOException.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.InputStreamReader</name>
            <feature confirmed="no">
                <name>java.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectInputStream</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream</inbound>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.ObjectInputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectOutputStream</name>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.ObjectOutputStream.writeObject(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.ObjectStreamClass</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <feature confirmed="no">
                <name>java.io.ObjectStreamClass.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._fileOut</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._out</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._out</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="no">
                <name>java.io.OutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStreamWriter</name>
            <feature confirmed="no">
                <name>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._print</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.PrintStream(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintWriter</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._printWriter</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.__nullPrintWriter</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._writer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.io.PrintWriter.PrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.flush()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.print(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintWriter.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.Serializable</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringWriter</name>
            <feature confirmed="no">
                <name>java.io.StringWriter.StringWriter()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.StringWriter.getBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.UnsupportedEncodingException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.io.UnsupportedEncodingException.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._converter</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpWriter</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._writer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.io.Writer.Writer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.flush()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.write(char[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.write(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.Writer.write(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.AssertionError</name>
            <feature confirmed="no">
                <name>java.lang.AssertionError.AssertionError()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.ContextHandlerCollection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.getContextClass()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.desiredAssertionStatus()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getClassLoader()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getPackage()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.newInstance()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassLoader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._loader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.loadClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Deprecated</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.reopen()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.DispatcherType(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Error</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.lang.Error.Error(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Error.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.stopAccept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$400(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalStateException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCreationTime()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getLastAccessedTime()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isNew()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.putValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCreationTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getLastAccessedTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getMaxInactiveInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isNew()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._keySize</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getKeySize()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._keySize</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getKeySize()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.Integer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.getInteger(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.intValue()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.parseInt(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toHexString(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.InterruptedException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.join()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.join()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Iterable</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.getServers()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <feature confirmed="no">
                <name>java.lang.Long.parseLong(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.toString(long, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchMethodError</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NumberFormatException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsLock</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContext</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancel()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$2</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$3</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$4</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$5</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Challenge</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Failure</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$ResponseSent</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$SendSuccess</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Wrapped</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getConnection()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.CookieCutter</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lazyFields</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.values()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._associatedObject</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getAssociatedObject()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setAssociatedObject(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestAttributeListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Response$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$Graceful</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$UnauthenticatedUserIdentity</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributeListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestAttributeListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$500(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.NIOConnector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.putValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.clearEventListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$1.Authentication$1()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$2.Authentication$2()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$3.Authentication$3()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$4.Authentication$4()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$5.Authentication$5()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.CookieCutter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.InclusiveByteRange(long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.UserIdentity$1()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.ContextHandler$Context(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL.ServletSSL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.notifyAll()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.wait(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Package</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Package.getImplementationVersion()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runnable</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.start(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
            <feature confirmed="no">
                <name>java.lang.Runnable.run()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runtime</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <feature confirmed="no">
                <name>java.lang.Runtime.freeMemory()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Runtime.getRuntime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialScheme</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedForHeader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedHostHeader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedServerHeader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._host</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._hostHeader</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralScheme</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._name</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConfidentialScheme()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedForHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedHostHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedServerHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHost()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHostHeader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getIntegralScheme()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setConfidentialScheme(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedForHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedHostHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedServerHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setHost(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setHostHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setIntegralScheme(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.ASYNC_CONTEXT_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.ASYNC_PATH_INFO</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.ASYNC_QUERY_STRING</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.ASYNC_REQUEST_URI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.ASYNC_SERVLET_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.dispatch(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getHistory()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$1.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$2.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$3.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$4.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$5.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.login(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getAuthMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.isUserInRole(org.eclipse.jetty.server.UserIdentity$Scope, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getConfidentialScheme()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getHost()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getIntegralScheme()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.setHost(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._contextPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._requestURI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._servletPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._contextPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._requestURI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._servletPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_EXCEPTION</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_EXCEPTION_TYPE</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_MESSAGE</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_REQUEST_URI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_SERVLET_NAME</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.ERROR_STATUS_CODE</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.FORWARD_CONTEXT_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.FORWARD_PATH_INFO</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.FORWARD_QUERY_STRING</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.FORWARD_REQUEST_URI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.FORWARD_SERVLET_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.INCLUDE_CONTEXT_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.INCLUDE_PATH_INFO</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.INCLUDE_QUERY_STRING</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.INCLUDE_REQUEST_URI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.INCLUDE_SERVLET_PATH</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.__FORWARD_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.__INCLUDE_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.__JSP_FILE</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._dQuery</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._path</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._uri</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.DispatcherType(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler._charset</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._characterEncoding</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filename</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePaths</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getFilename()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getIgnorePaths()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogDateFormat()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogTimeZone()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setIgnorePaths(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogDateFormat(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogTimeZone(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.__ASYNC_FWD</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._characterEncoding</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._contextPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._method</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryString</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._readerEncoding</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteAddr</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteHost</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestURI</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._serverName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._servletPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCharacterEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalAddr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathTranslated()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getProtocol()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteUser()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestedSessionId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getScheme()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContextPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setMethod(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setProtocol(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteAddr(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteHost(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setScheme(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServerName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServletPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._key</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getKey()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isCached()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.println(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.SET_INCLUDE_HEADER_PREFIX</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeUrl(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getCharacterEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getReason()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getSetCharacterEncoding()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._version</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getVersion()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getClusterId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__DefaultSessionCookie</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__DefaultSessionDomain</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__DefaultSessionIdPathParameterName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__MaxAgeProperty</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__SessionCookieProperty</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__SessionDomainProperty</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__SessionIdPathParameterNameProperty</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__SessionPathProperty</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionDomain()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterNamePrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionCookie(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionDomain(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getNamedDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlet(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.MANAGED_ATTRIBUTES</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._displayName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._vhosts</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._welcomeFiles</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$600(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getHosts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isProtectedTarget(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setHosts(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._expires</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.getExpires()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.SESSION_ID_RANDOM_ALGORITHM</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.SESSION_ID_RANDOM_ALGORITHM_ALT</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.__NEW_SESSION_ID</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._workerName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.getWorkerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.setWorkerName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getNodeId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.putValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterNamePrefix</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionPath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionDomain()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterNamePrefix()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionCookie(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionDomain(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.SESSION_ID_RANDOM_ALGORITHM</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.SESSION_ID_RANDOM_ALGORITHM_ALT</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.__NEW_SESSION_ID</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._workerName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getWorkerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.setWorkerName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._dbName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionIdTable</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionTable</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteOldExpiredSessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._driverClassName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._insertId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._jndiName</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._queryId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._selectExpiredSessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIdTable</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getDatasourceName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getDriverClassName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasourceName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._canonicalContext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._id</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._rowId</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._virtualHost</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCanonicalContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastNode()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getVirtualHost()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCanonicalContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastNode(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setRowId(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setVirtualHost(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__deleteSession</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__insertSession</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__selectSession</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSession</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionAccessTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionNode</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$000(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$100(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL.deduceKeyLength(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.DEFAULT_KEYSTORE</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.KEYPASSWORD_PROPERTY</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.PASSWORD_PROPERTY</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getExcludeCipherSuites()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getKeystore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getKeystoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getProtocol()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getProvider()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getSecureRandomAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getSslKeyManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getSslTrustManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getTruststore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getTruststoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setExcludeCipherSuites(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setKeyPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setKeystore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setKeystoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setProtocol(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setProvider(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setSecureRandomAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setTrustPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setTruststore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setTruststoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._idStr</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getIdStr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.CACHED_INFO_ATTR</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._provider</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._secureRandomAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststorePath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getExcludeCipherSuites()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProtocol()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProvider()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSecureRandomAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslKeyManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslTrustManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setExcludeCipherSuites(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProtocol(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProvider(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSecureRandomAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._idStr</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getIdStr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.CACHED_INFO_ATTR</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._provider</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._secureRandomAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststorePath</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getExcludeCipherSuites()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getProtocol()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getProvider()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSecureRandomAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslKeyManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslTrustManagerFactoryAlgorithm()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststore()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststoreType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setExcludeCipherSuites(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setProtocol(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setProvider(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSecureRandomAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststore(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststoreType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equalsIgnoreCase(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getBytes()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.print(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getBytes(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.getChars(int, int, char[], int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.hashCode()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL.deduceKeyLength(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.regionMatches(boolean, int, java.lang.String, int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(char, char)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toCharArray()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toLowerCase()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toUpperCase()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.StringBuffer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(char)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.CharSequence, int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.getChars(int, int, char[], int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.length()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.currentTimeMillis()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getStatsOnMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getProperty(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.inheritedChannel()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Thread</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorThread</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.access$000(org.eclipse.jetty.server.AbstractConnector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.join()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.lang.Thread.Thread()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.currentThread()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.getContextClassLoader()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.getPriority()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.interrupt()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.join()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.join()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.setPriority(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Thread.sleep(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadDeath</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.ThreadLocal</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.__currentConnection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.__context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.__outerScope</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.ThreadLocal()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.get()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ThreadLocal.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.getCause()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Throwable.printStackTrace(java.io.PrintWriter)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.UnsupportedOperationException</name>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setAlgorithm(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.InetAddress</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.net.InetAddress.getByName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetAddress.getHostAddress()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetAddress.getHostName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetAddress.getLocalHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.InetSocketAddress</name>
            <feature confirmed="no">
                <name>java.net.InetSocketAddress.InetSocketAddress(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.InetSocketAddress.InetSocketAddress(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.MalformedURLException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
            <feature confirmed="no">
                <name>java.net.MalformedURLException.MalformedURLException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.ServerSocket</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.net.ServerSocket.ServerSocket(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.ServerSocket(int, int, java.net.InetAddress)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.accept()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.bind(java.net.SocketAddress, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.getLocalPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.isClosed()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.ServerSocket.setReuseAddress(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.Socket</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._socket</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$000(org.eclipse.jetty.server.nio.SelectChannelConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.configure(java.net.Socket)</inbound>
            <feature confirmed="no">
                <name>java.net.Socket.getSoTimeout()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.Socket.setSoLinger(boolean, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.Socket.setSoTimeout(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.Socket.setTcpNoDelay(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.SocketAddress</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.openStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URLClassLoader</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <feature confirmed="no">
                <name>java.net.URLClassLoader.getURLs()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.UnknownHostException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.nio</name>
        <class confirmed="no">
            <name>java.nio.ByteBuffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.nio.ByteBuffer.isDirect()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.nio.channels</name>
        <class confirmed="no">
            <name>java.nio.channels.ByteChannel</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.Channel</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.SelectableChannel</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.SelectionKey</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <feature confirmed="no">
                <name>java.nio.channels.SelectionKey.channel()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.ServerSocketChannel</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.accept()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.configureBlocking(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.isOpen()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.open()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.ServerSocketChannel.socket()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.nio.channels.SocketChannel</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <feature confirmed="no">
                <name>java.nio.channels.SocketChannel.configureBlocking(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.nio.channels.SocketChannel.socket()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.security</name>
        <class confirmed="no">
            <name>java.security.KeyStore</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            <feature confirmed="no">
                <name>java.security.KeyStore.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.KeyStore.load(java.io.InputStream, char[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.NoSuchAlgorithmException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
        </class>
        <class confirmed="no">
            <name>java.security.Principal</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteUser()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.getUserPrincipal()</inbound>
            <feature confirmed="no">
                <name>java.security.Principal.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteUser()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.SecureRandom</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <feature confirmed="no">
                <name>java.security.SecureRandom.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.Security</name>
            <feature confirmed="no">
                <name>java.security.Security.getProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.security.cert</name>
        <class confirmed="no">
            <name>java.security.cert.Certificate</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
        </class>
        <class confirmed="no">
            <name>java.security.cert.CertificateFactory</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <feature confirmed="no">
                <name>java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.security.cert.CertificateFactory.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.cert.X509Certificate</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._certs</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getCerts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._certs</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getCerts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.sql</name>
        <class confirmed="no">
            <name>java.sql.Blob</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.sql.Blob.getBinaryStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.Connection</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="no">
                <name>java.sql.Connection.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.Connection.createStatement()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.Connection.getMetaData()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.Connection.prepareStatement(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.Connection.setAutoCommit(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.DatabaseMetaData</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <feature confirmed="no">
                <name>java.sql.DatabaseMetaData.getDatabaseProductName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.DatabaseMetaData.getIndexInfo(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.DatabaseMetaData.getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.DatabaseMetaData.storesLowerCaseIdentifiers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.DatabaseMetaData.storesUpperCaseIdentifiers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.DriverManager</name>
            <feature confirmed="no">
                <name>java.sql.DriverManager.getConnection(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.PreparedStatement</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.executeQuery()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.executeUpdate()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.setLong(int, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.PreparedStatement.setString(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.ResultSet</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.sql.ResultSet.getBlob(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.ResultSet.getBytes(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.ResultSet.getLong(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.ResultSet.getString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.sql.ResultSet.next()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.sql.SQLException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
        </class>
        <class confirmed="no">
            <name>java.sql.Statement</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <feature confirmed="no">
                <name>java.sql.Statement.executeUpdate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._buffers</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.get(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.iterator()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.remove(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.__defaultLocale</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.EMPTY_LIST</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.emptySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.enumeration(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.singleton(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessionMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.EventListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._eventListeners</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.EventListener[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.newAttributeMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setInitParams(java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.listIterator()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.listIterator(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.ListIterator</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.util.ListIterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.hasPrevious()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.next()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.previous()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ListIterator.remove()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Locale</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
            <feature confirmed="no">
                <name>java.util.Locale.Locale(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Locale.US</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Locale.getDefault()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getLocale()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Locale.getLanguage()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Locale.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._savedNewSessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope.getRoleRefMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._localeEncodingMap</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._managedAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParams()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setInitParams(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.initValues()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.newAttributeMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.newAttributeMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessionMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.newAttributeMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._attributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAttributeMap(java.util.concurrent.ConcurrentHashMap)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="no">
                <name>java.util.Map.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.entrySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.values()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getKey()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getValue()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Random</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.getRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.setRandom(java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager(java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getRandom()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.setRandom(java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <feature confirmed="no">
                <name>java.util.Random.Random()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Random.nextInt()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Random.nextLong()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Random.setSeed(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.clear()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.getServers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._connections</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._connectors</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.clear()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.StringTokenizer</name>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.hasMoreTokens()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.StringTokenizer.nextToken()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TimeZone</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <feature confirmed="no">
                <name>java.util.TimeZone.getTimeZone(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Timer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._timer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._timer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            <feature confirmed="no">
                <name>java.util.Timer.Timer(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Timer.cancel()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Timer.schedule(java.util.TimerTask, long, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TimerTask</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._saveTask</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._task</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._task</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            <feature confirmed="no">
                <name>java.util.TimerTask.TimerTask()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.HashSessionManager$1(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.HashSessionManager$2(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.JDBCSessionIdManager$1(org.eclipse.jetty.server.session.JDBCSessionIdManager)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TimerTask.cancel()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.BlockingQueue</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.LocalConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.requests</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.BlockingQueue.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.BlockingQueue.take()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentHashMap</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAttributeMap(java.util.concurrent.ConcurrentHashMap)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessions()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.CopyOnWriteArraySet</name>
            <feature confirmed="no">
                <name>java.util.concurrent.CopyOnWriteArraySet.CopyOnWriteArraySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.CountDownLatch</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.latch</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.CountDownLatch.CountDownLatch(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.CountDownLatch.await()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.CountDownLatch.countDown()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.LinkedBlockingQueue</name>
            <feature confirmed="no">
                <name>java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.LocalConnector()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent.atomic</name>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicInteger</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requests</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsExpired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsResumed()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicInteger, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.AtomicInteger()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.compareAndSet(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicInteger, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.decrementAndGet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.get()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsExpired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsResumed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicInteger, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.incrementAndGet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicInteger.set(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.atomic.AtomicLong</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._statsStartedAt</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMin()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeMin()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeTotal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicLong, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.AtomicLong()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.addAndGet(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.compareAndSet(long, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicLong, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.get()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicLong, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.concurrent.atomic.AtomicLong.set(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.naming</name>
        <class confirmed="no">
            <name>javax.naming.InitialContext</name>
            <feature confirmed="no">
                <name>javax.naming.InitialContext.InitialContext()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.naming.InitialContext.lookup(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.net.ssl</name>
        <class confirmed="no">
            <name>javax.net.ssl.KeyManager</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.KeyManagerFactory</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.KeyManagerFactory.getKeyManagers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore, char[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLContext</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.setSslContext(javax.net.ssl.SSLContext)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslContext(javax.net.ssl.SSLContext)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslContext(javax.net.ssl.SSLContext)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLContext.createSSLEngine()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLContext.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLContext.getInstance(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLContext.getServerSocketFactory()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLEngine</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.getEnabledCipherSuites()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.getSession()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.setEnabledCipherSuites(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.setNeedClientAuth(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.setUseClientMode(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLEngine.setWantClientAuth(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLPeerUnverifiedException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLServerSocket</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocket.getEnabledCipherSuites()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocket.setEnabledCipherSuites(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocket.setNeedClientAuth(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocket.setWantClientAuth(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLServerSocketFactory</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocketFactory.createServerSocket(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLServerSocketFactory.createServerSocket(int, int, java.net.InetAddress)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLSession</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.getApplicationBufferSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.getCipherSuite()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.getId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.getPeerCertificateChain()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.getValue(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSession.putValue(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.SSLSocket</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSocket.getSession()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.SSLSocket.startHandshake()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.TrustManager</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.net.ssl.TrustManagerFactory</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            <feature confirmed="no">
                <name>javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.TrustManagerFactory.getTrustManagers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.security.auth</name>
        <class confirmed="no">
            <name>javax.security.auth.Subject</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.getSubject()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.getSubject()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.security.cert</name>
        <class confirmed="no">
            <name>javax.security.cert.X509Certificate</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            <feature confirmed="no">
                <name>javax.security.cert.X509Certificate.getEncoded()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet</name>
        <class confirmed="no">
            <name>javax.servlet.RequestDispatcher</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getNamedDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.Servlet</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlet(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContext</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._suspendedContext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getDispatchContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getSuspendedContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContext.getContextPath()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContextAttributeEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextAttributeEvent.ServletContextAttributeEvent(javax.servlet.ServletContext, java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContextAttributeListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextAttributeListener.attributeAdded(javax.servlet.ServletContextAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextAttributeListener.attributeRemoved(javax.servlet.ServletContextAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextAttributeListener.attributeReplaced(javax.servlet.ServletContextAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContextEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextEvent.ServletContextEvent(javax.servlet.ServletContext)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletContextListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextListener.contextDestroyed(javax.servlet.ServletContextEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletContextListener.contextInitialized(javax.servlet.ServletContextEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServlet(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.ServletException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletException.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletInputStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._in</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpInput</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.val$in</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletInputStream.ServletInputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.close()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletOutputStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.__nullServletOut</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletOutputStream.ServletOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletOutputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletOutputStream.write(byte[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequest</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequest.getCharacterEncoding()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequest.removeAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequestAttributeEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestAttributeEvent.ServletRequestAttributeEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest, java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequestAttributeListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestAttributeListener.attributeAdded(javax.servlet.ServletRequestAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestAttributeListener.attributeRemoved(javax.servlet.ServletRequestAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestAttributeListener.attributeReplaced(javax.servlet.ServletRequestAttributeEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequestEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestEvent.ServletRequestEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletRequestListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletRequestListener.requestInitialized(javax.servlet.ServletRequestEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletResponse</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._response</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.ServletResponse.getOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletResponse.getWriter()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.ServletResponse.resetBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.ServletResponseWrapper</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.servlet.http</name>
        <class confirmed="no">
            <name>javax.servlet.http.Cookie</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lastCookies</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.Cookie(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getComment()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getDomain()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getMaxAge()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getPath()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getSecure()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getValue()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.getVersion()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.setComment(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.setDomain(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.setPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.Cookie.setVersion(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.Cookie[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServletRequest</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Wrapped.getHttpServletRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getCookies()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getDateHeader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getLocalPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getMethod()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getPathInfo()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getQueryString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getRemoteAddr()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getRequestURI()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getRequestedSessionId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getServerName()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.getSession(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.isSecure()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpServletResponse</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Wrapped.getHttpServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.getOutputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.getWriter()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.isCommitted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.sendError(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.sendError(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setContentLength(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setDateHeader(java.lang.String, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpServletResponse.setStatus(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSession</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._session</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.complete(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSession.getId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionActivationListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionActivationListener.sessionDidActivate(javax.servlet.http.HttpSessionEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionActivationListener.sessionWillPassivate(javax.servlet.http.HttpSessionEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionAttributeListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionAttributeListener.attributeAdded(javax.servlet.http.HttpSessionBindingEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionAttributeListener.attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionAttributeListener.attributeReplaced(javax.servlet.http.HttpSessionBindingEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionBindingEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionBindingListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionBindingListener.valueBound(javax.servlet.http.HttpSessionBindingEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionBindingListener.valueUnbound(javax.servlet.http.HttpSessionBindingEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionContext</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.__nullSessionContext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access$100()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionEvent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.servlet.http.HttpSessionListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionListener.sessionCreated(javax.servlet.http.HttpSessionEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.servlet.http.HttpSessionListener.sessionDestroyed(javax.servlet.http.HttpSessionEvent)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.sql</name>
        <class confirmed="no">
            <name>javax.sql.DataSource</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._datasource</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            <feature confirmed="no">
                <name>javax.sql.DataSource.getConnection()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.continuation</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.continuation.Continuation</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.continuation.ContinuationListener</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.continuation.ContinuationListener.onComplete(org.eclipse.jetty.continuation.Continuation)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.continuation.ContinuationListener.onTimeout(org.eclipse.jetty.continuation.Continuation)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.continuation.ContinuationThrowable</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.__exception</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.continuation.ContinuationThrowable.ContinuationThrowable()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.http</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.AbstractGenerator</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._generator</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.NO_BYTES</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.addContent(byte)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.addContent(org.eclipse.jetty.io.Buffer, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.blockForOutput(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.completeUncheckedAddContent()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.flush(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.getContentWritten()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.getUncheckedBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.isBufferFull()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.isCommitted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.isContentWritten()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.isOpen()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.AbstractGenerator.prepareUncheckedAddContent()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.EncodedHttpURI</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.EncodedHttpURI.EncodedHttpURI(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.Generator</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isResponseCommitted()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getBufferSize()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.complete()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.completeHeader(org.eclipse.jetty.http.HttpFields, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.flushBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.getContentBufferSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getBufferSize()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.getContentWritten()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.increaseContentBufferSize(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.isCommitted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isResponseCommitted()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.isComplete()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.isContentWritten()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.isIdle()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.isPersistent()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.reset(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.resetBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.sendError(int, java.lang.String, java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setContentLength(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setHead(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setPersistent(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setResponse(int, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setSendServerVersion(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Generator.setVersion(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpBuffers</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpBuffers.HttpBuffers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpBuffers.doStart()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpBuffers.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpBuffers.getRequestBuffers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpBuffers.getResponseBuffers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpContent</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getContentLength()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getContentType()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getInputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getLastModified()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpContent.getResource()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpCookie</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpCookie.HttpCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, boolean, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpException.HttpException(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpException.HttpException(int, java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpException.getReason()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpException.getStatus()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpFields</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHttpFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.HttpFields()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.__dateCache</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.add(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.add(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.addDateField(java.lang.String, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.addLongField(java.lang.String, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.addSetCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.String, boolean, boolean, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.addSetCookie(org.eclipse.jetty.http.HttpCookie)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.containsKey(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.containsKey(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.formatDate(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.get(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getDateField(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getFieldNames()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getLongField(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getLongField(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getStringField(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getStringField(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getValues(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getValues(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.getValues(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.put(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.putDateField(java.lang.String, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.putDateField(org.eclipse.jetty.io.Buffer, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.putLongField(java.lang.String, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.putLongField(org.eclipse.jetty.io.Buffer, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.qualityList(java.util.Enumeration)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.remove(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpFields.valueParameters(java.lang.String, java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpGenerator</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpGenerator.HttpGenerator(org.eclipse.jetty.io.Buffers, org.eclipse.jetty.io.EndPoint)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpGenerator.send1xx(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpGenerator.sendResponse(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpGenerator.setServerVersion(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpHeaderValues</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.CACHE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.CLOSE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.KEEP_ALIVE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.get(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.getOrdinal(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaderValues.lookup(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpHeaders</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CACHE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CACHE_CONTROL_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CONNECTION_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CONTENT_LANGUAGE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CONTENT_LENGTH_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.COOKIE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.DATE_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.HOST_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.LAST_MODIFIED_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpHeaders.getOrdinal(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpMethods</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpMethods.HEAD_BUFFER</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpParser</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._parser</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.HttpParser(org.eclipse.jetty.io.Buffers, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.http.HttpParser$EventHandler)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.blockForContent(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.getContentLength()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.getContentRead()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.getHeaderBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.isChunking()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.setForceContentBuffer(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser.setState(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpParser$EventHandler</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpParser$EventHandler.HttpParser$EventHandler()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpStatus</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpStatus.getMessage(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpURI</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUri()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.HttpURI()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.HttpURI(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.decodeQueryTo(org.eclipse.jetty.util.MultiMap)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.decodeQueryTo(org.eclipse.jetty.util.MultiMap, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getDecodedPath()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getFragment()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getPathAndParam()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getQuery()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.getQuery(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.hasQuery()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.parse(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpURI.writeTo(org.eclipse.jetty.util.Utf8StringBuilder)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.HttpVersions</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.HttpVersions.CACHE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.MimeTypes</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mimeTypes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.access$000(org.eclipse.jetty.server.ResourceCache)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$000(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.MimeTypes.CACHE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.MimeTypes.MimeTypes()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.MimeTypes.getCharsetFromContentType(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.MimeTypes.getMimeByExtension(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.Parser</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getParser()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Parser.isComplete()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Parser.isIdle()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Parser.isMoreInBuffer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Parser.parseAvailable()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.Parser.reset(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.PathMap</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePathMap</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextMap</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.PathMap.PathMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.PathMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.PathMap.getLazyMatches(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.PathMap.getMatch(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.PathMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.PathMap$Entry</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.http.security</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.security.Password</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keyPassword</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._password</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._trustPassword</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keyPassword</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._password</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._trustPassword</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.security.Password.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.http.ssl</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint.SslSelectChannelEndPoint(org.eclipse.jetty.io.Buffers, java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey, javax.net.ssl.SSLEngine)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint.getSSLEngine()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.io</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.AsyncEndPoint</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.AsyncEndPoint.dispatch()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.Buffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isRequestHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isResponseHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newRequestBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newRequestHeader(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newResponseBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newResponseHeader(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStampBuffer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._contentType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModifiedBytes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getLastModified()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setBuffer(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setContentType(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.fill(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.isRequestHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.isResponseHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestHeader(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseHeader(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.isHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newBuffer(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newHeader(int)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.array()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.get()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.get(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.getIndex()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.length()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.peek(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.peek(int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.Buffer.readFrom(java.io.InputStream, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.BufferCache</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache.get(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache.get(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache.getOrdinal(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache.lookup(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.BufferCache$CachedBuffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache$CachedBuffer.getAssociate(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache$CachedBuffer.getOrdinal()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferCache$CachedBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.BufferDateCache</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferDateCache.formatBuffer(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.BufferUtil</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferUtil.to8859_1_String(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.BufferUtil.toInt(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.Buffers</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getRequestBuffers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getResponseBuffers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslBuffers</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.ByteArrayBuffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._buf</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.getResponsesBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.requestsBuffer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.responsesBuffer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._cacheControl</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(byte[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newRequestBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newRequestHeader(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newResponseBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.newResponseHeader(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.asArray()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.length()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.toString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.wrap(byte[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayBuffer.wrap(byte[], int, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.ByteArrayEndPoint</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayEndPoint.ByteArrayEndPoint(byte[], int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayEndPoint.getIn()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayEndPoint.getOut()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ByteArrayEndPoint.setGrowOutput(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.Connection</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.EndPoint</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalAddr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemotePort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.flush()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getLocalAddr()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalAddr()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getLocalHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getLocalPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getRemoteAddr()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getRemoteHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getRemotePort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemotePort()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.getTransport()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.isBlocking()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.isBufferingInput()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.isBufferingOutput()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EndPoint.isOpen()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.EofException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EofException.EofException()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.EofException.EofException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.RuntimeIOException</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.ThreadLocalBuffers</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ThreadLocalBuffers.ThreadLocalBuffers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.SslSelectChannelConnector$1(org.eclipse.jetty.server.ssl.SslSelectChannelConnector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ThreadLocalBuffers.setBufferSize(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.ThreadLocalBuffers.setHeaderSize(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.UncheckedPrintWriter</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.UncheckedPrintWriter.UncheckedPrintWriter(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.View</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.View.View(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getBuffer()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.WriterOutputStream</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.WriterOutputStream.WriterOutputStream(java.io.Writer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.io.bio</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.bio.SocketEndPoint</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.bio.SocketEndPoint.SocketEndPoint(java.net.Socket)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.bio.SocketEndPoint.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.bio.SocketEndPoint.fill(org.eclipse.jetty.io.Buffer)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.fill(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.bio.SocketEndPoint.getTransport()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.io.nio</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.ChannelEndPoint</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.ChannelEndPoint.ChannelEndPoint(java.nio.channels.ByteChannel)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.DirectNIOBuffer</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newHeader(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(java.nio.ByteBuffer, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.IndirectNIOBuffer</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.isRequestHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.isResponseHeader(org.eclipse.jetty.io.Buffer)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestHeader(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseHeader(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(java.nio.ByteBuffer, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.val$endpoint</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.SelectChannelEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.cancelIdle()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.getConnection()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.getSelectSet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.scheduleIdle()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectChannelEndPoint.setWritable(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.SelectorManager</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.SelectorManager()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.doSelect(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.dump()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.isRunning()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.register(java.nio.channels.ServerSocketChannel)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.setLowResourcesConnections(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.setLowResourcesMaxIdleTime(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.setMaxIdleTime(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.setSelectSets(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.io.nio.SelectorManager$SelectSet</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager$SelectSet.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager$SelectSet.getNow()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.io.nio.SelectorManager$SelectSet.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AbstractConnector</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpBuffers</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.this$0</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpBuffers.HttpBuffers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptQueueSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorPriorityOffset</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptors</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialPort</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialScheme</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedForHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedHostHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedServerHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralPort</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralScheme</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._lowResourceMaxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._port</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._reuseAddress</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._soLingerTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsLock</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.LocalConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.AbstractNIOConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._acceptQueueSize</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getAcceptQueueSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setAcceptQueueSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._acceptorPriorityOffset</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.access$100(org.eclipse.jetty.server.AbstractConnector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getAcceptorPriorityOffset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setAcceptorPriorityOffset(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._acceptorThread</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.access$000(org.eclipse.jetty.server.AbstractConnector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.join()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._acceptors</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getAcceptors()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setAcceptors(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._confidentialPort</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConfidentialPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setConfidentialPort(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._confidentialScheme</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConfidentialScheme()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setConfidentialScheme(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connections</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnections()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationAve()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsAve()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsDurationMax</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsDurationMin</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsDurationTotal</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationAve()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsOpen</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsOpen()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsOpenMax</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsOpenMin</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMax</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMin</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._forwarded</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isForwarded()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._forwardedForHeader</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedForHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedForHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._forwardedHostHeader</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedHostHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedHostHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._forwardedServerHeader</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedServerHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwardedServerHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._host</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setHost(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._hostHeader</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHostHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setHostHeader(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._integralPort</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getIntegralPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setIntegralPort(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._integralScheme</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getIntegralScheme()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setIntegralScheme(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._lowResourceMaxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getLowResourceMaxIdleTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setLowResourceMaxIdleTime(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._maxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getMaxIdleTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setMaxIdleTime(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._port</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setPort(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._requests</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsAve()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getRequests()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._reuseAddress</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getReuseAddress()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setReuseAddress(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._server</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getServer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._soLingerTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getSoLingerTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setSoLingerTime(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._statsLock</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._statsStartedAt</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getStatsOn()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getStatsOnMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._threadPool</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getThreadPool()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector._useDNS</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getResolveNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setResolveNames(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.access$000(org.eclipse.jetty.server.AbstractConnector)</name>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorThread</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.access$100(org.eclipse.jetty.server.AbstractConnector)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorPriorityOffset</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.InetAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getByName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getHostName()</outbound>
                <outbound type="class" confirmed="no">java.net.UnknownHostException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getStringField(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.HOST_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._hostHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._useDNS</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedForHeader()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedHostHeader()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getForwardedServerHeader()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteAddr(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteHost(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServerName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServerPort(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.AbstractConnector.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoLinger(boolean, int)</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setTcpNoDelay(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._soLingerTime</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connections</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationTotal</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpen</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsLock</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequests()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getTimeStamp()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpen</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsLock</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isForwarded()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpBuffers.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getAcceptors()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.open()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.LifeCycle.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.doStop()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.interrupt()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpBuffers.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.close()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.LifeCycle.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getAcceptQueueSize()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptQueueSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getAcceptorPriorityOffset()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorPriorityOffset</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getAcceptors()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptors</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConfidentialPort()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialPort</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConfidentialScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialScheme</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnection()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnections()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connections</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationAve()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connections</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationTotal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMax()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMax</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMin()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMin</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationTotal()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationTotal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsOpen()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpen</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMax()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMax</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMin()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMin</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsAve()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connections</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._requests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMax()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMax</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMin()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMin</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getForwardedForHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedForHeader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getForwardedHostHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedHostHeader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getForwardedServerHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedServerHeader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getHost()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._host</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getHostHeader()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._hostHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getIntegralPort()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralPort</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getIntegralScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralScheme</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.AbstractConnector.getLocalPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getLowResourceMaxIdleTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._lowResourceMaxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getMaxIdleTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._maxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._name</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.getLocalPort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getPort()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._port</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getRequests()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._requests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getResolveNames()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._useDNS</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getReuseAddress()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._reuseAddress</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getServer()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getSoLingerTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._soLingerTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getStatsOn()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getStatsOnMs()</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.getThreadPool()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isConfidential(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isForwarded()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwarded</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isIntegral(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isLowResources()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.isLowOnThreads()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isRequestHeader(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.isResponseHeader(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.AbstractConnector.isRunning()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.join()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.join()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorThread</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.newBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.newRequestBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.newRequestHeader(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.newResponseBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.newResponseHeader(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.AbstractConnector.open()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.persist(org.eclipse.jetty.io.EndPoint)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setAcceptQueueSize(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptQueueSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setAcceptorPriorityOffset(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptorPriorityOffset</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setAcceptors(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._acceptors</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setConfidentialPort(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialPort</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setConfidentialScheme(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._confidentialScheme</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwarded</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setForwardedForHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedForHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setForwardedHostHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedHostHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setForwardedServerHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._forwardedServerHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setHost(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._host</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setHostHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._hostHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setIntegralPort(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralPort</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setIntegralScheme(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._integralScheme</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setLowResourceMaxIdleTime(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._lowResourceMaxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setMaxIdleTime(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._maxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._name</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setPort(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._port</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setResolveNames(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._useDNS</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setReuseAddress(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._reuseAddress</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setSoLingerTime(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._soLingerTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.statsReset()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.statsReset()</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connections</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsDurationTotal</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpen</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsOpenMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMax</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._connectionsRequestsMin</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._statsStartedAt</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.stopAccept(int)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.getLocalPort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getPort()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AbstractConnector$Acceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor._acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector$Acceptor._acceptor</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getPriority()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setPriority(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EofException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor._acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.accept(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.access$000(org.eclipse.jetty.server.AbstractConnector)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.access$100(org.eclipse.jetty.server.AbstractConnector)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.AbstractConnector.isRunning()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AbstractConnector$Acceptor.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.AbstractConnector$Acceptor(org.eclipse.jetty.server.AbstractConnector, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AsyncContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.ASYNC_CONTEXT_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.ASYNC_PATH_INFO</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.ASYNC_QUERY_STRING</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.ASYNC_REQUEST_URI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.ASYNC_SERVLET_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.complete()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.dispatch()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.dispatch(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.dispatch(javax.servlet.ServletContext, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.getRequest()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.getResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.hasOriginalRequestAndResponse()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContext.start(java.lang.Runnable)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AsyncContinuation</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.Continuation</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContext</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isSuspended()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncStarted()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAsyncTimeout(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._timeoutMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.DEFAULT_TIMEOUT</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__ASYNCSTARTED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__ASYNCWAIT</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__COMPLETED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__COMPLETING</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__DISPATCHED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__IDLE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__REDISPATCH</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__REDISPATCHED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__REDISPATCHING</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__UNCOMPLETED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.__exception</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._connection</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._event</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAsyncEventState()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._expireAt</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._expired</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isExpired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._initial</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isInitial()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._listeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancel()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._responseWrapped</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isResponseWrapped()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._resumed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isResumed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._state</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isAsyncStarted()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isCompleting()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isSuspended()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isUncompleted()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation._timeoutMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAsyncTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAsyncTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.cancel()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.notifyAll()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isBlocking()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._timeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expireAt</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancel()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.complete()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.dispatch()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._resumed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.resume()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.doComplete()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.Continuation</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener.onComplete(org.eclipse.jetty.continuation.Continuation)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.expired()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.Continuation</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener.onTimeout(org.eclipse.jetty.continuation.Continuation)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getAsyncEventState()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getAsyncTimeout()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._timeoutMs</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getHistory()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getRequest()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.getStatusString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._resumed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.handling()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isAsync()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isAsyncStarted()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncStarted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isComplete()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isCompleting()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isExpired()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isInitial()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isResponseWrapped()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isResumed()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._resumed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isSuspended()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isSuspended()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.isUncompleted()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.recycle()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._listeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._resumed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._timeoutMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.resume()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.AsyncEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.AsyncEndPoint.dispatch()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isBlocking()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.wait(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isBlocking()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._timeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expireAt</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._timeoutMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.setAsyncTimeout(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._timeoutMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAsyncTimeout(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.setTimeout(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAsyncTimeout(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.static {}</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable.ContinuationThrowable()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.__exception</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.suspend()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletContext()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._expired</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._resumed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponseWrapper</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._responseWrapped</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletContext()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.undispatch()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable.ContinuationThrowable()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.__exception</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isSuspended()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation.unhandle()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._initial</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._state</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.AsyncContinuation$AsyncEventState$1(org.eclipse.jetty.server.AsyncContinuation$AsyncEventState)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.this$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._event</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAsyncEventState()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.AsyncContinuation$AsyncEventState$1(org.eclipse.jetty.server.AsyncContinuation$AsyncEventState)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._suspendedContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._timeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.this$0</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getDispatchContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.dispatch(javax.servlet.ServletContext, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._request</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._response</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._suspendedContext</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getSuspendedContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._timeout</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getDispatchContext()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._path</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getRequest()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._dispatchContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._suspendedContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getSuspendedContext()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._suspendedContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.AsyncContinuation$AsyncEventState$1(org.eclipse.jetty.server.AsyncContinuation$AsyncEventState)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.this$1</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task.Timeout$Task()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.this$1</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.AsyncContinuation$AsyncEventState$1(org.eclipse.jetty.server.AsyncContinuation$AsyncEventState)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.expired()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$1</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$2</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.login(java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$ResponseSent</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Wrapped</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthentication()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResolvedUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.NOT_CHECKED</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.SEND_CONTINUE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.SEND_FAILURE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.SEND_SUCCESS</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.UNAUTHENTICATED</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication.static {}</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$1.Authentication$1()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$2.Authentication$2()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$3.Authentication$3()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$4.Authentication$4()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$5.Authentication$5()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.NOT_CHECKED</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.SEND_CONTINUE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.SEND_FAILURE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.SEND_SUCCESS</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.UNAUTHENTICATED</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$1.Authentication$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$1.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$2.Authentication$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$2.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$3</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Challenge</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$3.Authentication$3()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$3.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$4</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Failure</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$4.Authentication$4()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$4.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$5</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$SendSuccess</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$5.Authentication$5()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$5.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$Challenge</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$ResponseSent</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$3</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$Deferred</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$Deferred.login(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$Failure</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$ResponseSent</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$4</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$ResponseSent</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Challenge</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Failure</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$SendSuccess</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$SendSuccess</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$ResponseSent</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$5</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$User</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResolvedUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$User.getAuthMethod()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$User.getUserIdentity()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResolvedUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$User.isUserInRole(org.eclipse.jetty.server.UserIdentity$Scope, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$User.logout()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Authentication$Wrapped</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$Wrapped.getHttpServletRequest()</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Authentication$Wrapped.getHttpServletResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Connector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getConnector()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResolveNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._connectors</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getConnectors()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConfidentialPort()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConfidentialScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnections()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsDurationAve()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsDurationMax()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsDurationMin()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsDurationTotal()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsOpen()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsOpenMax()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsOpenMin()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsRequestsAve()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsRequestsMax()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getConnectionsRequestsMin()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getHost()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getIntegralPort()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getIntegralScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getLocalPort()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getLowResourceMaxIdleTime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getMaxIdleTime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getPort()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getRequestBufferSize()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getRequestBuffers()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getRequestHeaderSize()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getRequests()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getResolveNames()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResolveNames()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getResponseBufferSize()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getResponseBuffers()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getResponseHeaderSize()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getServer()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getStatsOn()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.getStatsOnMs()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.isConfidential(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.isIntegral(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.isLowResources()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.persist(org.eclipse.jetty.io.EndPoint)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setHost(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setLowResourceMaxIdleTime(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setMaxIdleTime(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setPort(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setRequestBufferSize(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setRequestHeaderSize(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setResponseBufferSize(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setResponseHeaderSize(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.setStatsOn(boolean)</name>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Connector.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Connector.statsReset()</name>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Connector.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.server.Connector[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.CookieCutter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookies</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.CookieCutter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter._cookies</name>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter._fields</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter._lastCookies</name>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter._lazyFields</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._fields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lastCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lazyFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, int, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.remove(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.getCookies()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._fields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lastCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lazyFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.parseFields()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.Cookie(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.setComment(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.setDomain(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.setPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.setVersion(int)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._fields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lastCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lazyFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.remove(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.toArray(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.QuotedStringTokenizer.unquote(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.reset()</name>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._fields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._fields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lastCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter._lazyFields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Dispatcher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._contextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._dQuery</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._contextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._dQuery</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_EXCEPTION</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_EXCEPTION_TYPE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_MESSAGE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_REQUEST_URI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_SERVLET_NAME</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.ERROR_STATUS_CODE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.FORWARD_CONTEXT_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.FORWARD_PATH_INFO</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.FORWARD_QUERY_STRING</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.FORWARD_REQUEST_URI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.FORWARD_SERVLET_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.INCLUDE_CONTEXT_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.INCLUDE_PATH_INFO</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.INCLUDE_QUERY_STRING</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.INCLUDE_REQUEST_URI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.INCLUDE_SERVLET_PATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.__FORWARD_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.__INCLUDE_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.__JSP_FILE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher._contextHandler</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher._dQuery</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher._named</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher._path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher._uri</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.ERROR</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.FORWARD</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequest.getCharacterEncoding()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequest.removeAttribute(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletResponse.getOutputStream()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletResponse.getWriter()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletResponse.resetBuffer()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._contextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._dQuery</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributes()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContextPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServletPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isWriting()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.MultiMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.entrySet()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.size()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.UrlEncoded.decodeTo(java.lang.String, org.eclipse.jetty.util.MultiMap, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequest.getCharacterEncoding()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequest.removeAttribute(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._contextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._dQuery</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._named</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._path</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.INCLUDE</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.include()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.included()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributes()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.MultiMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.entrySet()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.size()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.UrlEncoded.decodeTo(java.lang.String, org.eclipse.jetty.util.MultiMap, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._contextPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._requestURI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes._servletPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.clearAttributes()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttributeNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._contextPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._requestURI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes._servletPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.clearAttributes()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttributeNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._query</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.access$000(org.eclipse.jetty.server.Dispatcher)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.DispatcherType</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dispatcherType</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.$VALUES</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.ASYNC</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.DispatcherType(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.ERROR</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.error(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.FORWARD</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.INCLUDE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.REQUEST</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.ASYNC</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.DispatcherType(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.ERROR</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.FORWARD</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.INCLUDE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.DispatcherType.values()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.$VALUES</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.DispatcherType[]</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType[].clone()</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.server.DispatcherType[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.values()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.DispatcherType[].clone()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Handler</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getHandlers()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$Graceful</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Handler.destroy()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Handler.getServer()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Handler.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Handler.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Handler.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HandlerContainer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HandlerContainer.getChildHandlerByClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HandlerContainer.getChildHandlers()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HandlerContainer.getChildHandlersByClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HandlerContainer.getHandlers()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.server.Handler[]</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Handler[].clone()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpConnection</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation._connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.HttpConnection$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isSecure()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.flushBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getBufferSize()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHttpFields()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$000(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$100(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._connection</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$100(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$100(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$200(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.$assertionsDisabled</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.EncodedHttpURI.EncodedHttpURI(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setSendServerVersion(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpBuffers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpBuffers.getRequestBuffers()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpBuffers.getResponseBuffers()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.HttpFields()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpGenerator.HttpGenerator(org.eclipse.jetty.io.Buffers, org.eclipse.jetty.io.EndPoint)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser$EventHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.HttpParser(org.eclipse.jetty.io.Buffers, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.http.HttpParser$EventHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.HttpURI()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.HttpConnection$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._delayedHandling</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect102Processing</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._head</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._host</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._timeStamp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._version</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendServerVersion()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.__CHARSET</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.EncodedHttpURI.EncodedHttpURI(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setSendServerVersion(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.HttpFields()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.HttpURI()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._delayedHandling</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect102Processing</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._head</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._host</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._timeStamp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._version</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendServerVersion()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.__CHARSET</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.UNKNOWN</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.__currentConnection</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._associatedObject</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getAssociatedObject()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setAssociatedObject(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._connector</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResolveNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._delayedHandling</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$500(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._endp</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._expect</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$200(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$202(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._expect100Continue</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$300(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$302(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isExpecting100Continues()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._expect102Processing</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$402(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isExpecting102Processing()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._generator</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isResponseCommitted()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._handling</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._head</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$700(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$702(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._host</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$100(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$102(org.eclipse.jetty.server.HttpConnection, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._in</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._include</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.include()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.included()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._out</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.included()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._parser</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getParser()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._printWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._request</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isSuspended()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._requestFields</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._requests</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$808(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequests()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._response</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._responseFields</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._server</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._timeStamp</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getTimeStamp()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._uri</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._version</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$600(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$602(org.eclipse.jetty.server.HttpConnection, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection._writer</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$100(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._host</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$102(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._host</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$200(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$202(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$300(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$302(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$402(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect102Processing</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$500(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._delayedHandling</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._delayedHandling</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$600(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._version</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$602(org.eclipse.jetty.server.HttpConnection, int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._version</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$700(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._head</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$702(org.eclipse.jetty.server.HttpConnection, boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._head</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.access$808(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requests</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.complete()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.completeHeader(org.eclipse.jetty.http.HttpFields, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.reset(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setResponse(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.HttpException(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getReason()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.completeResponse()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.complete()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.completeHeader(org.eclipse.jetty.http.HttpFields, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.reset(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setResponse(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.HttpException(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getReason()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.flushResponse()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.flushBuffer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EofException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EofException.EofException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.flushBuffer()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getAssociatedObject()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._associatedObject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getConnector()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.__currentConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getEndPoint()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleDispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getGenerator()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getBufferSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getInputStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isCommitted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpGenerator.send1xx(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.getHeaderBuffer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._in</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getOutputStream()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getParser()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.UncheckedPrintWriter.UncheckedPrintWriter(java.io.Writer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$OutputWriter.setCharacterEncoding(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._printWriter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._writer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getRequest()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getRequestFields()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getRequests()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requests</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getResolveNames()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getResolveNames()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getResponse()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getResponseFields()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHttpFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.getTimeStamp()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._timeStamp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.handle()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.AssertionError.AssertionError()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.flushBuffer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isComplete()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isPersistent()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.sendError(int, java.lang.String, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getReason()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getStatus()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.isComplete()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.isMoreInBuffer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.parseAvailable()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.reset(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.flush()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isBufferingInput()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isBufferingOutput()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.setWritable(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isAsync()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isComplete()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._handling</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.handleRequest()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationThrowable</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isPersistent()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.sendError(int, java.lang.String, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.HttpException(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getReason()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getStatus()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.setState(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getDecodedPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getPort()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.isOpen()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EofException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.RuntimeIOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.handling()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isInitial()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isUncompleted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.unhandle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.persist(org.eclipse.jetty.io.EndPoint)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.ASYNC</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$Output.reopen()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.isRunning()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.include()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._include</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.included()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$Output.reopen()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._include</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.isConfidential(org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isSecure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isExpecting100Continues()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect100Continue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isExpecting102Processing()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._expect102Processing</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isIdle()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isIdle()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.isIdle()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._delayedHandling</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isIncluding()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._include</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isIntegral(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.isIntegral(org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isResponseCommitted()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isCommitted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.isSuspended()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isSuspended()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.reset(boolean)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.reset(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.clear()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.clear()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Parser.reset(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.setAssociatedObject(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._associatedObject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.__currentConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.desiredAssertionStatus()</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.$assertionsDisabled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.__currentConnection</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpConnection$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.HttpConnection$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpConnection$Output</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.included()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getLowResourceMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.isLowResources()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.HttpConnection$Output._closed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isCommitted()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$Output._closed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.flush()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isCommitted()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.print(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$Output._closed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.HttpConnection$Output.reopen()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.included()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.addContent(org.eclipse.jetty.io.Buffer, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.completeUncheckedAddContent()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.getContentWritten()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.getUncheckedBuffer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.prepareUncheckedAddContent()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpContent</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getBuffer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getContentLength()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getContentType()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getLastModified()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpContent.getResource()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.add(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.containsKey(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putDateField(org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putLongField(org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_LENGTH_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.LAST_MODIFIED_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.readFrom(java.io.InputStream, int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.getAssociate(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.HttpConnection$Output._closed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getSetCharacterEncoding()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.lastModified()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.release()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpGenerator.sendResponse(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$Output.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.print(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpConnection$OutputWriter</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpWriter</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._writer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._out</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.HttpConnection$OutputWriter.setCharacterEncoding(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$OutputWriter.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpConnection$RequestHandler</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser$EventHandler</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser$EventHandler.HttpParser$EventHandler()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.HttpConnection$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection, org.eclipse.jetty.server.HttpConnection$1)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler._charset</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$500(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.complete()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.completeHeader(org.eclipse.jetty.http.HttpFields, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.sendError(int, java.lang.String, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setHead(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setResponse(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setVersion(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.CLOSE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONNECTION_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.DATE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.getContentLength()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.isChunking()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler._charset</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._parser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$100(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$200(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$300(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$600(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$700(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$808(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendDateHeader()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$500(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setPersistent(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.add(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpGenerator</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.CACHE</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.CLOSE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.KEEP_ALIVE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.get(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.getOrdinal(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.lookup(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpHeaders</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CACHE</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONNECTION_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.getOrdinal(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.CACHE</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.getCharsetFromContentType(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.getOrdinal()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache.lookup(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler._charset</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._requestFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._responseFields</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$102(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$202(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$302(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$402(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$600(org.eclipse.jetty.server.HttpConnection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.HttpException(int, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpMethods.HEAD_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.parse(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpVersions.CACHE</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.array()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.getIndex()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache.get(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache.getOrdinal(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler._charset</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$102(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$202(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$302(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$402(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$502(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$600(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$602(org.eclipse.jetty.server.HttpConnection, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.access$702(org.eclipse.jetty.server.HttpConnection, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setMethod(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setProtocol(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setTimeStamp(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpConnection$RequestHandler.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.HttpConnection$RequestHandler(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.content(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.messageComplete(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.parsedHeader(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpInput</name>
            <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</name>
                <outbound type="feature" confirmed="no">javax.servlet.ServletInputStream.ServletInputStream()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._parser</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpInput._maxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpInput._parser</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.HttpInput(org.eclipse.jetty.http.HttpParser, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpInput.read()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.blockForContent(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._parser</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpInput.read(byte[], int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.blockForContent(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.get(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpInput._parser</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpOutput</name>
            <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.flush()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</name>
                <outbound type="feature" confirmed="no">javax.servlet.ServletOutputStream.ServletOutputStream()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.NO_BYTES</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(byte[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._buf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._maxIdleTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.HttpConnection$Output(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._buf</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._bytes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._characterEncoding</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._chars</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._closed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.reopen()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._converter</name>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._generator</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput._maxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.HttpOutput(org.eclipse.jetty.http.AbstractGenerator, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._closed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.close()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.flush()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.flush(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._maxIdleTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.flush()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.print(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getBytes()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.reopen()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._closed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.write(byte[])</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.wrap(byte[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._buf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.print(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.wrap(byte[], int, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._buf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.write(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.addContent(byte)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.blockForOutput(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isBufferFull()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isContentWritten()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isOpen()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EofException.EofException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._closed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpOutput.write(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.addContent(org.eclipse.jetty.io.Buffer, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.blockForOutput(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isBufferFull()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isContentWritten()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.AbstractGenerator.isOpen()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EofException.EofException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._closed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._maxIdleTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.write(byte[], int, int)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.HttpWriter</name>
            <outbound type="class" confirmed="no">java.io.Writer</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</name>
                <outbound type="feature" confirmed="no">java.io.Writer.Writer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$OutputWriter.HttpConnection$OutputWriter(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.WRITE_CONV</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.WRITE_ISO1</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.WRITE_UTF8</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter._generator</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.AbstractGenerator</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter._out</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.HttpWriter(org.eclipse.jetty.server.HttpOutput)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.flush()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter._surrogate</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter._writeMode</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.flush()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput.flush()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.getConverter()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._bytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._converter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._bytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._converter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._writeMode</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.ByteArrayOutputStream2(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._bytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._writeMode</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.getBuf()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.getCount()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.reset()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.setCount(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayOutputStream2.writeTo(java.io.OutputStream)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.HttpWriter.write(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getChars(int, int, char[], int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpOutput</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._chars</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.InclusiveByteRange</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.InclusiveByteRange(long, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.first</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.last</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.first</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.InclusiveByteRange(long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getFirst()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getLast(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.getFirst()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.first</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.first</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.last</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getSize(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.getLast()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.last</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.getLast(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.first</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.last</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getSize(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.getSize(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getLast(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.last</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.InclusiveByteRange(long, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getLast()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getLast(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.NumberFormatException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.hasMoreTokens()</outbound>
                <outbound type="feature" confirmed="no">java.util.StringTokenizer.nextToken()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.InclusiveByteRange(long, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.getList(java.lang.Object, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.to416HeaderRangeString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.toHeaderRangeString(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getFirst(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.getLast(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.InclusiveByteRange.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.first</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.last</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.LocalConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.LocalConnector()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.LinkedBlockingQueue.LinkedBlockingQueue()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.requests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.BlockingQueue.take()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.LocalConnector.getThreadPool()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.requests</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.LocalConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.LocalConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.BlockingQueue.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.requests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.getLocalPort()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.toString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.BlockingQueue.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.CountDownLatch.CountDownLatch(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.CountDownLatch.await()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.getResponsesBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.requests</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.LocalConnector.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.LocalConnector.getThreadPool()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.reopen()</name>
                <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector.requests</name>
                <outbound type="class" confirmed="no">java.util.concurrent.BlockingQueue</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.LocalConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.LocalConnector$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.LocalConnector$Request</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.keepOpen</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.latch</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.requestsBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch, org.eclipse.jetty.server.LocalConnector$1)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.getResponsesBuffer()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.responsesBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.keepOpen</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.latch</name>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.requestsBuffer</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.responsesBuffer</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.getResponsesBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.run()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.CountDownLatch</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.CountDownLatch.countDown()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.asArray()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayEndPoint.ByteArrayEndPoint(byte[], int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayEndPoint.getIn()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayEndPoint.getOut()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayEndPoint.setGrowOutput(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.keepOpen</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.latch</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.requestsBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.responsesBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.LocalConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.LocalConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.LocalConnector.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.LocalConnector$Request.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.LocalConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.LocalConnector$Request(org.eclipse.jetty.server.LocalConnector, org.eclipse.jetty.io.ByteArrayBuffer, boolean, java.util.concurrent.CountDownLatch)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.NCSARequestLog</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getDefault()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._append</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._extended</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLatency</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logServer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._retainDays</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getDefault()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._append</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._extended</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLatency</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logServer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._retainDays</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._append</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.isAppend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setAppend(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._buffers</name>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._closeOut</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._copy</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._extended</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.isExtended()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setExtended(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._fileOut</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._filename</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getFilename()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._ignorePathMap</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._ignorePaths</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getIgnorePaths()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setIgnorePaths(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logCookies</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogCookies(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logDateCache</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logDateFormat</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogDateFormat()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogDateFormat(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logLatency</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogLatency()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogLatency(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logLocale</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logServer</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogServer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogServer(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._logTimeZone</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getLogTimeZone()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setLogTimeZone(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._out</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._preferProxiedForAddress</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setPreferProxiedForAddress(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._retainDays</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getRetainDays()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.setRetainDays(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog._writer</name>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.doStart()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStreamWriter.OutputStreamWriter(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">java.util.TimeZone</outbound>
                <outbound type="feature" confirmed="no">java.util.TimeZone.getTimeZone(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.PathMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._append</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._buffers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._closeOut</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._copy</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._fileOut</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filename</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePathMap</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePaths</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._retainDays</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._writer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.DateCache(java.lang.String, java.util.Locale)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.setTimeZoneID(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.RolloverFileOutputStream.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.doStart()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.doStop()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.flush()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._buffers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._closeOut</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._copy</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._fileOut</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._writer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.doStop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._fileOut</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.RolloverFileOutputStream</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.RolloverFileOutputStream.getDatedFilename()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getFilename()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filename</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getIgnorePaths()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePaths</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogCookies()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logCookies</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogDateFormat()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogLatency()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLatency</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogLocale()</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogServer()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logServer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getLogTimeZone()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.getRetainDays()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._retainDays</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.isAppend()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._append</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.isExtended()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._extended</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.NCSARequestLog.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(char[], int, int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.getChars(int, int, char[], int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
                <outbound type="feature" confirmed="no">java.security.Principal.getName()</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.remove(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.size()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getName()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getValue()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.writeTo(org.eclipse.jetty.util.Utf8StringBuilder)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap$Entry</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.getMatch(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isInitial()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getUserIdentity()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._buffers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._copy</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._extended</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._fileOut</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePathMap</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLatency</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logServer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._preferProxiedForAddress</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._writer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.NCSARequestLog.isStarted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthentication()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getProtocol()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUri()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.getUserPrincipal()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.format(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.StringUtil.__LINE_SEPARATOR</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.TypeUtil.toString(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Utf8StringBuilder</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Utf8StringBuilder.Utf8StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Utf8StringBuilder.getStringBuilder()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Utf8StringBuilder.reset()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setAppend(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._append</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setExtended(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._extended</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filename</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._filenameDateFormat</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setIgnorePaths(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._ignorePaths</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogCookies(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logCookies</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogDateFormat(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateFormat</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogLatency(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLatency</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogLocale(java.util.Locale)</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logLocale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogServer(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logServer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setLogTimeZone(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logTimeZone</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setPreferProxiedForAddress(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._preferProxiedForAddress</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.NCSARequestLog.setRetainDays(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._retainDays</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Request</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._request</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isSuspended()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.RequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.Request()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookiesExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dns</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.AsyncContinuation()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookiesExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dns</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._STREAM</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.__ASYNC_FWD</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.__NONE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.__READER</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.__defaultLocale</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._async</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncStarted()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAsyncTimeout(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._asyncSupported</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncSupported()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAsyncSupported(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._attributes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._authentication</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAuthentication()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResolvedUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._baseParameters</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._characterEncoding</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCharacterEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._connection</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentRead()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaderNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isSecure()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._context</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathTranslated()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._contextPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContextPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContextPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._cookies</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.CookieCutter</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._cookiesExtracted</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._dispatcherType</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._dns</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._endp</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalAddr()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemotePort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._handled</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._inputState</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputState()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._method</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setMethod(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._newContext</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.takeNewContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._parameters</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._paramsExtracted</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._pathInfo</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathTranslated()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._port</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServerPort(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._protocol</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getProtocol()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setProtocol(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._queryEncoding</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._queryString</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._reader</name>
                <outbound type="class" confirmed="no">java.io.BufferedReader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._readerEncoding</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._remoteAddr</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteAddr(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._remoteHost</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRemoteHost(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._requestAttributeListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._requestURI</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._requestedSessionId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestedSessionId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._savedNewSessions</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._scheme</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getScheme()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setScheme(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._scope</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentityScope()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._serverName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServerName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._servletPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServletPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._session</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._sessionManager</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._timeStamp</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setTimeStamp(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._timeStampBuffer</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request._uri</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUri()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeListener</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.continuation.ContinuationListener</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestAttributeListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.extractParameters()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.UnsupportedEncodingException</outbound>
                <outbound type="feature" confirmed="no">java.io.UnsupportedEncodingException.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.valueParameters(java.lang.String, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.decodeQueryTo(org.eclipse.jetty.util.MultiMap)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.decodeQueryTo(org.eclipse.jetty.util.MultiMap, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.hasQuery()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._baseParameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCharacterEncoding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentLength()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContentType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getMethod()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.MultiMap(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.entrySet()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.UrlEncoded.decodeTo(java.io.InputStream, org.eclipse.jetty.util.MultiMap, java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAsyncContext()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getStatusString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isInitial()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isAsyncStarted()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAsyncContinuation()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isSuspended()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAttributes()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAuthType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getAuthMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getAuthentication()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getCharacterEncoding()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._characterEncoding</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getConnection()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getContentLength()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getLongField(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_LENGTH_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getContentRead()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.getContentRead()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getParser()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getContentType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getStringField(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getContext()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getContextPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._contextPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getCookies()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getValues(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.COOKIE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.CookieCutter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.CookieCutter()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookiesExtracted</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getDateHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getDateField(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getDispatcherType()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dispatcherType</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getStringField(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getHeaderNames()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getFieldNames()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getHeaders(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getValues(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getInputState()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getInputStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getInputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getIntHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getLongField(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getLocalAddr()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getLocalAddr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getLocalName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getLocalAddr()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getLocalHost()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dns</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getLocalPort()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getLocalPort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getLocale()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.Locale(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getDefault()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getValues(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.qualityList(java.util.Enumeration)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.valueParameters(java.lang.String, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getLocales()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.Locale(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getValues(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.qualityList(java.util.Enumeration)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.valueParameters(java.lang.String, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.__defaultLocale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.ensureSize(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.getList(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getMethod()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._method</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getParameter(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.getValue(java.lang.Object, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getParameterMap()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.toStringArrayMap()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getParameterNames()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.keySet()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.getValues(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getParameters()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getPathInfo()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getPathTranslated()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getProtocol()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getQueryEncoding()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getQueryString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getQuery()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getQuery(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryString</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getReader()</name>
                <outbound type="class" confirmed="no">java.io.BufferedReader</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStreamReader.InputStreamReader(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._reader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._readerEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getCharacterEncoding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getInputStream()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRealPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRemoteAddr()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getRemoteAddr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteAddr</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRemoteHost()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getRemoteHost()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dns</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteHost</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRemotePort()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getRemotePort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRemoteUser()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
                <outbound type="feature" confirmed="no">java.security.Principal.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._servletPath</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRequestURI()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getPathAndParam()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRequestURL()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.StringBuffer(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._port</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getScheme()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRequestedSessionId()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getResolvedUserIdentity()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getUserIdentity()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getResponse()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getRootURL()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getScheme()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getScheme()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServerName()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.InetAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getHostAddress()</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getLocalHost()</outbound>
                <outbound type="class" confirmed="no">java.net.UnknownHostException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.get(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.HOST_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getPort()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.getIndex()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.peek(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.peek(int, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferUtil.to8859_1_String(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferUtil.toInt(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._port</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._serverName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocalPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServerPort()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getPort()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getLocalPort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._port</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._serverName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getScheme()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServletContext()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServletName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope.getName()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServletPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._servletPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getServletResponse()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getSession()</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getSession(boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._sessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestedSessionId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isSecure()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getHttpSession(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.isValid(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getSessionManager()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._sessionManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getTimeStamp()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStamp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getTimeStampBuffer()</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.__dateCache</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferDateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferDateCache.formatBuffer(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStamp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStampBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getUri()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getUserIdentity()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getUserIdentity()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getUserIdentityScope()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.getUserPrincipal()</name>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getUserIdentity()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.getUserPrincipal()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteUser()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isAsyncStarted()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isAsyncStarted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isAsyncSupported()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isHandled()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isRequestedSessionIdFromURL()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isRequestedSessionIdFromUrl()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._sessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getClusterId(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getIdManager()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isSecure()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isConfidential(org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$Deferred.authenticate(javax.servlet.ServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication$User</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.isUserInRole(org.eclipse.jetty.server.UserIdentity$Scope, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._savedNewSessions</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.recycle()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.recycle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication.NOT_CHECKED</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.CookieCutter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.reset()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._baseParameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookiesExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._method</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._port</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryString</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._savedNewSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._serverName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._servletPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStamp</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStampBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.clearAttributes()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.clear()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeEvent.ServletRequestAttributeEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeListener.attributeRemoved(javax.servlet.ServletRequestAttributeEvent)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestAttributeListeners</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestAttributeListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.remove(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.saveNewSession(java.lang.Object, javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._savedNewSessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setAsyncSupported(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setAsyncTimeout(long)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAsyncTimeout(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.nio.ByteBuffer</outbound>
                <outbound type="feature" confirmed="no">java.nio.ByteBuffer.isDirect()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeEvent.ServletRequestAttributeEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeListener.attributeAdded(javax.servlet.ServletRequestAttributeEvent)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeListener.attributeRemoved(javax.servlet.ServletRequestAttributeEvent)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestAttributeListener.attributeReplaced(javax.servlet.ServletRequestAttributeEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletResponse.getOutputStream()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(java.nio.ByteBuffer, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(java.nio.ByteBuffer, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendResponse(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Authentication</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._authentication</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.UnsupportedEncodingException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.getBytes(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._inputState</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.StringUtil.isUTF8(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._characterEncoding</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getEndPoint()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResolveNames()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dns</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._endp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.Request(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setContentType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._newContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setContextPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._contextPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[])</name>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.CookieCutter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.CookieCutter()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._cookies</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._dispatcherType</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setHandled(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setMethod(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._method</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._baseParameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._paramsExtracted</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._pathInfo</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setProtocol(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._protocol</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryString</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setQueryString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._queryString</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setRemoteAddr(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteAddr</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setRemoteHost(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._remoteHost</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestURI</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._requestedSessionIdFromCookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setScheme(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scheme</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setServerName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._serverName</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setServerPort(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._port</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setServletPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._servletPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._session</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._sessionManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setTimeStamp(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._timeStamp</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.startAsync()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._async</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._asyncSupported</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.singleton(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getDefault()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.__defaultLocale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.takeNewContext()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._newContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._handled</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._uri</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getMethod()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Request$1</name>
            <outbound type="class" confirmed="no">java.io.BufferedReader</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</name>
                <outbound type="feature" confirmed="no">java.io.BufferedReader.BufferedReader(java.io.Reader)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.val$in</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getReader()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request$1.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletInputStream.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.val$in</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request$1.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Request$1.val$in</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletInputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.Request$1(org.eclipse.jetty.server.Request, java.io.Reader, javax.servlet.ServletInputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request$1.close()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.RequestLog</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.RequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.RequestLog.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.RequestLog.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ResourceCache</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCacheSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFileSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._cache</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._cachedFiles</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.getCachedFiles()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._cachedSize</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.getCachedSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._maxCacheSize</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.getMaxCacheSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.setMaxCacheSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._maxCachedFileSize</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.getMaxCachedFileSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.setMaxCachedFileSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._maxCachedFiles</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.getMaxCachedFiles()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.setMaxCachedFiles(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._mimeTypes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.access$000(org.eclipse.jetty.server.ResourceCache)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.access$000(org.eclipse.jetty.server.ResourceCache)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mimeTypes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.readFrom(java.io.InputStream, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getResource()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setBuffer(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.release()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.flushCache()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.setMaxCacheSize(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.setMaxCachedFileSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.getCachedFiles()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.getCachedSize()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.getMaxCacheSize()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCacheSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.getMaxCachedFileSize()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFileSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.getMaxCachedFiles()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.release()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCacheSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFileSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.length()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.ResourceFactory</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.ResourceFactory.getResource(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ResourceCache$Miss.cache(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ResourceCache$Miss.release()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFiles</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.setMaxCacheSize(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCacheSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.setMaxCachedFileSize(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFileSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache.setMaxCachedFiles(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._maxCachedFiles</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ResourceCache$Content</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpContent</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.getMimeByExtension(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModified</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._next</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._prev</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.access$000(org.eclipse.jetty.server.ResourceCache)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.lastModified()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._buffer</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getContentLength()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setBuffer(org.eclipse.jetty.io.Buffer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._contentType</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setContentType(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._key</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getKey()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isCached()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._lastModified</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._lastModifiedBytes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getLastModified()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._locked</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isLocked()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._next</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._prev</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content._resource</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getResource()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.formatDate(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._key</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModified</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModifiedBytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._locked</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._next</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._prev</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getBuffer()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.View.View(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getContentLength()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getContentType()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._contentType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getKey()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._key</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getLastModified()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModifiedBytes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.getResource()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.invalidate()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.Buffer.length()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._key</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._next</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._prev</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedFiles</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cachedSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.release()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.flushCache()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.isCached()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._key</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.isLocked()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._locked</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.isValid()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModified</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._locked</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._next</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._prev</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.lastModified()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.release()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.setBuffer(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._buffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.setContentType(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._contentType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._locked</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._next</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._prev</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._cache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._leastRecentlyUsed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache._mostRecentlyUsed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.cache(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.setLocked(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Content.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._lastModifiedBytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ResourceCache$Miss</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.this$0</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ResourceCache$Miss._resource</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.isValid()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.cache(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.invalidate()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.isValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.isValid()</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ResourceCache$Miss._resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ResourceCache$Miss.invalidate()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.release()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ResourceCache$Miss.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Response</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.hasOriginalRequestAndResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.suspend(javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._response</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.logExtended(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response, java.io.Writer)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.RequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.NONE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.SET_INCLUDE_HEADER_PREFIX</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.STREAM</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.WRITER</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.__nullPrintWriter</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.__nullServletOut</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._cachedMimeType</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._characterEncoding</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getCharacterEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getSetCharacterEncoding()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._connection</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.flushBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getBufferSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeader(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHttpFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._contentType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._explicitEncoding</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._locale</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getLocale()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._mimeType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._outputState</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isOutputing()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isWriting()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._reason</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getReason()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._status</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.Response(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response._writer</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.addCookie(javax.servlet.http.Cookie)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getComment()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getDomain()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getMaxAge()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getName()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getPath()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getSecure()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getValue()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getVersion()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.addSetCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.String, boolean, boolean, int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.addSetCookie(org.eclipse.jetty.http.HttpCookie)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.addDateHeader(java.lang.String, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.addDateField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.addHeader(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.add(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.addIntHeader(java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.addLongField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.complete()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.containsHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.containsKey(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSessionManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdFromCookie()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getNodeId(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterNamePrefix()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.isValid(javax.servlet.http.HttpSession)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeUrl(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.encodeUrl(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.flushBuffer()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.flushResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.fwdReset()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._explicitEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._writer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getBufferSize()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.getContentBufferSize()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getCharacterEncoding()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getContentCount()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.getContentWritten()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getContentType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getHeader(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getStringField(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getHeaders(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getValues(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getHttpFields()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getLocale()</name>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getDefault()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getOutputStream()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getOutputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getReason()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getSetCharacterEncoding()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getStatus()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.getWriter()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._writer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.isCommitted()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isResponseCommitted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setBufferSize(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLongContentLength(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.isOutputing()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.isWriting()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.recycle()</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._explicitEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._writer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.reset(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.reset()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.clear()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.getStringField(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.CACHE</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.CLOSE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaderValues.get(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONNECTION_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.DATE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.getOrdinal()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getProtocol()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStampBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendDateHeader()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.resetBuffer()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.resetBuffer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.fwdReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.sendError(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendProcessing()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.remove(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_LENGTH_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpStatus.getMessage(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequestFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.ByteArrayISO8859Writer(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.destroy()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.flush()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.size()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.write(char)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.write(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.writeTo(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.StringUtil.replace(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.sendProcessing()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpGenerator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpGenerator.send1xx(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isExpecting102Processing()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.HttpURI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getDecodedPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getFragment()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getQuery()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.complete()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.resetBuffer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.hasScheme(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.parentPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setBufferSize(int)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.increaseContentBufferSize(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getGenerator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.getAssociate(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._explicitEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getWriter()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setContentLength(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.close()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.isContentWritten()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putLongField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._writer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getOutputStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setContentType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.remove(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.CACHE</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.getAssociate(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer.toString()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._explicitEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.QuotedStringTokenizer.unquote(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setDateHeader(java.lang.String, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putDateField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setHeader(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.parseLong(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setIntHeader(java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putLongField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_LANGUAGE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_TYPE_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.CACHE</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.BufferCache$CachedBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.BufferCache.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._cachedMimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._characterEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._contentType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._explicitEncoding</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._locale</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._mimeType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._outputState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setLongContentLength(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Generator</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.Generator.setContentLength(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putLongField(java.lang.String, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._generator</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.isCommitted()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setStatus(int)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.setStatus(int, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIncluding()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setStatus(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.static {}</name>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput(org.eclipse.jetty.server.Response$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.__nullPrintWriter</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.__nullServletOut</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.IO.getNullWriter()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponseFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._reason</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response._status</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Response$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput(org.eclipse.jetty.server.Response$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Response$NullOutput</name>
            <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput()</name>
                <outbound type="feature" confirmed="no">javax.servlet.ServletOutputStream.ServletOutputStream()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput(org.eclipse.jetty.server.Response$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput(org.eclipse.jetty.server.Response$1)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response$NullOutput.Response$NullOutput()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.print(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.println(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.write(byte[], int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Response$NullOutput.write(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Server</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getServer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getServer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.getServer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection._server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector$Request.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler._server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.getServer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.Server()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._graceful</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendDateHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendServerVersion</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.Container()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.Server(int)</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.setPort(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._graceful</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendDateHeader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendServerVersion</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.Container()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._attributes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._connectors</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getConnectors()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._container</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._dependentBeans</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._graceful</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getGracefulShutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setGracefulShutdown(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._sendDateHeader</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendDateHeader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSendDateHeader(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._sendServerVersion</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSendServerVersion()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSendServerVersion(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._sessionIdManager</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSessionIdManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._stopAtShutdown</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getStopAtShutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._threadPool</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server._version</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getVersion()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.addBean(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.addBean(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.LifeCycle.start()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Connector[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getConnectors()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.addToArray(java.lang.Object[], java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.addLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.clearAttributes()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.clearAttributes()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpGenerator.setServerVersion(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Connector.start()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._connectors</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._threadPool</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._version</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.dump()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getStopAtShutdown()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.hookThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionIdManager.start()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.ifExceptionThrow()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.LifeCycle.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.QueuedThreadPool.QueuedThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.sleep(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.listIterator(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.ListIterator</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.hasPrevious()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.previous()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Connector.stop()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$Graceful</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$Graceful.setShutdown(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._connectors</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._graceful</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._threadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.hookThread</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionIdManager.stop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.ifExceptionThrow()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.LifeCycle.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.dump()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getBeans(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getConnectors()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._connectors</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getContainer()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getGracefulShutdown()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._graceful</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getSendDateHeader()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendDateHeader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getSendServerVersion()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendServerVersion</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getSessionIdManager()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getStopAtShutdown()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._stopAtShutdown</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getThreadPool()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._threadPool</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.join()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.getVersion()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._version</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.main(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContext.getContextPath()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.HttpURI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpURI.getQuery()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getServletContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.getSuspendedContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getAsyncEventState()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setQueryString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestURI(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.hookThread</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.isRunning()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.isStarting()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.join()</name>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.join()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.main(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getVersion()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._dependentBeans</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.removeBean(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Connector[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getConnectors()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.removeFromArray(java.lang.Object[], java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.removeLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._connectors</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object[], java.lang.Object[], java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setGracefulShutdown(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._graceful</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setSendDateHeader(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendDateHeader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setSendServerVersion(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sendServerVersion</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.setServer(org.eclipse.jetty.server.Server)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._stopAtShutdown</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.hookThread</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._threadPool</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getPackage()</outbound>
                <outbound type="class" confirmed="no">java.lang.Package</outbound>
                <outbound type="feature" confirmed="no">java.lang.Package.getImplementationVersion()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$1</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread(org.eclipse.jetty.server.Server$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._version</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.hookThread</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Server$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread(org.eclipse.jetty.server.Server$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Server$Graceful</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$Graceful.setShutdown(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.Server$ShutdownHookThread</name>
            <outbound type="class" confirmed="no">java.lang.Thread</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.hookThread</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</name>
                <outbound type="feature" confirmed="no">java.lang.Thread.Thread()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.CopyOnWriteArraySet.CopyOnWriteArraySet()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._hooked</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread(org.eclipse.jetty.server.Server$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread(org.eclipse.jetty.server.Server$1)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread._hooked</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread._servers</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.Server$ShutdownHookThread()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.clear()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.getServers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getStopAtShutdown()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setStopAtShutdown(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.clear()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.contains(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._hooked</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.add(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.getServers()</name>
                <outbound type="class" confirmed="no">java.lang.Iterable</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.remove(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.run()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.sleep(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread._servers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server$ShutdownHookThread.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getStopAtShutdown()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.isRunning()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.Server$ShutdownHookThread.setName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.SessionIdManager</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._sessionIdManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSessionIdManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getIdManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getMetaManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMetaManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMetaManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.addSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.getClusterId(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.getWorkerName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.idInUse(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.invalidateAll(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.SessionIdManager.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionIdManager.removeSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.SessionIdManager.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.SessionIdManager.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.SessionManager</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.LifeCycle</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._sessionManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSessionManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler(org.eclipse.jetty.server.SessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__DefaultSessionCookie</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__DefaultSessionDomain</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__DefaultSessionIdPathParameterName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__MaxAgeProperty</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__SessionCookieProperty</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__SessionDomainProperty</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__SessionIdPathParameterNameProperty</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.__SessionPathProperty</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.access(javax.servlet.http.HttpSession, boolean)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.addEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.clearEventListeners()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.complete(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getClusterId(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getHttpOnly()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getHttpSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getIdManager()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isRequestedSessionIdValid()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getMaxCookieAge()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getMaxInactiveInterval()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getMetaManager()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getNodeId(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSecureCookies()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionCookie()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionDomain()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterNamePrefix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.getSessionPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.isUsingCookies()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.isValid(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.encodeURL(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.removeEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setMaxCookieAge(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setMaxInactiveInterval(int)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setSessionCookie(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setSessionDomain(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setSessionIdPathParameterName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.setSessionPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.SessionManager.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.SessionManager.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.__DefaultSessionDomain</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.SessionManager.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.UserIdentity</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResolvedUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentity()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$UnauthenticatedUserIdentity</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity.UNAUTHENTICATED_IDENTITY</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity.getSubject()</name>
                <outbound type="class" confirmed="no">javax.security.auth.Subject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity.getUserPrincipal()</name>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserPrincipal()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity.static {}</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.UserIdentity$1()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.UNAUTHENTICATED_IDENTITY</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.UserIdentity$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$UnauthenticatedUserIdentity</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$1.UserIdentity$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$1.getSubject()</name>
                <outbound type="class" confirmed="no">javax.security.auth.Subject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$1.getUserPrincipal()</name>
                <outbound type="class" confirmed="no">java.security.Principal</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$1.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$Scope</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$1.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.UserIdentity$Scope</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Authentication$User.isUserInRole(org.eclipse.jetty.server.UserIdentity$Scope, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._scope</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUserIdentityScope()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isUserInRole(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.UserIdentity.isUserInRole(java.lang.String, org.eclipse.jetty.server.UserIdentity$Scope)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$Scope.getContextPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$Scope.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.UserIdentity$Scope.getRoleRefMap()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.UserIdentity$UnauthenticatedUserIdentity</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.UserIdentity$1</inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server.bio</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.bio.SocketConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.this$0</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</name>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._connections</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector._connections</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector._lowResourceMaxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector._maxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector._serverSocket</name>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.accept()</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.configure(java.net.Socket)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.access$000(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.access$100(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.configure(java.net.Socket)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.configure(java.net.Socket)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$100(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$000(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getTransport()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._sotimeout</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector._lowResourceMaxIdleTime</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector._maxIdleTime</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.isLowResources()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._connections</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._connections</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getAcceptQueueSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getLocalPort()</name>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.getLocalPort()</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.isClosed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getLowResourceMaxIdleTime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getReuseAddress()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.getThreadPool()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.isLowResources()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getServer()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.InetAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getByName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.ServerSocket(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.ServerSocket(int, int, java.net.InetAddress)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.isClosed()</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.setReuseAddress(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._serverSocket</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getAcceptQueueSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getReuseAddress()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(java.lang.String, int, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.bio.SocketConnector$Connection</name>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.getSoTimeout()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint.SocketEndPoint(java.net.Socket)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._dispatched</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._socket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._sotimeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.newHttpConnection(org.eclipse.jetty.io.EndPoint)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection._dispatched</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection._socket</name>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection._sotimeout</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint.close()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancel()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.fill(org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getThreadPool()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.fill(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint.fill(org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.isClosed()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EofException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._socket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection._sotimeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector$Connection.isClosed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector._connections</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$000(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.access$100(org.eclipse.jetty.server.bio.SocketConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.getLowResourceMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.isLowResources()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.isStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.bio.SocketConnector$Connection.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server.handler</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.AbstractHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.ErrorHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler._server</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.getServer()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.destroy()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler._server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandler.isStopped()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.removeBean(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.dump()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandler.isStarted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.getServer()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler._server</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.isStopped()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler._server</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.addBean(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.removeBean(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandler.toString()</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.CharSequence, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.HotSwapHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStart()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.dump(java.lang.StringBuilder, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getHandlers()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.addArray(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Handler[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.toArray(java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Handler[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandChildren(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.toArray(java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.getHandlers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.AbstractHandlerContainer.setServer(org.eclipse.jetty.server.Server)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ContextHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server$Graceful</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher._contextHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.ContextHandler$Context(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.ContextHandlerCollection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.getInteger(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.ContextHandler$Context(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._aliases</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._compactPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._maxFormContentSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.ScopedHandler()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.getInteger(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._aliases</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._compactPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._maxFormContentSize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.ScopedHandler()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.MANAGED_ATTRIBUTES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.__AVAILABLE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.__SHUTDOWN</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.__STOPPED</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.__UNAVAILABLE</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.__context</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._aliases</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isAliases()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAliases(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._allowNullPathInfo</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAllowNullPathInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAllowNullPathInfo(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._attributes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$300(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._availability</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._available</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isAvailable()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._baseResource</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._classLoader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassLoader()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._compactPath</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isCompactPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setCompactPath(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._connectors</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._contextAttributeListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$500(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._contextAttributes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._contextListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._contextPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$600(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._displayName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._errorHandler</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._eventListeners</name>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler._handler</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._initParams</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParams()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setInitParams(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._localeEncodingMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._logger</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLogger()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._managedAttributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._maxFormContentSize</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setMaxFormContentSize(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$000(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler._nextScope</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler._outerScope</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._requestAttributeListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._requestListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._scontext</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._shutdown</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isShutdown()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._vhosts</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler._welcomeFiles</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$000(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$300(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$500(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributeListeners</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.access$600(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.addToArray(java.lang.Object[], java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.addLocaleEncoding(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._localeEncodingMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.regionMatches(boolean, int, java.lang.String, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendError(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Connector.getName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getQueryString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._allowNullPathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._availability</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._connectors</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._vhosts</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.clearAttributes()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestEvent.ServletRequestEvent(javax.servlet.ServletContext, javax.servlet.ServletRequest)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletRequestListener.requestInitialized(javax.servlet.ServletRequestEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendError(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.HttpException(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getReason()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpException.getStatus()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.takeNewContext()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler._nextScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isProtectedTarget(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.ASYNC</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.INCLUDE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContextPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setPathInfo(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setServletPath(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._compactPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler._nextScope</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler._outerScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.compactPath(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.MimeTypes()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.__context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._availability</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.ErrorHandler()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.getLogger(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextEvent.ServletContextEvent(javax.servlet.ServletContext)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextListener.contextDestroyed(javax.servlet.ServletContextEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.__context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._availability</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ErrorHandler.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ScopedHandler.doStop()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.clearAttributes()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getAllowNullPathInfo()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._allowNullPathInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getAttributes()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getChildHandlerByClass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getClassLoader()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.pathSeparatorChar</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.net.URLClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.net.URLClassLoader.getURLs()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getFile()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._connectors</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getHosts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.__context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._displayName</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getEventListeners()</name>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._eventListeners</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getHosts()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameterNames()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getInitParams()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.getLanguage()</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._localeEncodingMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getLogger()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._maxFormContentSize</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="feature" confirmed="no">java.net.MalformedURLException.MalformedURLException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._aliases</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._baseResource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.addPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getAlias()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.list()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getServletContext()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._vhosts</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._welcomeFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.Runnable)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runnable.run()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isAliases()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._aliases</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isAvailable()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isCompactPath()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._compactPath</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isFailed()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isProtectedTarget(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isRunning()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isShutdown()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandler.isStopped()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Loader.loadClass(java.lang.Class, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.newResource(java.net.URL)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setAliases(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._aliases</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setAllowNullPathInfo(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._allowNullPathInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.Attributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.Attributes.getAttributeNames()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.AttributesMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNames()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._availability</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.isRunning()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._classLoader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setCompactPath(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._compactPath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._connectors</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setHosts(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.isStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.isStarting()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextPath</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._displayName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ErrorHandler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextAttributeListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestAttributeListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequestListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._eventListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._requestListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setHosts(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setInitParams(java.util.Map)</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._managedAttributes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getServer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.addBean(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.removeBean(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Logger.info(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setMaxFormContentSize(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._maxFormContentSize</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._mimeTypes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getServer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ErrorHandler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ScopedHandler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._availability</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._available</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._shutdown</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.isRunning()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._vhosts</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.normalizeHostname(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._welcomeFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.startContext()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextEvent.ServletContextEvent(javax.servlet.ServletContext)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextListener.contextInitialized(javax.servlet.ServletContextEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._initParams</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._managedAttributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ErrorHandler.start()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.static {}</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.__context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ScopedHandler.toString()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ContextHandler$Context</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathTranslated()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._context</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$100(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.ContextHandler$Context(org.eclipse.jetty.server.handler.ContextHandler)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$300(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttributeNames()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.isStarted()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getServer()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.start(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setLocale(java.util.Locale)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$600(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameterNames()</name>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getMajorVersion()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.getMimeByExtension(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$000(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getMinorVersion()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getNamedDispatcher(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getCanonicalPath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getFile()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getPathTranslated()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRealPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.RequestDispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.Dispatcher(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.decodePath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getURL()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getServerInfo()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getVersion()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getServlet(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.Servlet</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getDisplayName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getServletNames()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.getServlets()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Logger.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Logger.info(java.lang.String, java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.log.Logger</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Logger.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextAttributeEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeEvent.ServletContextAttributeEvent(javax.servlet.ServletContext, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeListener.attributeRemoved(javax.servlet.ServletContextAttributeEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$300(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$500(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextAttributeEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeEvent.ServletContextAttributeEvent(javax.servlet.ServletContext, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletContextAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeListener.attributeAdded(javax.servlet.ServletContextAttributeEvent)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeListener.attributeRemoved(javax.servlet.ServletContextAttributeEvent)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletContextAttributeListener.attributeReplaced(javax.servlet.ServletContextAttributeEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._scontext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$400(org.eclipse.jetty.server.handler.ContextHandler, java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$500(org.eclipse.jetty.server.handler.ContextHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.AttributesMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getInitParams()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.ContextHandler$Context(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContext(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameterNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getMimeType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getServletContextName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setInitParameter(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toHexString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ContextHandlerCollection</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.ContextHandlerCollection()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.ContextHandlerCollection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.getContextClass()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection._contextMap</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.newInstance()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.Error(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.getContextClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.getHandlers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getServerName()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.getLazyMatches(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isAsync()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandlerCollection.getHandlers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.PathMap()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.PathMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HandlerContainer.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandlerCollection.getHandlers()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.normalizeHostname(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.PathMap</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection._contextMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandlerCollection.isStarted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.DebugHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="feature" confirmed="no">java.util.Locale.US</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._date</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.DateCache(java.lang.String, java.util.Locale)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler._date</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler._out</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.getOutputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler._print</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.PrintStream(java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._out</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._print</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.RolloverFileOutputStream.RolloverFileOutputStream(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._print</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.DebugHandler.getHandler()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.getOutputStream()</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._out</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.toString()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Error</outbound>
                <outbound type="feature" confirmed="no">java.lang.Error.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.getCause()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpURI</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isSuspended()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRemoteAddr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getUri()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._date</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._print</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.DebugHandler.getHandler()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.DateCache</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.lastMs()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.DateCache.now()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream)</name>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._out</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.DefaultHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getClassLoader()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._favicon</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._faviconModified</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._serveIcon</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.IO.readBytes(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler._favicon</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler._faviconModified</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler._serveIcon</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.getServeIcon()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.setServeIcon(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler.getServeIcon()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._serveIcon</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.DefaultHandler.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.OutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletOutputStream.write(byte[])</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getDateHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getLocalPort()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getOutputStream()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.isCommitted()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendError(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setDateHeader(java.lang.String, long)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getContextPath()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.isFailed()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.isRunning()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.isStopped()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._favicon</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._faviconModified</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._serveIcon</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.DefaultHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.ByteArrayISO8859Writer(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.flush()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.size()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.write(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.writeTo(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.StringUtil.replace(java.lang.String, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.DefaultHandler.setServeIcon(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler._serveIcon</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ErrorHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._errorHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.ErrorHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler._showStacks</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler._showStacks</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.ErrorHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.isShowStacks()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.setShowStacks(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.StringUtil.replace(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getMethod()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getOutputStream()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getCurrentConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getRequest()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getResponse()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getReason()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.ByteArrayISO8859Writer(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.destroy()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.flush()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.size()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.ByteArrayISO8859Writer.writeTo(java.io.OutputStream)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler._showStacks</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.isShowStacks()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler._showStacks</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.setShowStacks(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler._showStacks</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpStatus.getMessage(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(int)</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest, java.io.Writer)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.PrintWriter(java.io.Writer)</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.flush()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.StringWriter()</outbound>
                <outbound type="feature" confirmed="no">java.io.StringWriter.getBuffer()</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="feature" confirmed="no">java.io.Writer.write(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuffer</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuffer.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getCause()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.printStackTrace(java.io.PrintWriter)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest, java.io.Writer, int, java.lang.String, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.HandlerCollection</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._mutableWhenRunning</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.HandlerList()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._mutableWhenRunning</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.ContextHandlerCollection()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection._handlers</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection._mutableWhenRunning</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Handler[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.addToArray(java.lang.Object[], java.lang.Object, java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.ifExceptionThrow()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.ifExceptionThrow()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.expandChildren(java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.ServletException.ServletException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.isStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.getThrowable(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.size()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Handler[]</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.removeFromArray(java.lang.Object[], java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.isStarted()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.stop()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.server.Handler[]</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler[].clone()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._mutableWhenRunning</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.isStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.MultiException()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiException.ifExceptionThrowRuntime()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object[], java.lang.Object[], java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection._handlers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.getHandlers()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerCollection.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object[], java.lang.Object[], java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.HandlerList</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerList.HandlerList()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.HandlerCollection()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerList.getHandlers()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerList.getHandlers()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerList.isStarted()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerList.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerList.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.HandlerWrapper</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.RequestLogHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.ScopedHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper._handler</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.isStarted()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper._handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.getHandler()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HandlerWrapper.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.HotSwapHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.HotSwapHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.AbstractHandlerContainer()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler._handler</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.stop()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.expandChildren(java.lang.Object, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.isStarted()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.isRunning()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Handler.stop()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.AbstractHandlerContainer.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler._handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.getHandler()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.HotSwapHandler.isRunning()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.MovedContextHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$1</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._redirector</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.MovedContextHandler.setAllowNullPathInfo(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.MovedContextHandler.setHandler(org.eclipse.jetty.server.Handler)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$1</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._redirector</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.MovedContextHandler.setHandler(org.eclipse.jetty.server.Handler)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._discardPathInfo</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardPathInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardPathInfo(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._discardQuery</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardQuery()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardQuery(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._expires</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.getExpires()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._permanent</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.isPermanent()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.setPermanent(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler._redirector</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.getExpires()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._expires</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardPathInfo()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardPathInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.isDiscardQuery()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardQuery</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.isPermanent()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._permanent</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setAllowNullPathInfo(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardPathInfo(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardPathInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardQuery(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardQuery</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._expires</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setHandler(org.eclipse.jetty.server.Handler)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler.setPermanent(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._permanent</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.MovedContextHandler$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.MovedContextHandler$Redirector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._redirector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler, org.eclipse.jetty.server.handler.MovedContextHandler$1)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler.MovedContextHandler(org.eclipse.jetty.server.HandlerContainer, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getPathInfo()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getQueryString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentLength(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRootURL()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardPathInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._discardQuery</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._expires</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._newContextURL</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler._permanent</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.hasScheme(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.MovedContextHandler$Redirector(org.eclipse.jetty.server.handler.MovedContextHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.RequestLogHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.RequestLogHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.RequestLog.start()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.RequestLog.stop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.RequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.RequestLog.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.RequestLog.stop()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.RequestLogHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.RequestLogHandler.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler._requestLog</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.RequestLogHandler.getServer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ResourceHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.MimeTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._aliases</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.isAliases()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setAliases(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._baseResource</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._cacheControl</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._context</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._directory</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.isDirectoriesListed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setDirectoriesListed(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.ResourceHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintWriter.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getPathInfo()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getWriter()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendError(int)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._directory</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getListHTML(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpFields</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.put(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpFields.putLongField(org.eclipse.jetty.io.Buffer, long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CACHE_CONTROL_BUFFER</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpHeaders.CONTENT_LENGTH_BUFFER</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getHttpFields()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._cacheControl</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.TypeUtil.toString(long)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.length()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStart()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.isAliases()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._aliases</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._context</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.FileResource.getCheckAliases()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._cacheControl</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="feature" confirmed="no">java.net.MalformedURLException.MalformedURLException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._baseResource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._context</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.addPath(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getPathInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.addPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.isDirectory()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.io.PrintWriter</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletOutputStream</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getDateHeader(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getMethod()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getPathInfo()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getOutputStream()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.getWriter()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setDateHeader(java.lang.String, long)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletResponse.setStatus(int)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.MimeTypes.getMimeByExtension(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.WriterOutputStream.WriterOutputStream(java.io.Writer)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.isHandled()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setHandled(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._aliases</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.exists()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getAlias()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.lastModified()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.length()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.writeTo(java.io.OutputStream, long, long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.isAliases()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._aliases</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.isDirectoriesListed()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._directory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setAliases(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._aliases</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._baseResource</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ByteArrayBuffer.ByteArrayBuffer(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._cacheControl</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setDirectoriesListed(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._directory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.MimeTypes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._mimeTypes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._welcomeFiles</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.ScopedHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.ScopedHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.__outerScope</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ScopedHandler._handler</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler._nextScope</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler._outerScope</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.get()</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.__outerScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._nextScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._outerScope</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ScopedHandler.getChildHandlerByClass(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.getChildHandlerByClass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._outerScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ScopedHandler._handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._nextScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.nextScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._nextScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler._outerScope</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.static {}</name>
                <outbound type="class" confirmed="no">java.lang.ThreadLocal</outbound>
                <outbound type="feature" confirmed="no">java.lang.ThreadLocal.ThreadLocal()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ScopedHandler.__outerScope</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.handler.ScopedHandler.toString()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.handler.StatisticsHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.AtomicInteger()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.AtomicLong()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._statsStartedAt</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsExpired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requests</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsResumed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._statsStartedAt</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeMin()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.StatisticsHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeTotal()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeAverage()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMin()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeAverage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequests()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requests</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeAverage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsExpired()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsResumed()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs()</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._statsStartedAt</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeMin()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendedTimeTotal()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.decrementAndGet()</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.incrementAndGet()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.addAndGet(long)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isExpired()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isResumed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.isSuspended()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAsyncContinuation()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicInteger, int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.statsReset()</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.set(int)</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.set(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._expiredRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestsMaxActive</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._resumedRequests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._statsStartedAt</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._suspendTotalTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicInteger, int)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.compareAndSet(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.get()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicLong, long)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.compareAndSet(long, long)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.compareAndSet(long, long)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.get()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.handler.StatisticsHandler.updateResponse(org.eclipse.jetty.server.Request)</name>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicInteger</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicInteger.incrementAndGet()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.atomic.AtomicLong</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.atomic.AtomicLong.addAndGet(long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getTimeStamp()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getContentCount()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMaxTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestMinTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._requestTotalTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses1xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses2xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses3xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses4xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responses5xx</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler._responsesTotalBytes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMax(java.util.concurrent.atomic.AtomicLong, long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.updateMin(java.util.concurrent.atomic.AtomicLong, long)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.StatisticsHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server.nio</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.AbstractNIOConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.AbstractConnector</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.NIOConnector</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.AbstractNIOConnector()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.AbstractConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.BlockingChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.AbstractNIOConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.getUseDirectBuffers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseBuffer(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.setUseDirectBuffers(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.doStart()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.getUseDirectBuffers()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.isRequestHeader(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.isResponseHeader(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.newRequestHeader(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.newResponseHeader(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.IndirectNIOBuffer.IndirectNIOBuffer(int)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.persist(org.eclipse.jetty.io.EndPoint)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.setLowResourceMaxIdleTime(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourceMaxIdleTime(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesMaxIdleTime(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.setMaxIdleTime(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.AbstractNIOConnector.setUseDirectBuffers(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector._useDirectBuffers</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.BlockingChannelConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.BlockingChannelConnector()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.AbstractNIOConnector()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</name>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector._maxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ByteChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectableChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.accept()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.configureBlocking(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.socket()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.configure(java.net.Socket)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.access$100(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.configure(java.net.Socket)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$100(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.socket()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.EndPoint.getTransport()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._sotimeout</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector._maxIdleTime</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.configure(java.net.Socket)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getAcceptQueueSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort()</name>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.getLocalPort()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.isOpen()</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.socket()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getLowResourceMaxIdleTime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.getThreadPool()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.InetSocketAddress(int)</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.InetSocketAddress(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.bind(java.net.SocketAddress, int)</outbound>
                <outbound type="class" confirmed="no">java.net.SocketAddress</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectableChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.configureBlocking(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.open()</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.socket()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getAcceptQueueSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getPort()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection</name>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.ChannelEndPoint</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</name>
                <outbound type="class" confirmed="no">java.nio.channels.ByteChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.ChannelEndPoint.ChannelEndPoint(java.nio.channels.ByteChannel)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._dispatched</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getServer()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._connection</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._dispatched</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._sotimeout</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getThreadPool()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.getTransport()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.isOpen()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.socket()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EofException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.isIdle()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._connection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection._sotimeout</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.getTransport()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.isOpen()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector.access$100(org.eclipse.jetty.server.nio.BlockingChannelConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getLowResourceMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.BlockingChannelConnector.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.isLowOnThreads()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.BlockingChannelConnector$Connection(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.InheritedChannelConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.InheritedChannelConnector.InheritedChannelConnector()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.InheritedChannelConnector._acceptChannel</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.InheritedChannelConnector.getHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.InheritedChannelConnector.getPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchMethodError</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.inheritedChannel()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.Channel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectableChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.configureBlocking(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.InheritedChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.InheritedChannelConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.InheritedChannelConnector.getPort()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.NIOConnector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.NIOConnector.getUseDirectBuffers()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.SelectChannelConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.this$0</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.AbstractNIOConnector.AbstractNIOConnector()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.InheritedChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</name>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesConnections</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesConnections()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesConnections(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesMaxIdleTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesMaxIdleTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourceMaxIdleTime(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesMaxIdleTime(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector._manager</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.doSelect(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.access$000(org.eclipse.jetty.server.nio.SelectChannelConnector, java.net.Socket)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.configure(java.net.Socket)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.access$100(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.access$200(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.close()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.isRunning()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.stop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.configure(java.net.Socket)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$000(org.eclipse.jetty.server.nio.SelectChannelConnector, java.net.Socket)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.connectionClosed(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$100(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.connectionOpened(org.eclipse.jetty.server.HttpConnection)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$200(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.cancelIdle()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.getSelectSet()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet.getNow()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setTimeStamp(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.register(java.nio.channels.ServerSocketChannel)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.setLowResourcesConnections(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.setLowResourcesMaxIdleTime(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.setMaxIdleTime(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.setSelectSets(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.start()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getAcceptors()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesConnections()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getMaxIdleTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.doStop()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.isOpen()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.dump()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.info(java.lang.String)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getAcceptQueueSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getAcceptors()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getHost()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort()</name>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.getLocalPort()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.isOpen()</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.socket()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesConnections()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesConnections</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesMaxIdleTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesMaxIdleTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getMaxIdleTime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getReuseAddress()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.open()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.getThreadPool()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getServer()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectionKey</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.SelectChannelEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.InetSocketAddress(int)</outbound>
                <outbound type="feature" confirmed="no">java.net.InetSocketAddress.InetSocketAddress(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.bind(java.net.SocketAddress, int)</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.setReuseAddress(boolean)</outbound>
                <outbound type="class" confirmed="no">java.net.SocketAddress</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectableChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.configureBlocking(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.open()</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.socket()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._acceptChannel</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getAcceptQueueSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getHost()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getReuseAddress()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.persist(org.eclipse.jetty.io.EndPoint)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.scheduleIdle()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.persist(org.eclipse.jetty.io.EndPoint)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourceMaxIdleTime(int)</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.setLowResourceMaxIdleTime(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesMaxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesConnections(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesConnections</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesMaxIdleTime(long)</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.setLowResourceMaxIdleTime(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._lowResourcesMaxIdleTime</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.setMaxIdleTime(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.AbstractNIOConnector.setMaxIdleTime(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector._manager</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager.SelectorManager()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectableChannel</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectionKey</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SelectionKey.channel()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.ServerSocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.ServerSocketChannel.accept()</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.configureBlocking(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.nio.channels.SocketChannel.socket()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$000(org.eclipse.jetty.server.nio.SelectChannelConnector, java.net.Socket)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.nio.SelectChannelConnector.getThreadPool()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.getConnection()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$100(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.getConnection()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.access$200(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.HttpConnection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectionKey</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$1.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.SelectChannelConnector$1(org.eclipse.jetty.server.nio.SelectChannelConnector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.acceptChannel(java.nio.channels.SelectionKey)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointClosed(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.endPointOpened(org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.val$endpoint</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.getSelectSet()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.val$endpoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint.getSelectSet()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.val$endpoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.thread.Timeout$Task</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.nio.SelectChannelConnector$2.val$endpoint</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.SelectChannelConnector$2(org.eclipse.jetty.server.nio.SelectChannelConnector, org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server.session</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionIdManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.SESSION_ID_RANDOM_ALGORITHM</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.SESSION_ID_RANDOM_ALGORITHM_ALT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.__NEW_SESSION_ID</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager._random</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.getRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.setRandom(java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager._server</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager._weakRandom</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.setRandom(java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager._workerName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.getWorkerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.setWorkerName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.doStart()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.getClusterId(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.getRandom()</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.getWorkerName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._workerName</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.idInUse(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.freeMemory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.NoSuchAlgorithmException</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.Random()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextLong()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.setSeed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._weakRandom</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.freeMemory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextInt()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextLong()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRemoteAddr()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestedSessionId()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._weakRandom</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._workerName</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.AbstractSessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.AbstractSessionIdManager.idInUse(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.setRandom(java.util.Random)</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._weakRandom</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionIdManager.setWorkerName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager._workerName</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._httpOnly</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxCookieAge</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._minSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._secureCookies</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterNamePrefix</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._usingCookies</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.JDBCSessionManager()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.__distantFuture</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.__nullSessionContext</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access$100()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._context</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMaxInactiveInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._httpOnly</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpOnly()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setHttpOnly(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._loader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._maxCookieAge</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMaxCookieAge(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._maxSessions</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMaxSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.resetStats()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._minSessions</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMinSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.resetStats()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._nodeIdInSessionId</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isNodeIdInSessionId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setNodeIdInSessionId(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._refreshCookieAge</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getRefreshCookieAge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMaxCookieAge(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setRefreshCookieAge(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._secureCookies</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSecureCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSecureCookies(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.clearEventListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionCookie(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionDomain()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionDomain(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionHandler</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterNamePrefix</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterNamePrefix()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.clearEventListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._sessionPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager._usingCookies</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isUsingCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setUsingCookies(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.access$100()</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.__nullSessionContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.cookieSet()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCookieSetTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isIdChanged()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setIdChanged(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getRefreshCookieAge()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isUsingCookies()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionAttributeListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionListener.sessionCreated(javax.servlet.http.HttpSessionEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.addSession(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessions()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.clearEventListeners()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.parseInt(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getSessionIdManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionIdManager.isStarted()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionIdManager.start()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getInitParameter(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._loader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxCookieAge</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionPath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.SessionHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.doStart()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._loader</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.invalidateSessions()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.doStop()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getHttpOnly()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._httpOnly</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getNodeId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setIdChanged(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSession(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMetaManager()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxCookieAge</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getMaxInactiveInterval()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getMaxSessions()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxSessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getMetaManager()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getMinSessions()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._minSessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getNodeId()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getRefreshCookieAge()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._refreshCookieAge</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSecureCookies()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._secureCookies</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpCookie.HttpCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, boolean, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpOnly()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSecureCookies()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isUsingCookies()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionDomain()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterNamePrefix()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterNamePrefix</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionMap()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessionPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionPath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.getSessions()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.resetStats()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.invalidateSessions()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.isNodeIdInSessionId()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._nodeIdInSessionId</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.isUsingCookies()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._usingCookies</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession, java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isValid()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setMaxInactiveInterval(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newSession(javax.servlet.http.HttpServletRequest)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.newSession(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionAttributeListener</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionListener</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.remove(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionListener.sessionDestroyed(javax.servlet.http.HttpSessionEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.invalidateAll(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.removeSession(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSession(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.resetStats()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._minSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessions()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setHttpOnly(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._httpOnly</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMetaManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setMaxCookieAge(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._maxCookieAge</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._refreshCookieAge</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setMaxInactiveInterval(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setMetaManager(org.eclipse.jetty.server.SessionIdManager)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setNodeIdInSessionId(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._nodeIdInSessionId</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setRefreshCookieAge(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._refreshCookieAge</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSecureCookies(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._secureCookies</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSessionCookie(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionCookie</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSessionDomain(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionDomain</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdPathParameterNamePrefix</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setSessionPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionPath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.setUsingCookies(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._usingCookies</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager.static {}</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext(org.eclipse.jetty.server.session.AbstractSessionManager$1)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.__nullSessionContext</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionManager$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext(org.eclipse.jetty.server.session.AbstractSessionManager$1)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.static {}</inbound>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionContext</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext(org.eclipse.jetty.server.session.AbstractSessionManager$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext(org.eclipse.jetty.server.session.AbstractSessionManager$1)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$1</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.AbstractSessionManager$NullSessionContext()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getIds()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$NullSessionContext.getSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session</name>
            <outbound type="class" confirmed="no">java.io.Serializable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._created</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._maxIdleMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._newSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._created</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._maxIdleMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._accessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.cookieSet()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._cookieSet</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.cookieSet()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCookieSetTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._created</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCreationTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._doInvalidate</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._idChanged</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isIdChanged()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setIdChanged(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCreationTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getLastAccessedTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getMaxInactiveInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isNew()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._lastAccessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getLastAccessedTime()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._maxIdleMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getMaxInactiveInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._newSession</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isNew()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getNodeId()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._requests</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.initValues()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._lastAccessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._newSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._requests</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingListener.valueBound(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._doInvalidate</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.cookieSet()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._cookieSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionActivationListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionActivationListener.sessionDidActivate(javax.servlet.http.HttpSessionEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionAttributeListener.attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttributeNames()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.EMPTY_LIST</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.enumeration(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCookieSetTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._cookieSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getCreationTime()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._created</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._clusterId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._nodeIdInSessionId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getLastAccessedTime()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._lastAccessed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getMaxInactiveInterval()</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._maxIdleMs</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getNodeId()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._nodeId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</name>
                <outbound type="class" confirmed="no">javax.servlet.ServletContext</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSession()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getSessionContext()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access$100()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.getValueNames()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.initValues()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.newAttributeMap()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.invalidate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.isIdChanged()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._idChanged</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.isNew()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._newSession</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.isValid()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.newAttributeMap()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.initValues()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.putValue(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionAttributeListener.attributeRemoved(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionAttributeListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionAttributeListener.attributeAdded(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionAttributeListener.attributeReplaced(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._invalid</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.bindValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.newAttributeMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionAttributeListeners</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.putValue(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.setIdChanged(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._idChanged</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.setMaxInactiveInterval(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._maxIdleMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.newHttpSession(javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getServletContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._doInvalidate</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._requests</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.unbindValue(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingEvent.HttpSessionBindingEvent(javax.servlet.http.HttpSession, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionBindingListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionBindingListener.valueUnbound(javax.servlet.http.HttpSessionBindingEvent)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionActivationListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionActivationListener.sessionWillPassivate(javax.servlet.http.HttpSessionEvent)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session._values</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf.getSession()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.access(javax.servlet.http.HttpSession, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.complete(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.isValid(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(javax.servlet.http.HttpSession, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionIdManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
            <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager()</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager(java.util.Random)</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.SESSION_ID_RANDOM_ALGORITHM</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.SESSION_ID_RANDOM_ALGORITHM_ALT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.__NEW_SESSION_ID</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager._random</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager(java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.setRandom(java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager._sessions</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager._weakRandom</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.setRandom(java.util.Random)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager._workerName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getWorkerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.setWorkerName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSession.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.add(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.freeMemory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.NoSuchAlgorithmException</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.Random()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextLong()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.setSeed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._weakRandom</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.MultiMap(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.doStop()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.clear()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._workerName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.getRandom()</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.getWorkerName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._workerName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.containsKey(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.isValid()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.getValue(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.removeValue(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.newSessionId(javax.servlet.http.HttpServletRequest, long)</name>
                <outbound type="feature" confirmed="no">java.lang.Long.toString(long, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.hashCode()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runtime</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.freeMemory()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runtime.getRuntime()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextInt()</outbound>
                <outbound type="feature" confirmed="no">java.util.Random.nextLong()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRemoteAddr()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestedSessionId()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._weakRandom</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSession.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.MultiMap</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.MultiMap.removeValue(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.setRandom(java.util.Random)</name>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._random</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._weakRandom</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionIdManager.setWorkerName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._workerName</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.HashSessionManager$1(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.HashSessionManager$2(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._savePeriodMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessionsLoaded</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.__id</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager._dftMaxIdleSecs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.isLazyLoad()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setLazyLoad(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager._loader</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager._minSessions</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._savePeriodMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSavePeriod()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._saveTask</name>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$100(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getScavengePeriod()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._sessions</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessionMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._sessionsLoaded</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._storeDir</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$200(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getStoreDirectory()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setStoreDirectory(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._task</name>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager._timer</name>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.access$000(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.access$100(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.access$200(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.doStart()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.mkdir()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.Timer(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.__id</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._timer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSavePeriod()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getScavengePeriod()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.doStop()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.cancel()</outbound>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <outbound type="feature" confirmed="no">java.util.TimerTask.cancel()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._saveTask</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._task</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._timer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getSavePeriod()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._savePeriodMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getScavengePeriod()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessionsLoaded</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getSessionMap()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getSessions()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.getStoreDirectory()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.isLazyLoad()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager.isStopped()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager.isStopping()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.newSession(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.newSession(long, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.removeSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</name>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.DataInputStream(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.readBoolean()</outbound>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.readInt()</outbound>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.readLong()</outbound>
                <outbound type="feature" confirmed="no">java.io.DataInputStream.readUTF()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.get(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.readObject()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._cookieSet</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._lastAccessed</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session.initValues()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(long, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.canRead()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessionsLoaded</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.canWrite()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.createNewFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.FileOutputStream(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileOutputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStop()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.scavenge()</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._maxIdleMs</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session.timeout()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager._loader</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager._minSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._sessionsLoaded</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager.isStopped()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager.isStopping()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$000(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.setLazyLoad(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._lazyLoad</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setMaxInactiveInterval(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.schedule(java.util.TimerTask, long, long)</outbound>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <outbound type="feature" confirmed="no">java.util.TimerTask.cancel()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.HashSessionManager$1(org.eclipse.jetty.server.session.HashSessionManager)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._savePeriodMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._saveTask</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._timer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</name>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.schedule(java.util.TimerTask, long, long)</outbound>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <outbound type="feature" confirmed="no">java.util.TimerTask.cancel()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.HashSessionManager$2(org.eclipse.jetty.server.session.HashSessionManager)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._scavengePeriodMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._task</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._timer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager.setStoreDirectory(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager._storeDir</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionManager$1</name>
            <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$1.HashSessionManager$1(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="feature" confirmed="no">java.util.TimerTask.TimerTask()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$1.run()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$1.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.HashSessionManager$1(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionManager$2</name>
            <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$2.HashSessionManager$2(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="feature" confirmed="no">java.util.TimerTask.TimerTask()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$2.run()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$000(org.eclipse.jetty.server.session.HashSessionManager)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$2.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.HashSessionManager$2(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$2.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream</name>
            <outbound type="class" confirmed="no">java.io.ObjectInputStream</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.readObject()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)</outbound>
                <outbound type="class" confirmed="no">java.io.ObjectStreamClass</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectStreamClass.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$ClassLoadingObjectInputStream.HashSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.HashSessionManager, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.HashSessionManager$Session</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.newSession(long, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._accessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._clusterId</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._cookieSet</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._created</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._idChanged</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._lastAccessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._maxIdleMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._nodeId</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._requests</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session._values</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.getId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.initValues()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.invalidate()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.invalidateSessions()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.newAttributeMap()</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.io.File, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.delete()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.exists()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$200(org.eclipse.jetty.server.session.HashSessionManager)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager.isStopped()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager.isStopping()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.invalidate()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.save(java.io.OutputStream)</name>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.writeBoolean(boolean)</outbound>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.writeInt(int)</outbound>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.writeLong(long)</outbound>
                <outbound type="feature" confirmed="no">java.io.DataOutputStream.writeUTF(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._accessed</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._clusterId</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._cookieSet</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._created</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._idChanged</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._lastAccessed</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._nodeId</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._requests</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._values</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.serialVersionUID</name>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSession(java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setMaxInactiveInterval(int)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.HashSessionManager$Session._maxIdleMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.access$100(org.eclipse.jetty.server.session.HashSessionManager)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.HashSessionManager$Session(org.eclipse.jetty.server.session.HashSessionManager, long, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$Session.setMaxInactiveInterval(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.HashSessionManager$Session.timeout()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionIdManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.JDBCSessionIdManager$1(org.eclipse.jetty.server.session.JDBCSessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIdTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Random</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIdTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionIdTable</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionTable</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._datasource</name>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._dbAdaptor</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteOldExpiredSessions</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._driverClassName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getDriverClassName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._insertId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._jndiName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getDatasourceName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasourceName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._lastScavengeTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._queryId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getScavengeInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._selectExpiredSessions</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._server</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIdTable</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</name>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.JDBCSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._task</name>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._timer</name>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager._workerName</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.access$000(org.eclipse.jetty.server.session.JDBCSessionIdManager)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.Timer(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._timer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getScavengeInterval()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.cancel()</outbound>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <outbound type="feature" confirmed="no">java.util.TimerTask.cancel()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.AbstractSessionIdManager.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._task</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._timer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeQuery()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next()</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._queryId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.DriverManager.getConnection(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <outbound type="feature" confirmed="no">javax.sql.DataSource.getConnection()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._datasource</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getDatasourceName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._jndiName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getDriverClassName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._driverClassName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionIdManager._workerName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.getScavengeInterval()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.exists(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.initializeDatabase()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.naming.InitialContext.InitialContext()</outbound>
                <outbound type="feature" confirmed="no">javax.naming.InitialContext.lookup(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._datasource</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._driverClassName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._jndiName</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.insert(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeQuery()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next()</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._insertId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._queryId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getChildHandlerByClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionIdManager._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.createStatement()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.getMetaData()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.DatabaseMetaData</outbound>
                <outbound type="feature" confirmed="no">java.sql.DatabaseMetaData.getIndexInfo(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)</outbound>
                <outbound type="feature" confirmed="no">java.sql.DatabaseMetaData.getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next()</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">java.sql.Statement</outbound>
                <outbound type="feature" confirmed="no">java.sql.Statement.executeUpdate(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionIdTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._createSessionTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._dbAdaptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteOldExpiredSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._insertId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._queryId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._selectExpiredSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIdTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionIds</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.delete(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.getClusterId()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeQuery()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setLong(int, long)</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next()</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.Server.getChildHandlersByClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.handler.ContextHandler.getChildHandlerByClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._deleteOldExpiredSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._lastScavengeTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._selectExpiredSessions</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionIdManager._server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.access$000(org.eclipse.jetty.server.session.JDBCSessionIdManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasourceName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._jndiName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._connectionUrl</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._driverClassName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.Timer</outbound>
                <outbound type="feature" confirmed="no">java.util.Timer.schedule(java.util.TimerTask, long, long)</outbound>
                <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
                <outbound type="feature" confirmed="no">java.util.TimerTask.cancel()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.JDBCSessionIdManager$1(org.eclipse.jetty.server.session.JDBCSessionIdManager)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._scavengeIntervalMs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._task</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._timer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$1</name>
            <outbound type="class" confirmed="no">java.util.TimerTask</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$1.JDBCSessionIdManager$1(org.eclipse.jetty.server.session.JDBCSessionIdManager)</name>
                <outbound type="feature" confirmed="no">java.util.TimerTask.TimerTask()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$1.run()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.access$000(org.eclipse.jetty.server.session.JDBCSessionIdManager)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$1.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.JDBCSessionIdManager$1(org.eclipse.jetty.server.session.JDBCSessionIdManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._dbAdaptor</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.sql.DatabaseMetaData</outbound>
                <outbound type="feature" confirmed="no">java.sql.DatabaseMetaData.getDatabaseProductName()</outbound>
                <outbound type="feature" confirmed="no">java.sql.DatabaseMetaData.storesLowerCaseIdentifiers()</outbound>
                <outbound type="feature" confirmed="no">java.sql.DatabaseMetaData.storesUpperCaseIdentifiers()</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._dbName</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isLower</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isUpper</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._dbName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isLower</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isUpper</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.convertIdentifier(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toUpperCase()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isLower</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._isUpper</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.Blob</outbound>
                <outbound type="feature" confirmed="no">java.sql.Blob.getBinaryStream()</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getBlob(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getBytes(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._dbName</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor._dbName</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionManager</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.JDBCSessionManager()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._saveIntervalSec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__deleteSession</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__insertSession</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__selectSession</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__updateSession</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionAccessTime</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionNode</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._context</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._dftMaxIdleSecs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._minSessions</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._saveIntervalSec</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.JDBCSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSaveInterval()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.setSaveInterval(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._sessionIdManager</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._sessionListeners</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager._sessions</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.access$000(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.access$100(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.handler.ContextHandler$Context)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.access$400(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.didActivate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$000(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__deleteSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._sessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ThreadDeath</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.listIterator()</outbound>
                <outbound type="class" confirmed="no">java.util.ListIterator</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.ListIterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.size()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._minSessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.isStopped()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.isStopping()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</name>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getSaveInterval()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._saveIntervalSec</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.didActivate()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$300(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastNode()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._saveIntervalSec</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.canonicalize(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getSessions()</name>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.size()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$100(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.invalidate()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSessions()</name>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.isStopped()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.isStopping()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeQuery()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getLong(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.getBlobInputStream(java.sql.ResultSet, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._dbAdaptor</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.readObject()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAccessed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAttributeMap(java.util.concurrent.ConcurrentHashMap)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCanonicalContext(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCookieSet(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCreated(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setExpiryTime(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastAccessed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastNode(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setRowId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setVirtualHost(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__selectSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.newSession(javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.prepareTables()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager._sessionTable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__deleteSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__insertSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__selectSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionAccessTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionNode</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._sessionIdManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionEvent</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionEvent.HttpSessionEvent(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSessionListener</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpSessionListener.sessionDestroyed(javax.servlet.http.HttpSessionEvent)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.invalidateAll(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.removeSession(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.willPassivate()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._sessionIdManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._sessionListeners</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._sessions</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.LazyList.size(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.setSaveInterval(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager._saveIntervalSec</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream, int)</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setLong(int, long)</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCanonicalContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCookieSet()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCreated()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getExpiryTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getVirtualHost()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setRowId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__insertSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.ByteArrayOutputStream()</outbound>
                <outbound type="feature" confirmed="no">java.io.ByteArrayOutputStream.toByteArray()</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.ObjectOutputStream(java.io.OutputStream)</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectOutputStream.writeObject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setBinaryStream(int, java.io.InputStream, int)</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setLong(int, long)</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getExpiryTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSession</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setLong(int, long)</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getExpiryTime()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionAccessTime</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$400(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.sql.Connection</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.prepareStatement(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.sql.Connection.setAutoCommit(boolean)</outbound>
                <outbound type="class" confirmed="no">java.sql.PreparedStatement</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.close()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.executeUpdate()</outbound>
                <outbound type="feature" confirmed="no">java.sql.PreparedStatement.setString(int, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.__updateSessionNode</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getConnection()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream</name>
            <outbound type="class" confirmed="no">java.io.ObjectInputStream</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.ObjectInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.readObject()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.resolveClass(java.io.ObjectStreamClass)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass)</outbound>
                <outbound type="class" confirmed="no">java.io.ObjectStreamClass</outbound>
                <outbound type="feature" confirmed="no">java.io.ObjectStreamClass.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Thread</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.currentThread()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Thread.getContextClassLoader()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$ClassLoadingObjectInputStream.JDBCSessionManager$ClassLoadingObjectInputStream(org.eclipse.jetty.server.session.JDBCSessionManager, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getContextPath()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session._clusterId</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session._maxIdleMs</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.this$0</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCanonicalContext(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setExpiryTime(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setMaxIdleMs(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setVirtualHost(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._context</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager._dftMaxIdleSecs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$000(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$100(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.handler.ContextHandler$Context)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.newSession(javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.AbstractSessionManager$Session(org.eclipse.jetty.server.session.AbstractSessionManager, long, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session._values</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.this$0</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCreated()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session._clusterId</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.cookieSet()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.newAttributeMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session._maxIdleMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session._values</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.access(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session._maxIdleMs</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAccessed(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setExpiryTime(long)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastAccessed(long)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.complete()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.didActivate()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.getId()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.willPassivate()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$200(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$300(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$400(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSaveInterval()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.cookieSet()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCookieSet(long)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.didActivate()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.getClusterId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.getId()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.invalidate()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.invalidateSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.newAttributeMap()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.removeAttribute(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._dirty</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.timeout()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager$Session.getClusterId()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$Session.willPassivate()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session._data</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access$500(org.eclipse.jetty.server.session.JDBCSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.cookieSet()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.newAttributeMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.access$400(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.currentTimeMillis()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionIdManager.getWorkerName()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._attributes</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._created</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._id</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.this$0</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.JDBCSessionManager.getIdManager()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$200(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAccessed(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._attributes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAttributeMap(java.util.concurrent.ConcurrentHashMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._canonicalContext</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCanonicalContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCanonicalContext(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._cookieSet</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCookieSet()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCookieSet(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._created</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCreated()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCreated(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._expiryTime</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getExpiryTime()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setExpiryTime(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._id</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastAccessed</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastAccessed()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastAccessed(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastNode()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastNode(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastSaved</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$300(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastSaved()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._maxIdleMs</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getMaxIdleMs()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setMaxIdleMs(long)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._rowId</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setRowId(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._virtualHost</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getVirtualHost()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setVirtualHost(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$200(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.access$300(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastSaved</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAccessed()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.cookieSet()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getAttributeMap()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.newAttributeMap()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCanonicalContext()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._canonicalContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCookieSet()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._cookieSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getCreated()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._created</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getExpiryTime()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._expiryTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getId()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._id</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.calculateRowId(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastAccessed()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastAccessed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastNode()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getLastSaved()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastSaved</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getMaxIdleMs()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._maxIdleMs</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getRowId()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._rowId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.getVirtualHost()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._virtualHost</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAccessed(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setAttributeMap(java.util.concurrent.ConcurrentHashMap)</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.ConcurrentHashMap</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._attributes</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCanonicalContext(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._canonicalContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCookieSet(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._cookieSet</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.cookieSet()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setCreated(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._created</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setExpiryTime(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._expiryTime</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastAccessed(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastAccessed</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.access(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastNode(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setLastSaved(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastSaved</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setMaxIdleMs(long)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._maxIdleMs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setRowId(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._rowId</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.setVirtualHost(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._virtualHost</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.JDBCSessionManager$Session(org.eclipse.jetty.server.session.JDBCSessionManager, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.JDBCSessionManager$SessionData(org.eclipse.jetty.server.session.JDBCSessionManager, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.JDBCSessionManager$SessionData.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(long)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._accessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._cookieSet</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._created</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._id</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastAccessed</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastNode</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._lastSaved</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$SessionData._rowId</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.session.SessionHandler</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager._sessionHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.SessionHandler()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.HashSessionManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler(org.eclipse.jetty.server.SessionManager)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.SessionHandler(org.eclipse.jetty.server.SessionManager)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.HandlerWrapper()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler._sessionManager</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.addEventListener(java.util.EventListener)</name>
                <outbound type="class" confirmed="no">java.util.EventListener</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.addEventListener(java.util.EventListener)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.clearEventListeners()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.clearEventListeners()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionManager.start()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.doStop()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.SessionManager.stop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.doStop()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.SessionHandler.getHandler()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.SessionHandler.getServer()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getSession(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.isSecure()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpCookie</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Handler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getResponse()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSession(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getSessionManager()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recoverNewSession(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Response</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.addCookie(org.eclipse.jetty.http.HttpCookie)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.access(javax.servlet.http.HttpSession, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.complete(javax.servlet.http.HttpSession)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.SessionHandler.getHandler()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.session.SessionHandler.isStarted()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.Cookie</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getName()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.Cookie.getValue()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getCookies()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestURI()</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getRequestedSessionId()</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpSession</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.DispatcherType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.DispatcherType.REQUEST</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.DispatcherType.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getDispatcherType()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getHttpSession(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionCookie()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.getSessionIdPathParameterName()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.isUsingCookies()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.getSessionManager()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.SessionHandler.getServer()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</name>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.SessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler._sessionManager</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.SessionHandler.getServer()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.session.SessionHandler.isStarted()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.component.Container</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.SessionHandler(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.eclipse.jetty.server.ssl</name>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.ServletSSL</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.ServletSSL.ServletSSL()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.ServletSSL.deduceKeyLength(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslConnector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</outbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.DEFAULT_KEYSTORE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.KEYPASSWORD_PROPERTY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.PASSWORD_PROPERTY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getExcludeCipherSuites()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getKeystore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getKeystoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getNeedClientAuth()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getProtocol()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getProvider()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getSecureRandomAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getSslContext()</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getSslKeyManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getSslTrustManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getTruststore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getTruststoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.getWantClientAuth()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setExcludeCipherSuites(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setKeyPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setKeystore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setKeystoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setNeedClientAuth(boolean)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setProtocol(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setProvider(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setSecureRandomAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setSslContext(javax.net.ssl.SSLContext)</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setTrustPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setTruststore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setTruststoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.setWantClientAuth(boolean)</name>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslConnector.static {}</name>
                <outbound type="feature" confirmed="no">java.io.File.separator</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector.DEFAULT_KEYSTORE</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.SslSelectChannelConnector$1(org.eclipse.jetty.server.ssl.SslSelectChannelConnector)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.CACHED_INFO_ATTR</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.DEFAULT_KEYSTORE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.SelectChannelConnector()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.DEFAULT_KEYSTORE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._needClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslContext(javax.net.ssl.SSLContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getExcludeCipherSuites()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setExcludeCipherSuites(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keyPassword</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystore()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystore(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystoreType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystoreType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._needClientAuth</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getNeedClientAuth()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setNeedClientAuth(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._password</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProtocol()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProtocol(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._provider</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProvider(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._secureRandomAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSecureRandomAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSecureRandomAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslBuffers</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslKeyManagerFactoryAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslTrustManagerFactoryAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._trustPassword</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststorePath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststore()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststore(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststoreType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststoreType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector._wantClientAuth</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.SslSelectChannelConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getWantClientAuth()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setWantClientAuth(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.getInstance(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._provider</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._secureRandomAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.createSSLEngine()</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLEngine</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.getEnabledCipherSuites()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.setEnabledCipherSuites(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.setNeedClientAuth(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.setUseClientMode(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.setWantClientAuth(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._needClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._wantClientAuth</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.close()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLEngine</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.getSession()</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSession</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getCipherSuite()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getId()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.putValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint.getSSLEngine()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setScheme(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL.deduceKeyLength(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getCerts()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getIdStr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getKeySize()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.CACHED_INFO_ATTR</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.TypeUtil.toHexString(byte[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLEngine</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLEngine.getSession()</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSession</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getApplicationBufferSize()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ThreadLocalBuffers.setBufferSize(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ThreadLocalBuffers.setHeaderSize(int)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.doStart()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.SslSelectChannelConnector$1(org.eclipse.jetty.server.ssl.SslSelectChannelConnector)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslBuffers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getRequestBufferSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getRequestHeaderSize()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setRequestBufferSize(int)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setRequestHeaderSize(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslKeyManagerFactoryAlgorithm()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.cert.Certificate</outbound>
                <outbound type="class" confirmed="no">java.security.cert.CertificateFactory</outbound>
                <outbound type="feature" confirmed="no">java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.security.cert.CertificateFactory.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLPeerUnverifiedException</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSession</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getPeerCertificateChain()</outbound>
                <outbound type="class" confirmed="no">javax.security.cert.X509Certificate</outbound>
                <outbound type="feature" confirmed="no">javax.security.cert.X509Certificate.getEncoded()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getConfidentialPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getExcludeCipherSuites()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getIntegralPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManagerFactory</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.getKeyManagers()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore, char[])</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keyPassword</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._password</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toString()</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="feature" confirmed="no">java.security.KeyStore.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.security.KeyStore.load(java.io.InputStream, char[])</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getNeedClientAuth()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._needClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProtocol()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProvider()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._provider</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getRequestBufferSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getRequestHeaderSize()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSecureRandomAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._secureRandomAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslKeyManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getAlgorithm()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslTrustManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManagerFactory</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.getTrustManagers()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._password</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._trustPassword</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getWantClientAuth()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isConfidential(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getConfidentialPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.isIntegral(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getIntegralPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</name>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.HttpParser</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.HttpParser.setForceContentBuffer(boolean)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.Parser</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Connection</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.HttpConnection</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.getParser()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectChannelEndPoint)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newEndPoint(java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SelectionKey</outbound>
                <outbound type="class" confirmed="no">java.nio.channels.SocketChannel</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLEngine</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.ssl.SslSelectChannelEndPoint.SslSelectChannelEndPoint(org.eclipse.jetty.io.Buffers, java.nio.channels.SocketChannel, org.eclipse.jetty.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey, javax.net.ssl.SSLEngine)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffers</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectChannelEndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.nio.SelectorManager$SelectSet</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslBuffers</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setExcludeCipherSuites(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._excludeCipherSuites</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keyPassword</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._keystoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setNeedClientAuth(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._needClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._password</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProtocol(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._protocol</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProvider(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._provider</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setRequestBufferSize(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setRequestHeaderSize(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSecureRandomAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._secureRandomAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslContext(javax.net.ssl.SSLContext)</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._sslTrustManagerFactoryAlgorithm</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._trustPassword</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._truststoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setWantClientAuth(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.CACHED_INFO_ATTR</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1</name>
            <outbound type="class" confirmed="no">org.eclipse.jetty.io.ThreadLocalBuffers</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.SslSelectChannelConnector$1(org.eclipse.jetty.server.ssl.SslSelectChannelConnector)</name>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.ThreadLocalBuffers.ThreadLocalBuffers()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.doStart()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.isHeader(org.eclipse.jetty.io.Buffer)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newBuffer(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.newHeader(int)</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.Buffer</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.nio.DirectNIOBuffer.DirectNIOBuffer(int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$1.SslSelectChannelConnector$1(org.eclipse.jetty.server.ssl.SslSelectChannelConnector)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.static {}</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._certs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._idStr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._keySize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._certs</name>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getCerts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._idStr</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getIdStr()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._keySize</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getKeySize()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getCerts()</name>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._certs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getIdStr()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._idStr</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.getKeySize()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo._keySize</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector$CachedInfo.SslSelectChannelConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSelectChannelConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSocketConnector</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslConnector</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.this$0</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.CACHED_INFO_ATTR</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.DEFAULT_KEYSTORE</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.security.Security.getProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.SocketConnector()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector.DEFAULT_KEYSTORE</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._handshakeTimeout</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._context</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslContext(javax.net.ssl.SSLContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getExcludeCipherSuites()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setExcludeCipherSuites(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._handshakeTimeout</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getHandshakeTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setHandshakeTimeout(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._keyPassword</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystore()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystore(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystoreType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystoreType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getNeedClientAuth()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setNeedClientAuth(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._password</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getProtocol()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setProtocol(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._provider</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setProvider(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._secureRandomAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSecureRandomAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSecureRandomAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._serverSocket</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslKeyManagerFactoryAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslTrustManagerFactoryAlgorithm()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._trustPassword</name>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._truststorePath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststore()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststore(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststoreType()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststoreType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector._wantClientAuth</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.SslSocketConnector()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getWantClientAuth()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.setWantClientAuth(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.InterruptedException</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.net.ServerSocket.accept()</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector._serverSocket</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.configure(java.net.Socket)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.configure(java.net.Socket)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.bio.SocketConnector.configure(java.net.Socket)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.getServerSocketFactory()</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLServerSocketFactory</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.SecureRandom</outbound>
                <outbound type="feature" confirmed="no">java.security.SecureRandom.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.getInstance(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManager</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._provider</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._secureRandomAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSession</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getCipherSuite()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getId()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.putValue(java.lang.String, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSocket</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSocket.getSession()</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.EndPoint</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.io.bio.SocketEndPoint.getTransport()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setScheme(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.ServletSSL.deduceKeyLength(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getCerts()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getIdStr()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getKeySize()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.CACHED_INFO_ATTR</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.TypeUtil.toHexString(byte[])</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</name>
                <outbound type="feature" confirmed="no">java.io.ByteArrayInputStream.ByteArrayInputStream(byte[])</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.security.cert.Certificate</outbound>
                <outbound type="class" confirmed="no">java.security.cert.CertificateFactory</outbound>
                <outbound type="feature" confirmed="no">java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">java.security.cert.CertificateFactory.getInstance(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLPeerUnverifiedException</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSession</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSession.getPeerCertificateChain()</outbound>
                <outbound type="class" confirmed="no">javax.security.cert.X509Certificate</outbound>
                <outbound type="feature" confirmed="no">javax.security.cert.X509Certificate.getEncoded()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getConfidentialPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isConfidential(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getExcludeCipherSuites()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getHandshakeTimeout()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._handshakeTimeout</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getIntegralPort()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.isIntegral(org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.KeyManagerFactory</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.getKeyManagers()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore, char[])</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keyPassword</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._password</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toString()</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="feature" confirmed="no">java.security.KeyStore.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.security.KeyStore.load(java.io.InputStream, char[])</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.util.resource.Resource</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.getInputStream()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getNeedClientAuth()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getProtocol()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getProvider()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._provider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getSecureRandomAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._secureRandomAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._context</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getSslKeyManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getSslTrustManagerFactoryAlgorithm()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.KeyStore</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManager</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.TrustManagerFactory</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.getTrustManagers()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._password</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._trustPassword</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststorePath</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createSSLContext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststore()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststoreType()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.getWantClientAuth()</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.isConfidential(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector.getConfidentialPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.isIntegral(org.eclipse.jetty.server.Request)</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.Request</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerPort()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector.getIntegralPort()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.io.IOException.IOException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.InetAddress</outbound>
                <outbound type="feature" confirmed="no">java.net.InetAddress.getByName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.ServerSocket</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLServerSocket</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocket.getEnabledCipherSuites()</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocket.setEnabledCipherSuites(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocket.setNeedClientAuth(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocket.setWantClientAuth(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLServerSocketFactory</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocketFactory.createServerSocket(int, int)</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLServerSocketFactory.createServerSocket(int, int, java.net.InetAddress)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._wantClientAuth</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.createFactory()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.warn(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setExcludeCipherSuites(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._excludeCipherSuites</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setHandshakeTimeout(int)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._handshakeTimeout</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keyPassword</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._keystoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setNeedClientAuth(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._needClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._password</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setProtocol(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._protocol</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setProvider(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._provider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setSecureRandomAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._secureRandomAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setSslContext(javax.net.ssl.SSLContext)</name>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLContext</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._context</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslKeyManagerFactoryAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._sslTrustManagerFactoryAlgorithm</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.eclipse.jetty.http.security.Password</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.http.security.Password.getPassword(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._trustPassword</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststorePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststoreType(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._truststoreType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.setWantClientAuth(boolean)</name>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector._wantClientAuth</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.CACHED_INFO_ATTR</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.static {}</inbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._certs</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._idStr</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._keySize</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._certs</name>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getCerts()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._idStr</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getIdStr()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._keySize</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getKeySize()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getCerts()</name>
                <outbound type="class" confirmed="no">java.security.cert.X509Certificate</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._certs</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getIdStr()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._idStr</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.getKeySize()</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo._keySize</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$CachedInfo.SslSocketConnector$CachedInfo(org.eclipse.jetty.server.ssl.SslSocketConnector, java.lang.Integer, java.security.cert.X509Certificate[], java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection</name>
            <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection</outbound>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.SocketConnector$Connection(org.eclipse.jetty.server.bio.SocketConnector, java.net.Socket)</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.accept(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection._socket</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.close()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.Socket</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.getSoTimeout()</outbound>
                <outbound type="feature" confirmed="no">java.net.Socket.setSoTimeout(int)</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLException</outbound>
                <outbound type="class" confirmed="no">javax.net.ssl.SSLSocket</outbound>
                <outbound type="feature" confirmed="no">javax.net.ssl.SSLSocket.startHandshake()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</outbound>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection._socket</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.close()</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getHandshakeTimeout()</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.this$0</name>
                <outbound type="class" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector</outbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.SslSocketConnector$SslConnection(org.eclipse.jetty.server.ssl.SslSocketConnector, java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.util</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.Attributes</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.Dispatcher$ForwardAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes._attr</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.toString()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.Dispatcher$IncludeAttributes(org.eclipse.jetty.server.Dispatcher, org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes._attr</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._attributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Server</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttributeNames()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Attributes.clearAttributes()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Attributes.getAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Attributes.getAttributeNames()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Attributes.removeAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Attributes.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$ForwardAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher$IncludeAttributes.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.AttributesMap</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._attributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.clearAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._attributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._contextAttributes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$200(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$300(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributes()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.AttributesMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.ContextHandler(org.eclipse.jetty.server.handler.ContextHandler$Context)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.clearAttributes()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.getAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.getAttributeNames()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.clearAttributes()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.getAttributeNamesCopy(org.eclipse.jetty.util.Attributes)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getAttributeNames()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.removeAttribute(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.removeAttribute(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.AttributesMap.setAttribute(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.ByteArrayISO8859Writer</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.ByteArrayISO8859Writer(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.destroy()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.flush()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.write(char)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.write(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayISO8859Writer.writeTo(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.ByteArrayOutputStream2</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpOutput._bytes</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.getConverter()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.ByteArrayOutputStream2(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.getBuf()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.getCount()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.reset()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.setCount(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.ByteArrayOutputStream2.writeTo(java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpWriter.write(char[], int, int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.DateCache</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog._logDateCache</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler._date</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.DateCache.DateCache(java.lang.String, java.util.Locale)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.DebugHandler()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.DateCache.format(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.DateCache.lastMs()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.DateCache.now()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.DateCache.setTimeZoneID(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.IO</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.IO.getNullWriter()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.IO.readBytes(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.LazyList</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.add(java.lang.Object, int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.add(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.addContinuationListener(org.eclipse.jetty.continuation.ContinuationListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.mapContexts()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.addArray(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.expandHandler(org.eclipse.jetty.server.Handler, java.lang.Object, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.addToArray(java.lang.Object[], java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.addEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.addHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.ensureSize(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.get(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.getList(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.getList(java.lang.Object, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.remove(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.remove(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeEventListener(java.util.EventListener)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeEventListener(java.util.EventListener)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.removeFromArray(java.lang.Object[], java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.removeHandler(org.eclipse.jetty.server.Handler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.size(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.addCookieField(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.getCookies()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getLocales()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.startContext()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.doInvalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.removeAttribute(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager$Session.setAttribute(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.LazyList.toArray(java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.Loader</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Loader.loadClass(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.MultiException</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.MultiException()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.add(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.getThrowable(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.ifExceptionThrow()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.ifExceptionThrowRuntime()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiException.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.MultiMap</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._baseParameters</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request._parameters</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager._sessions</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.MultiMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.MultiMap(boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.MultiMap(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.add(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.clear()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.recycle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.entrySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.getValue(java.lang.Object, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameter(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.getValues(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterValues(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.keySet()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterNames()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.removeValue(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.invalidateAll(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.removeSession(javax.servlet.http.HttpSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.size()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.MultiMap.toStringArrayMap()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getParameterMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.QuotedStringTokenizer</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.QuotedStringTokenizer.quote(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.QuotedStringTokenizer.unquote(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.setContentType(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.RolloverFileOutputStream</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.RolloverFileOutputStream.RolloverFileOutputStream(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DebugHandler.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.RolloverFileOutputStream.RolloverFileOutputStream(java.lang.String, boolean, int, java.util.TimeZone, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.RolloverFileOutputStream.getDatedFilename()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.getDatedFilename()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.StringUtil</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.StringUtil.__LINE_SEPARATOR</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.StringUtil.isUTF8(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.StringUtil.replace(java.lang.String, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ErrorHandler.deScript(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.TypeUtil</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.TypeUtil.toHexString(byte[])</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.TypeUtil.toString(long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.URIUtil</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.__CHARSET</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.HttpConnection(org.eclipse.jetty.server.Connector, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Server, org.eclipse.jetty.http.Parser, org.eclipse.jetty.http.Generator, org.eclipse.jetty.server.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.addPaths(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.checkContext(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.canonicalPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.compactPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doScope(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.decodePath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.hasScheme(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.MovedContextHandler$Redirector.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.URIUtil.parentPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendRedirect(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.UrlEncoded</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.UrlEncoded.decodeTo(java.io.InputStream, org.eclipse.jetty.util.MultiMap, java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.UrlEncoded.decodeTo(java.lang.String, org.eclipse.jetty.util.MultiMap, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.eclipse.jetty.server.DispatcherType)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Dispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.Utf8StringBuilder</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Utf8StringBuilder.Utf8StringBuilder(int)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Utf8StringBuilder.getStringBuilder()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.Utf8StringBuilder.reset()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.util.component</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.component.AbstractLifeCycle</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.ResourceCache</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.AbstractLifeCycle.AbstractLifeCycle()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.NCSARequestLog(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.ResourceCache(org.eclipse.jetty.http.MimeTypes)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.AbstractHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.AbstractSessionIdManager(org.eclipse.jetty.server.Server, java.util.Random)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.AbstractSessionManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.HashSessionIdManager(java.util.Random)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.AbstractLifeCycle.doStart()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.AbstractLifeCycle.doStop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionManager.doStop()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.component.Container</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._container</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getContainer()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.Container()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.Server(int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.addBean(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.removeBean(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.destroy()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.Container.update(java.lang.Object, java.lang.Object[], java.lang.Object[], java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[])</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.component.LifeCycle</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Connector</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.Handler</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.HandlerContainer</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.RequestLog</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.removeLifeCycle(org.eclipse.jetty.util.component.LifeCycle)</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionIdManager</inbound>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.SessionManager</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.LifeCycle.start()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.addBean(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.component.LifeCycle.stop()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.util.log</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.log.Log</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.debug(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setStatsOn(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startResponse(org.eclipse.jetty.io.Buffer, int, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager$DatabaseAdaptor.JDBCSessionIdManager$DatabaseAdaptor(org.eclipse.jetty.server.session.JDBCSessionIdManager, java.sql.DatabaseMetaData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.debug(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.AbstractHandler.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.debug(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$RequestHandler.startRequest(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandlerCollection.addContext(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.getLogger(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.ignore(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.checkForwardedHeaders(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.configure(java.net.Socket)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.getServerName()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRequestDispatcher(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResourceAsStream(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector$SslConnection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.info(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.dump()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.info(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.isDebugEnabled()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.undispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handle()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.handleRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.createShutdownHook()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handle(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.handleAsync(org.eclipse.jetty.server.HttpConnection)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.timeout()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.deleteSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.SessionHandler.setRequestedId(org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.warn(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.CookieCutter.parseFields()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.commitResponse(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.completeResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Response.sendError(int, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.InheritedChannelConnector.open()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.newServerSocket(java.lang.String, int, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.InclusiveByteRange.satisfiableRanges(java.util.Enumeration, boolean, long)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.warn(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.AbstractSessionIdManager.initRandom()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.restoreSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.saveSessions()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.addSession(javax.servlet.http.HttpSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.idInUse(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager$Session.complete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.addSession(org.eclipse.jetty.server.session.AbstractSessionManager$Session)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.expire(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionManager.removeSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.createSSLEngine()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.customize(org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.server.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getCertChain(javax.net.ssl.SSLSession)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Log.warn(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector$Acceptor.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.doComplete()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.expired()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request, org.eclipse.jetty.server.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Request.extractParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server$ShutdownHookThread.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.DefaultHandler.DefaultHandler()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector.close()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager$1.run()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.session.JDBCSessionIdManager.scavenge()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.log.Logger</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._logger</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.access$100(org.eclipse.jetty.server.handler.ContextHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getLogger()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Logger.info(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Logger.info(java.lang.String, java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.log.Logger.warn(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.Exception, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.log(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.util.resource</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.resource.FileResource</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.FileResource.getCheckAliases()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.resource.Resource</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content._resource</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.ResourceCache$Miss(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.isValid()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.miss(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler._baseResource</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getBaseResource()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourceBase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler._baseResource</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.addPath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.exists()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Miss.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.getAlias()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.getFile()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getRealPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getClassPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.getInputStream()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.getInputStream()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.getListHTML(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.getURL()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler$Context.getResource(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.isDirectory()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.lastModified()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.ResourceCache$Content(org.eclipse.jetty.server.ResourceCache, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.isValid()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.length()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.load(java.lang.String, org.eclipse.jetty.util.resource.Resource)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.doResponseHeaders(javax.servlet.http.HttpServletResponse, org.eclipse.jetty.util.resource.Resource, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.list()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.newResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.setResourceBase(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.newResource(java.net.URL)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ContextHandler.newResource(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.release()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection$Output.sendContent(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache$Content.invalidate()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.fill(org.eclipse.jetty.server.ResourceCache$Content)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.Resource.writeTo(java.io.OutputStream, long, long)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String, org.eclipse.jetty.server.Request, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.resource.ResourceFactory</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.resource.ResourceFactory.getResource(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.ResourceCache.lookup(java.lang.String, org.eclipse.jetty.util.resource.ResourceFactory)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.eclipse.jetty.util.thread</name>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.thread.QueuedThreadPool</name>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.thread.QueuedThreadPool.QueuedThreadPool()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.thread.ThreadPool</name>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector._threadPool</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.getThreadPool()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server._threadPool</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStart()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.doStop()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.getThreadPool()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.join()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.thread.ThreadPool.dispatch(java.lang.Runnable)</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.doStart()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.LocalConnector.accept(int)</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.bio.SocketConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.dispatch()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$1.dispatch(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.thread.ThreadPool.isLowOnThreads()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AbstractConnector.isLowResources()</inbound>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.BlockingChannelConnector$Connection.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.thread.ThreadPool.join()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.Server.join()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.eclipse.jetty.util.thread.Timeout$Task</name>
            <inbound type="class" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState.AsyncContinuation$AsyncEventState(org.eclipse.jetty.server.AsyncContinuation, javax.servlet.ServletContext, javax.servlet.ServletRequest, javax.servlet.ServletResponse)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState._timeout</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.cancelTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation.scheduleTimeout()</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.HttpConnection.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.cancelTimeout(org.eclipse.jetty.util.thread.Timeout$Task)</inbound>
            <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.nio.SelectChannelConnector$2.scheduleTimeout(org.eclipse.jetty.util.thread.Timeout$Task, long)</inbound>
            <feature confirmed="no">
                <name>org.eclipse.jetty.util.thread.Timeout$Task.Timeout$Task()</name>
                <inbound type="feature" confirmed="yes">org.eclipse.jetty.server.AsyncContinuation$AsyncEventState$1.AsyncContinuation$AsyncEventState$1(org.eclipse.jetty.server.AsyncContinuation$AsyncEventState)</inbound>
            </feature>
        </class>
    </package>
</dependencies>
