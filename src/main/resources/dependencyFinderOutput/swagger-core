<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>com.fasterxml.jackson.annotation</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.annotation.JsonIgnoreProperties</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.annotation.JsonIgnoreProperties.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.annotation.JsonInclude$Include</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.annotation.JsonInclude$Include.NON_NULL</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.annotation.JsonProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.annotation.JsonTypeInfo</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.annotation.JsonTypeInfo.property()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.core</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonFactory</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonParser</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.JsonParser.getCodec()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.JsonProcessingException</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.ObjectCodec</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.PrettyPrinter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.TreeNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.Version</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.VERSION</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.version()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.version()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.SwaggerModule()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.Version.unknownVersion()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.Versioned</name>
            <inbound type="class" confirmed="yes">io.swagger.jackson.PackageVersion</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.core.type</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.type.ResolvedType</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.type.ResolvedType.getRawClass()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.core.util</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter</name>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.core.util.VersionUtil</name>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.static {}</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.AnnotationIntrospector</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._intr</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.AnnotationIntrospector()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.SwaggerAnnotationIntrospector()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumValue(java.lang.Enum)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.AnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.BeanDescription</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.BeanDescription.bindingsForBeanType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.BeanDescription.findProperties()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.BeanDescription.getClassAnnotations()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.BeanDescription.getClassInfo()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.DeserializationContext</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.DeserializationFeature</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.JavaType</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.containedType(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.containedTypeCount()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.getContentType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.getKeyType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.getRawClass()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.hasGenericTypes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.isArrayType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.isContainerType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.isEnumType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JavaType.isMapLikeType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.JsonDeserializer</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.ModelDeserializer</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.ParameterDeserializer</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PathDeserializer</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PropertyDeserializer</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.ResponseDeserializer</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.ModelDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.ParameterDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.PathDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.ResponseDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.SecurityDefinitionDeserializer()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.JsonNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.asBoolean()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.asText()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.booleanValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.doubleValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.fieldNames()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.fields()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.JsonNode.intValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.Module</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.Module$SetupContext</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.Module$SetupContext.insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.ObjectMapper</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._mapper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.objectMapper()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.mapper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper(com.fasterxml.jackson.core.JsonFactory)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.DeserializationFeature, boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.SerializationFeature, boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.constructType(java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.getSerializationConfig()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.getTypeFactory()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.PrettyPrinter)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.ObjectWriter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.PropertyMetadata</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.PropertyMetadata.getRequired()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.PropertyName</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.PropertyName.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.PropertyName.hasSimpleName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.SerializationConfig</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationConfig.getAnnotationIntrospector()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationConfig.introspect(com.fasterxml.jackson.databind.JavaType)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationConfig.introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.SerializationFeature</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_EMPTY_BEANS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_INDEX</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.introspect</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.introspect.Annotated</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.introspect.AnnotatedClass</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedClass.getAnnotated()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember.annotations()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember.getMember()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember.getType(com.fasterxml.jackson.databind.type.TypeBindings)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMember.hasAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.introspect.AnnotatedMethod</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.jsontype</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.jsontype.NamedType</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.jsontype.NamedType.NamedType(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.jsontype.NamedType.getType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.module</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.module.SimpleModule</name>
            <inbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.SwaggerModule</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.DeserializationModule</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(com.fasterxml.jackson.core.Version)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.SwaggerModule()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String, com.fasterxml.jackson.core.Version)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.module.SimpleModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.node</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.ArrayNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.node.ArrayNode.iterator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.DoubleNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.FloatNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.IntNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.LongNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.NumericNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.ObjectNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.node.TextNode</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.node.TextNode.textValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.type</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.type.TypeBindings</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
        </class>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.type.TypeFactory</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.databind.util</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.databind.util.Annotations</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.databind.util.Annotations.get(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.fasterxml.jackson.dataformat.yaml</name>
        <class confirmed="no">
            <name>com.fasterxml.jackson.dataformat.yaml.YAMLFactory</name>
            <feature confirmed="no">
                <name>com.fasterxml.jackson.dataformat.yaml.YAMLFactory.YAMLFactory()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>io.swagger.annotations</name>
        <class confirmed="no">
            <name>io.swagger.annotations.ApiModel</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModel.description()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModel.discriminator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModel.reference()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModel.subTypes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModel.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.annotations.ApiModelProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.access()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.allowableValues()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.dataType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.example()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.hidden()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.name()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.position()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.readOnly()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.reference()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.required()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.annotations.ApiModelProperty.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.config</name>
        <class confirmed="yes">
            <name>io.swagger.config.ConfigFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.config.ConfigFactory.ConfigFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.config.FilterFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.config.FilterFactory.FILTER</name>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.getFilter()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.setFilter(io.swagger.core.filter.SwaggerSpecFilter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.FilterFactory.FilterFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.FilterFactory.getFilter()</name>
                <outbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.FILTER</outbound>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.FilterFactory.setFilter(io.swagger.core.filter.SwaggerSpecFilter)</name>
                <outbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.FILTER</outbound>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.FilterFactory.static {}</name>
                <outbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.FILTER</outbound>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.config.Scanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.config.Scanner.classes()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.Scanner.getPrettyPrint()</name>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.Scanner.setPrettyPrint(boolean)</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.config.SwaggerConfig</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.config.SwaggerConfig.configure(io.swagger.models.Swagger)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Swagger</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.config.SwaggerConfig.getFilterClass()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.converter</name>
        <class confirmed="yes">
            <name>io.swagger.converter.ModelConverter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.ModelResolver</inbound>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.converter.ModelConverterContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContextImpl</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContext.getConverters()</name>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.converter.ModelConverterContextImpl</name>
            <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.LOGGER</name>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.converters</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.converters</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByName</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.processedTypes</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeMap.TreeMap()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.converters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByName</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByType</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.getConverters()</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.converters</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByName</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.modelByName</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.modelByType</name>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.processedTypes</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByName</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.processedTypes</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ModelImpl</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.format(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.isDebugEnabled()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverterContextImpl.static {}</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.LoggerFactory.getLogger(java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.converter.ModelConverters</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.LOGGER</name>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.ModelConverters()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedClasses</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedPackages</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.SINGLETON</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedClasses</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.warn(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(int, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedPackages</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.converters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.getInstance()</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.SINGLETON</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.remove(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedClasses</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedPackages</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.skippedClasses</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.skippedPackages</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.converter.ModelConverters.static {}</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.SINGLETON</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedPackages</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.ServiceLoader</outbound>
                <outbound type="feature" confirmed="no">java.util.ServiceLoader.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.ServiceLoader.load(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.error(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.LoggerFactory.getLogger(java.lang.Class)</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.core.filter</name>
        <class confirmed="yes">
            <name>io.swagger.core.filter.AbstractSpecFilter</name>
            <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.AbstractSpecFilter.AbstractSpecFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.AbstractSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.AbstractSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.Parameter</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.AbstractSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.core.filter.SpecFilter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SpecFilter.SpecFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ExternalDocs</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Info</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getTags()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Path</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.Path()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getDelete()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getGet()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getOptions()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getPatch()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getPost()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.getPut()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Path.set(java.lang.String, io.swagger.models.Operation)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Swagger</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.Swagger()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.basePath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.consumes(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.externalDocs(io.swagger.models.ExternalDocs)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getBasePath()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getConsumes()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getDefinitions()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getExternalDocs()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getHost()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getInfo()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getPaths()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getProduces()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getSchemes()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getSecurityDefinitions()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.getTags()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.host(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.info(io.swagger.models.Info)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.path(java.lang.String, io.swagger.models.Path)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.produces(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.schemes(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.setDefinitions(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.setSecurityDefinitions(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.setTags(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Swagger.tags(java.util.List)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Tag</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Tag.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.remove()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.removeAll(java.util.Collection)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Model.clone()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Model.getProperties()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Model.setProperties(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedHashMap.LinkedHashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ExternalDocs</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.Operation()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.consumes(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.externalDocs(io.swagger.models.ExternalDocs)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getConsumes()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getDescription()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getExternalDocs()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getOperationId()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getParameters()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getProduces()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getResponses()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getSchemes()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getSecurity()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getSummary()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.getTags()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.operationId(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.produces(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.schemes(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.setParameters(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.setResponses(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.setSecurity(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.summary(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Operation.tags(java.util.List)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.Parameter</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.core.filter.SwaggerSpecFilter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.FILTER</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.getFilter()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.setFilter(io.swagger.core.filter.SwaggerSpecFilter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.static {}</inbound>
            <inbound type="class" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SwaggerSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="yes">io.swagger.model.ApiDescription</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Operation</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.Parameter</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.jackson</name>
        <class confirmed="yes">
            <name>io.swagger.jackson.AbstractModelConverter</name>
            <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.this$0</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.ModelResolver</inbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.Version.unknownVersion()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.Module</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.getSerializationConfig()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig.getAnnotationIntrospector()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._intr</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._mapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._resolvedTypeNames</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeNameResolver</outbound>
                <outbound type="class" confirmed="yes">io.swagger.jackson.TypeNameResolver</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.std</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._intr</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlElement.defaultValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.example()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.readOnly()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.BeanDescription</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.getClassInfo()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isArrayType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isContainerType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isMapLikeType()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.getSerializationConfig()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.PropertyName</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.PropertyName.getSimpleName()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.PropertyName.hasSimpleName()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig.introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedClass</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._intr</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._mapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeNameResolver</outbound>
                <outbound type="class" confirmed="yes">io.swagger.jackson.TypeNameResolver</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._intr</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getInterfaces()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._mapper</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._resolvedTypeNames</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.jsontype.NamedType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.jsontype.NamedType.getType()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.BeanDescription</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.BeanDescription</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._resolvedTypeNames</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._typeNameResolver</name>
                <outbound type="class" confirmed="yes">io.swagger.jackson.TypeNameResolver</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter.getPropertyComparator()</name>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.AbstractModelConverter$2()</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</name>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.AbstractModelConverter$1</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(java.lang.String, com.fasterxml.jackson.core.Version)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.this$0</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$1.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.Module$SetupContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.Module$SetupContext.insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.SwaggerAnnotationIntrospector()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$1.this$0</name>
                <outbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.AbstractModelConverter$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$2.AbstractModelConverter$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.getPropertyComparator()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.getPosition()</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.compareTo(java.lang.Integer)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.AbstractModelConverter$2.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.JAXBAnnotationsHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.JAXBAnnotationsHelper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.JAXB_DEFAULT</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.setAttribute(java.lang.Boolean)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlAttribute</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAttribute.name()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlAttribute.namespace()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.setWrapped(java.lang.Boolean)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlElement.name()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlElement.namespace()</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlElementWrapper.name()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.Xml()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.getXml()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setXml(io.swagger.models.Xml)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.ArrayProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.MapProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.ObjectProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.RefProperty</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</name>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.namespace(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.trimToNull(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.ModelResolver</name>
            <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</outbound>
            <outbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.LOGGER</name>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.LoggerFactory.getLogger(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findEnumValue(java.lang.Enum)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.isEnabled(com.fasterxml.jackson.databind.SerializationFeature)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_INDEX</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_TO_STRING</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._intr</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty._enum(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getEnumConstants()</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.ordinal()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum[]</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(int)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._description(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._intr</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getCanonicalName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._isSetType(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._mapper</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.objectMapper()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.AbstractNumericProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.AbstractNumericProperty.setExclusiveMaximum(java.lang.Boolean)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.AbstractNumericProperty.setExclusiveMinimum(java.lang.Boolean)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.AbstractNumericProperty.setMaximum(java.lang.Double)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.AbstractNumericProperty.setMinimum(java.lang.Double)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setRequired(boolean)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.maxLength(java.lang.Integer)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.minLength(java.lang.Integer)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(double)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.Double(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.Integer(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.validation.constraints.DecimalMax</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.DecimalMax.inclusive()</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.DecimalMax.value()</outbound>
                <outbound type="class" confirmed="no">javax.validation.constraints.DecimalMin</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.DecimalMin.inclusive()</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.DecimalMin.value()</outbound>
                <outbound type="class" confirmed="no">javax.validation.constraints.Max</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.Max.value()</outbound>
                <outbound type="class" confirmed="no">javax.validation.constraints.Min</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.Min.value()</outbound>
                <outbound type="class" confirmed="no">javax.validation.constraints.Size</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.Size.max()</outbound>
                <outbound type="feature" confirmed="no">javax.validation.constraints.Size.min()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.getTypeFactory()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.forName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassNotFoundException.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.jackson.ModelResolver.getPropertyComparator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.objectMapper()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.annotation.JsonIgnoreProperties</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.annotation.JsonIgnoreProperties.value()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.annotation.JsonProperty</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.annotation.JsonTypeInfo</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.annotation.JsonTypeInfo.property()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.BeanDescription</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.bindingsForBeanType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.findProperties()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.getClassAnnotations()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.getClassInfo()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getContentType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isContainerType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isEnumType()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.getSerializationConfig()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.PropertyMetadata</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.PropertyMetadata.getRequired()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationConfig.introspect(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedClass</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.annotations()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getMember()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getType(com.fasterxml.jackson.databind.type.TypeBindings)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getGetter()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMetadata()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getName()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getPrimaryMember()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getSetter()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.type.TypeBindings</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.util.Annotations</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.util.Annotations.get(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModel.discriminator()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModel.reference()</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.access()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.allowableValues()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.dataType()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.name()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.readOnly()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.reference()</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.LOGGER</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._description(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._intr</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver.getPropertyComparator()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ModelImpl</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.ModelImpl()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.setDiscriminator(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.setProperties(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.setReference(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.type(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.xml(io.swagger.models.Xml)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.Xml()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.namespace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.ArrayProperty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.setItems(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.MapProperty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.setAdditionalProperties(io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.getName()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.getReadOnly()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setAccess(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setDefault(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setExample(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setPosition(java.lang.Integer)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setReadOnly(java.lang.Boolean)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setRequired(boolean)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder.merge(io.swagger.models.properties.Property, java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.RefProperty.RefProperty(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.AllowableValues</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableValues.asPropertyArguments()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.FALSE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TRUE</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isUpperCase(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Iterable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Iterable.iterator()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation[]</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Member</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Member.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedHashMap.LinkedHashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlRootElement.name()</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlRootElement.namespace()</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.constructType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.containedType(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getContentType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getKeyType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isContainerType()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.isEnumType()</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._isSetType(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ModelImpl</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.getName()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.getReference()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.ArrayProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.ArrayProperty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.items(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.setUniqueItems(java.lang.Boolean)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.MapProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.MapProperty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.additionalProperties(io.swagger.models.properties.Property)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.RefProperty.RefProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.StringProperty()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.constructType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._mapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.BeanDescription</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.BeanDescription.getClassInfo()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedClass</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedClass.getAnnotated()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.jsontype.NamedType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.jsontype.NamedType.getType()</outbound>
                <outbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.jackson.ModelResolver._intr</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ComposedModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.ComposedModel()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.child(io.swagger.models.Model)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.parent(io.swagger.models.Model)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ModelImpl</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.getName()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.getProperties()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.setDiscriminator(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.RefModel.RefModel(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.type.ResolvedType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.type.ResolvedType.getRawClass()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.debug(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.PackageVersion</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Versioned</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.PackageVersion.PackageVersion()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.PackageVersion.VERSION</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.version()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.version()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.SwaggerModule()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.PackageVersion.static {}</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.VersionUtil.parseVersion(java.lang.String, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.VERSION</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.PackageVersion.version()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.VERSION</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.SwaggerAnnotationIntrospector</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.SwaggerAnnotationIntrospector()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector.AnnotationIntrospector()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModel.description()</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.value()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.position()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.jsontype.NamedType.NamedType(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModel.subTypes()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedClass</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.hidden()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModelProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModelProperty.required()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.annotation.XmlElement.required()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerAnnotationIntrospector.version()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.VERSION</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.SwaggerModule</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule</outbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerModule.SwaggerModule()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.Version</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule(com.fasterxml.jackson.core.Version)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.VERSION</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerModule.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.SwaggerModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.AnnotationIntrospector</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.Module$SetupContext</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.Module$SetupContext.insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.SwaggerAnnotationIntrospector()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.jackson.TypeNameResolver</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeNameResolver</inbound>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.TypeNameResolver()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">io.swagger.annotations.ApiModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.annotations.ApiModel.value()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.trimToNull(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.containedType(int)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.containedTypeCount()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.hasGenericTypes()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.static {}</name>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.TypeNameResolver()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.std</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.jackson.TypeNameResolver.std</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.static {}</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.model</name>
        <class confirmed="yes">
            <name>io.swagger.model.ApiDescription</name>
            <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setMethod(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setPath(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.getMethod()</name>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.method</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.getPath()</name>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.method</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setMethod(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.path</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.getPath()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setPath(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.setMethod(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.method</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiDescription.setPath(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.path</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.model.ApiInfo</name>
            <outbound type="class" confirmed="no">io.swagger.models.Info</outbound>
            <outbound type="class" confirmed="no">java.lang.Deprecated</outbound>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiInfo.ApiInfo()</name>
                <outbound type="feature" confirmed="no">io.swagger.models.Info.Info()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">io.swagger.model.ApiInfo.setContact(io.swagger.models.Contact)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.model.ApiInfo.setDescription(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.model.ApiInfo.setLicense(io.swagger.models.License)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.model.ApiInfo.setTermsOfService(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.model.ApiInfo.setTitle(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Contact</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Contact.Contact()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Contact.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Info.Info()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.License</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.License.License()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.License.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.License.url(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.model.ApiInfo.setContact(io.swagger.models.Contact)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.model.ApiInfo.setDescription(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.model.ApiInfo.setLicense(io.swagger.models.License)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.model.ApiInfo.setTermsOfService(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.model.ApiInfo.setTitle(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>io.swagger.models</name>
        <class confirmed="no">
            <name>io.swagger.models.ArrayModel</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.ComposedModel</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.ComposedModel()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.child(io.swagger.models.Model)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.getAllOf()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.parent(io.swagger.models.Model)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.setChild(io.swagger.models.Model)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.setInterfaces(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ComposedModel.setParent(io.swagger.models.Model)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Contact</name>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Contact.Contact()</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Contact.name(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.ExternalDocs</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Info</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.model.ApiInfo</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Info.Info()</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.License</name>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.License.License()</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.License.name(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.License.url(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Model</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Model.clone()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Model.getProperties()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Model.setProperties(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.ModelImpl</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.ModelImpl()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.description(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.getProperties()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.getReference()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.name(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.setDiscriminator(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.setProperties(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.setReference(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.type(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.ModelImpl.xml(io.swagger.models.Xml)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Operation</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.Operation()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.consumes(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.description(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.externalDocs(io.swagger.models.ExternalDocs)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getConsumes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getDescription()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getExternalDocs()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getOperationId()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getParameters()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getProduces()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getResponses()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getSchemes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getSecurity()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getSummary()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.getTags()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.operationId(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.produces(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.schemes(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.setParameters(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.setResponses(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.setSecurity(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.summary(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Operation.tags(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Path</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Path.Path()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getDelete()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getGet()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getOptions()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getPatch()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getPost()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.getPut()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.isEmpty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Path.set(java.lang.String, io.swagger.models.Operation)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.RefModel</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.RefModel.RefModel(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.RefPath</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.RefResponse</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Response</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Swagger</name>
            <inbound type="feature" confirmed="yes">io.swagger.config.SwaggerConfig.configure(io.swagger.models.Swagger)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.Swagger()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.basePath(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.consumes(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.externalDocs(io.swagger.models.ExternalDocs)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getBasePath()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getConsumes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getDefinitions()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getExternalDocs()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getHost()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getInfo()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getPaths()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getProduces()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getSchemes()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getSecurityDefinitions()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.getTags()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.host(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.info(io.swagger.models.Info)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.path(java.lang.String, io.swagger.models.Path)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.produces(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.schemes(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.setDefinitions(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.setSecurityDefinitions(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.setTags(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Swagger.tags(java.util.List)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Tag</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Tag.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.Xml</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.Xml()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.attribute(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.name(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.namespace(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.prefix(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.setAttribute(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.setName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.setWrapped(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.Xml.wrapped(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>io.swagger.models.auth</name>
        <class confirmed="no">
            <name>io.swagger.models.auth.ApiKeyAuthDefinition</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.auth.BasicAuthDefinition</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.auth.OAuth2Definition</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.auth.SecuritySchemeDefinition</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>io.swagger.models.parameters</name>
        <class confirmed="no">
            <name>io.swagger.models.parameters.BodyParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.CookieParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.FormParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.HeaderParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.Parameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.PathParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.QueryParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.parameters.RefParameter</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>io.swagger.models.properties</name>
        <class confirmed="no">
            <name>io.swagger.models.properties.AbstractNumericProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.AbstractNumericProperty.setExclusiveMaximum(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.AbstractNumericProperty.setExclusiveMinimum(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.AbstractNumericProperty.setMaximum(java.lang.Double)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.AbstractNumericProperty.setMinimum(java.lang.Double)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.ArrayProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.ArrayProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.description(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.isType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.items(io.swagger.models.properties.Property)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.setItems(io.swagger.models.properties.Property)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.setUniqueItems(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ArrayProperty.setVendorExtensionMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.BaseIntegerProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.BaseIntegerProperty.BaseIntegerProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.BooleanProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.BooleanProperty.BooleanProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.DateProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.DateProperty.DateProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.DateTimeProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.DateTimeProperty.DateTimeProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.DecimalProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.DecimalProperty.DecimalProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.DoubleProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.DoubleProperty.DoubleProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.FloatProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.FloatProperty.FloatProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.IntegerProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.IntegerProperty.IntegerProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.LongProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.LongProperty.LongProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.MapProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.MapProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.MapProperty(io.swagger.models.properties.Property)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.additionalProperties(io.swagger.models.properties.Property)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.description(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.setAdditionalProperties(io.swagger.models.properties.Property)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.MapProperty.setVendorExtensionMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.ObjectProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ObjectProperty.ObjectProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.createProperty()</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ObjectProperty.ObjectProperty(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ObjectProperty.isType(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.ObjectProperty.setVendorExtensionMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.Property</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.getPosition()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.getReadOnly()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.getXml()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setAccess(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setDefault(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setDescription(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setExample(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setPosition(java.lang.Integer)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setReadOnly(java.lang.Boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setRequired(boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.Property.setXml(io.swagger.models.Xml)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.getXml(io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.PropertyBuilder</name>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder.build(java.lang.String, java.lang.String, java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder.merge(io.swagger.models.properties.Property, java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.PropertyBuilder$PropertyId</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.DEFAULT</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.DESCRIMINATOR</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.DESCRIPTION</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.ENUM</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.EXAMPLE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MAXIMUM</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MINIMUM</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.FORMAT</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MAXIMUM</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_ITEMS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_LENGTH</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_PROPERTIES</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MINIMUM</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_ITEMS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_LENGTH</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_PROPERTIES</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.PATTERN</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.READ_ONLY</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.TITLE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.UNIQUE_ITEMS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.VENDOR_EXTENSIONS</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.PropertyBuilder$PropertyId.getPropertyName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.RefProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.RefProperty.RefProperty(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.RefProperty.description(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.StringProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty.StringProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.createProperty()</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty.StringProperty(io.swagger.models.properties.StringProperty$Format)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.createProperty()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.createProperty()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.createProperty()</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty._enum(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty.maxLength(java.lang.Integer)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty.minLength(java.lang.Integer)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.StringProperty$Format</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.createProperty()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty$Format.BYTE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.createProperty()</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty$Format.URI</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.createProperty()</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.models.properties.StringProperty$Format.URL</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.createProperty()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.models.properties.UUIDProperty</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.createProperty()</inbound>
            <feature confirmed="no">
                <name>io.swagger.models.properties.UUIDProperty.UUIDProperty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.createProperty()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>io.swagger.util</name>
        <class confirmed="yes">
            <name>io.swagger.util.AllowableEnumValues</name>
            <outbound type="class" confirmed="yes">io.swagger.util.AllowableValues</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableEnumValues.AllowableEnumValues(java.util.List)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.items</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableEnumValues.asPropertyArguments()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.ENUM</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.items</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.EnumMap.EnumMap(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableEnumValues.create(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.AllowableEnumValues(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableEnumValues.getItems()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.items</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableEnumValues.items</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.AllowableEnumValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.getItems()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.AllowableRangeValues</name>
            <outbound type="class" confirmed="yes">io.swagger.util.AllowableValues</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMaximum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMinimum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.maximum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.minimum</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.CLOSE_EXCLUSIVE_RANGE_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.NEGATIVE_INFINITY_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.OPEN_EXCLUSIVE_RANGE_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.POSITIVE_INFINITY_KEY</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.RANGE_PATTERN</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.asPropertyArguments()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MAXIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MINIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MAXIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MINIMUM</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMaximum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMinimum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.maximum</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.minimum</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.EnumMap.EnumMap(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.create(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.RANGE_PATTERN</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveRange(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.find()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.group(int)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.exclusiveMaximum</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveMaximum()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.exclusiveMinimum</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveMinimum()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.parseDouble(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.getMaximum()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.maximum</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.getMinimum()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.minimum</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.isExclusiveMaximum()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMaximum</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.isExclusiveMinimum()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.exclusiveMinimum</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.isExclusiveRange(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.maximum</name>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.getMaximum()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.minimum</name>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.getMinimum()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableRangeValues.static {}</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.RANGE_PATTERN</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.AllowableValues</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableEnumValues</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableRangeValues</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableValues.asPropertyArguments()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.AllowableValuesUtils</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableValuesUtils.AllowableValuesUtils()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.AllowableValuesUtils.create(java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.AllowableEnumValues</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.AllowableRangeValues</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.AllowableValues</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.CharSequence)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.DeserializationModule</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.DeserializationModule.DeserializationModule()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.module.SimpleModule.SimpleModule()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Path</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Response</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.auth.SecuritySchemeDefinition</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.Parameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.util.DeserializationModule.addDeserializer(java.lang.Class, com.fasterxml.jackson.databind.JsonDeserializer)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.ModelDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.ParameterDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.PathDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.ResponseDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.SecurityDefinitionDeserializer()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>io.swagger.util.DeserializationModule.addDeserializer(java.lang.Class, com.fasterxml.jackson.databind.JsonDeserializer)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.Json</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.Json()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.mapper</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.mapper()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.pathMapper</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.pathMapper()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.pretty()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.PrettyPrinter)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.pretty(java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.prettyPrint(java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.pretty()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.responseMapper</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Json.responseMapper()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.ModelDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.ModelDeserializer.ModelDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.TextNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.node.TextNode.textValue()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ArrayModel</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ComposedModel</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.getAllOf()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.setChild(io.swagger.models.Model)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.setInterfaces(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ComposedModel.setParent(io.swagger.models.Model)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Model</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.ModelImpl</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.ModelImpl.ModelImpl()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.RefModel</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.subList(int, int)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.ObjectMapperFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.ObjectMapperFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.annotation.JsonInclude$Include</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.annotation.JsonInclude$Include.NON_NULL</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationFeature</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.Module</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.ObjectMapper(com.fasterxml.jackson.core.JsonFactory)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.DeserializationFeature, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.configure(com.fasterxml.jackson.databind.SerializationFeature, boolean)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature.FAIL_ON_EMPTY_BEANS</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.createJson()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.createJson(boolean, boolean)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createJson()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.createYaml()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ObjectMapperFactory.createYaml(boolean, boolean)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonFactory</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.dataformat.yaml.YAMLFactory.YAMLFactory()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.create(com.fasterxml.jackson.core.JsonFactory, boolean, boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.ParameterDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.ParameterDeserializer.ParameterDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.BodyParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.CookieParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.FormParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.HeaderParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.Parameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.PathParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.QueryParameter</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.parameters.RefParameter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PathDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PathDeserializer.PathDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Path</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.RefPath</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.pathMapper()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$10</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$11</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$12</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$13</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$14</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$15</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$2</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$3</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$4</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$5</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$6</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$7</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$8</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$9</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.$VALUES</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.BASE_CLASSES</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.BOOLEAN</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.BYTE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.DATE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.DATE_TIME</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.DECIMAL</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.DOUBLE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.EXTERNAL_CLASSES</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.FLOAT</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.INT</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.INTEGER</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.KEY_CLASSES</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.LONG</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.NAMES</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.OBJECT</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.commonName</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.keyClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.PrimitiveType$1(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.STRING</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.URI</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.URL</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.UUID</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.addKeys(java.util.Map, io.swagger.util.PrimitiveType, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.commonName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.createProperty(java.lang.String)</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.fromName(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.NAMES</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JavaType</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JavaType.getRawClass()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory.constructType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.BASE_CLASSES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.EXTERNAL_CLASSES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.KEY_CLASSES</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.entrySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.getCommonName()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.commonName</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.getKeyClass()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.keyClass</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.keyClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getKeyClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.static {}</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.PrimitiveType$1(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$DateStub</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.BASE_CLASSES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.BOOLEAN</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.BYTE</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.DATE</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.DATE_TIME</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.DECIMAL</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.DOUBLE</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.EXTERNAL_CLASSES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.FLOAT</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.INT</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.INTEGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.KEY_CLASSES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.LONG</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.NAMES</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.OBJECT</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.STRING</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.URI</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.URL</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.UUID</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.addKeys(java.util.Map, io.swagger.util.PrimitiveType, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.values()</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Character</outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.CASE_INSENSITIVE_ORDER</outbound>
                <outbound type="class" confirmed="no">java.math.BigDecimal</outbound>
                <outbound type="class" confirmed="no">java.math.BigInteger</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.Calendar</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeMap.TreeMap(java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.UUID</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType.values()</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.$VALUES</outbound>
                <outbound type="class" confirmed="no">io.swagger.util.PrimitiveType[]</outbound>
                <outbound type="feature" confirmed="no">io.swagger.util.PrimitiveType[].clone()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$1</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$1.PrimitiveType$1(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$1.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.BooleanProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.BooleanProperty.BooleanProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$10</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$10.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.DoubleProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.DoubleProperty.DoubleProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$11</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$11.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.BaseIntegerProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.BaseIntegerProperty.BaseIntegerProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$12</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$12.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.DecimalProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.DecimalProperty.DecimalProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$13</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$13.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.DateProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.DateProperty.DateProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$14</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$14.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.DateTimeProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.DateTimeProperty.DateTimeProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$15</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$15.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.ObjectProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ObjectProperty.ObjectProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$2</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$2.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.StringProperty()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$3</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$3.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty$Format</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty$Format.BYTE</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.StringProperty(io.swagger.models.properties.StringProperty$Format)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$4</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$4.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty$Format</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty$Format.URI</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.StringProperty(io.swagger.models.properties.StringProperty$Format)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$5</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$5.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.StringProperty$Format</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty$Format.URL</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.StringProperty.StringProperty(io.swagger.models.properties.StringProperty$Format)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$6</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$6.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.UUIDProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.UUIDProperty.UUIDProperty()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$7</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$7.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.IntegerProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.IntegerProperty.IntegerProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$8</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$8.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.LongProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.LongProperty.LongProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$9</name>
            <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$1</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$9.createProperty()</name>
                <outbound type="class" confirmed="no">io.swagger.models.properties.FloatProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.FloatProperty.FloatProperty()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PrimitiveType$DateStub</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PrimitiveType$DateStub.PrimitiveType$DateStub()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>io.swagger.util.PrimitiveType[]</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.values()</inbound>
            <feature confirmed="no">
                <name>io.swagger.util.PrimitiveType[].clone()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.PropertyDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.LOGGER</name>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.PropertyDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.LOGGER</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.LoggerFactory.getLogger(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setXml(io.swagger.models.Xml)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.booleanValue()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.getPropertyName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.doubleValue()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.ArrayNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.node.ArrayNode.iterator()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.DoubleNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.FloatNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.IntNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.LongNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.NumericNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.TextNode</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.intValue()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.fieldNames()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asBoolean()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.node.ObjectNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.Xml()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.attribute(java.lang.Boolean)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.name(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.namespace(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.prefix(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.Xml.wrapped(java.lang.Boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.fields()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Xml</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.ArrayProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.ArrayProperty()</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.isType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.items(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ArrayProperty.setVendorExtensionMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.MapProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.MapProperty(io.swagger.models.properties.Property)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.MapProperty.setVendorExtensionMap(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ObjectProperty.ObjectProperty(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ObjectProperty.isType(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.ObjectProperty.setVendorExtensionMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.Property</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.Property.setDescription(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.DEFAULT</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.DESCRIMINATOR</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.DESCRIPTION</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.ENUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.EXAMPLE</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MAXIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.EXCLUSIVE_MINIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.FORMAT</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MAXIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_ITEMS</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_LENGTH</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MAX_PROPERTIES</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MINIMUM</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_ITEMS</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_LENGTH</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.MIN_PROPERTIES</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.PATTERN</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.READ_ONLY</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.TITLE</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.TYPE</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.UNIQUE_ITEMS</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder$PropertyId.VENDOR_EXTENSIONS</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.PropertyBuilder.build(java.lang.String, java.lang.String, java.util.Map)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.properties.RefProperty</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.RefProperty.RefProperty(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">io.swagger.models.properties.RefProperty.description(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</outbound>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.EnumMap.EnumMap(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.slf4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.slf4j.Logger.warn(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.ResponseDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.ResponseDeserializer.ResponseDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.RefResponse</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.Response</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.responseMapper()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.SecurityDefinitionDeserializer</name>
            <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.SecurityDefinitionDeserializer.SecurityDefinitionDeserializer()</name>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonDeserializer.JsonDeserializer()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonParser</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.JsonParser.getCodec()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.JsonProcessingException</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.ObjectCodec</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.TreeNode</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.DeserializationContext</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.JsonNode</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.asText()</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.convertValue(java.lang.Object, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.auth.ApiKeyAuthDefinition</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.auth.BasicAuthDefinition</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.auth.OAuth2Definition</outbound>
                <outbound type="class" confirmed="no">io.swagger.models.auth.SecuritySchemeDefinition</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Json.mapper()</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>io.swagger.util.Yaml</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>io.swagger.util.Yaml.Yaml()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Yaml.mapper</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Yaml.mapper()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.createYaml()</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Yaml.pretty()</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.core.PrettyPrinter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.core.util.DefaultPrettyPrinter.DefaultPrettyPrinter()</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectMapper.writer(com.fasterxml.jackson.core.PrettyPrinter)</outbound>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Yaml.mapper()</outbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>io.swagger.util.Yaml.prettyPrint(java.lang.Object)</name>
                <outbound type="class" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter</outbound>
                <outbound type="feature" confirmed="no">com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">io.swagger.util.Yaml.pretty()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.FALSE</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.TRUE</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.booleanValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(boolean)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getBoolean(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Byte.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Character.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Character.isUpperCase(char)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.DeserializationModule.DeserializationModule(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.PrimitiveType$1(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getKeyClass()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.keyClass</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.forName(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getCanonicalName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getEnumConstants()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getInterfaces()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isPrimitive()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.toString()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassNotFoundException.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Deprecated</name>
            <inbound type="class" confirmed="yes">io.swagger.model.ApiDescription</inbound>
            <inbound type="class" confirmed="yes">io.swagger.model.ApiInfo</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.getMaximum()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.getMinimum()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.maximum</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.minimum</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.lang.Double.Double(double)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.Double(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.parseDouble(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDouble(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.ordinal()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.toString()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum[]</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Float.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.Integer(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.compareTo(java.lang.Integer)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(io.swagger.models.properties.Property, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getInteger(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Iterable</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>java.lang.Iterable.iterator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">io.swagger.config.ConfigFactory</inbound>
            <inbound type="class" confirmed="yes">io.swagger.config.FilterFactory</inbound>
            <inbound type="class" confirmed="yes">io.swagger.config.Scanner</inbound>
            <inbound type="class" confirmed="yes">io.swagger.config.SwaggerConfig</inbound>
            <inbound type="class" confirmed="yes">io.swagger.converter.ModelConverter</inbound>
            <inbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContext</inbound>
            <inbound type="class" confirmed="yes">io.swagger.converter.ModelConverterContextImpl</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="class" confirmed="yes">io.swagger.converter.ModelConverters</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="class" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter</inbound>
            <inbound type="class" confirmed="yes">io.swagger.core.filter.SpecFilter</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isAttributeAllowed(io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.PackageVersion</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.jackson.TypeNameResolver</inbound>
            <inbound type="class" confirmed="yes">io.swagger.model.ApiDescription</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableEnumValues</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableRangeValues</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveRange(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableValues</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.AllowableValuesUtils</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.Json</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.ObjectMapperFactory</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.PrimitiveType$DateStub</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.addKeys(java.util.Map, io.swagger.util.PrimitiveType, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.values()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="class" confirmed="yes">io.swagger.util.Yaml</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">io.swagger.config.ConfigFactory.ConfigFactory()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.config.FilterFactory.FilterFactory()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.AbstractSpecFilter()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.SpecFilter()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2.AbstractModelConverter$2()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.JAXBAnnotationsHelper()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.PackageVersion()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.TypeNameResolver()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.AllowableEnumValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.AllowableRangeValues(java.lang.Double, boolean, java.lang.Double, boolean)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.AllowableValuesUtils()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.Json()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ObjectMapperFactory.ObjectMapperFactory()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$DateStub.PrimitiveType$DateStub()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.Yaml()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <feature confirmed="no">
                <name>java.lang.Short.TYPE</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">io.swagger.config.SwaggerConfig.getFilterClass()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter$1.AbstractModelConverter$1(io.swagger.jackson.AbstractModelConverter, java.lang.String, com.fasterxml.jackson.core.Version)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._description(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._subTypeName(com.fasterxml.jackson.databind.jsontype.NamedType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeQName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.JAXB_DEFAULT</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.PackageVersion.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.ApiDescription(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.getPath()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.method</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.path</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setMethod(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiDescription.setPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.model.ApiInfo.ApiInfo(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.CLOSE_EXCLUSIVE_RANGE_KEY</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.NEGATIVE_INFINITY_KEY</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.OPEN_EXCLUSIVE_RANGE_KEY</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.POSITIVE_INFINITY_KEY</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveRange(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.pretty(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PathDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$1.PrimitiveType$1(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$10.PrimitiveType$10(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$11.PrimitiveType$11(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$12.PrimitiveType$12(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$13.PrimitiveType$13(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$14.PrimitiveType$14(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$15.PrimitiveType$15(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$2.PrimitiveType$2(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$3.PrimitiveType$3(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$4.PrimitiveType$4(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$5.PrimitiveType$5(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$6.PrimitiveType$6(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$7.PrimitiveType$7(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$8.PrimitiveType$8(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType$9.PrimitiveType$9(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, io.swagger.util.PrimitiveType$1)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.PrimitiveType(java.lang.String, int, java.lang.Class, java.lang.String, io.swagger.util.PrimitiveType$1)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.commonName</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getDetailNode(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getString(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getXml(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ResponseDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.CASE_INSENSITIVE_ORDER</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._isOptionalType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.isExclusiveRange(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ParameterDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.SecurityDefinitionDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equalsIgnoreCase(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.findRangeValue(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.format(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.isEmpty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toLowerCase()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver._addEnumProps(java.lang.Class, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.Json.prettyPrint(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.Yaml.prettyPrint(java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.annotation</name>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findExampleValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findReadOnly(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyDescription(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findPropertyIndex(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation.annotationType()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation[]</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.Member</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Member.getName()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Type</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.getInnerType(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.findStdName(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.createProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.getCommonName(java.lang.reflect.Type)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.math</name>
        <class confirmed="no">
            <name>java.math.BigDecimal</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.math.BigInteger</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.URI</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Calendar</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.emptyList()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List, java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Comparator</name>
            <inbound type="class" confirmed="yes">io.swagger.jackson.AbstractModelConverter$2</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.getPropertyComparator()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Date</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.EnumMap</name>
            <feature confirmed="no">
                <name>java.util.EnumMap.EnumMap(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByType</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContext.getConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolve(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.resolveProperty(java.lang.reflect.Type, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.remove()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedHashMap</name>
            <feature confirmed="no">
                <name>java.util.LinkedHashMap.LinkedHashMap()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.converters</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.converters</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAsProperty(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.AllowableEnumValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.getItems()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.items</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addConverter(io.swagger.converter.ModelConverter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(io.swagger.converter.ModelConverter)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.create(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getEnum(com.fasterxml.jackson.databind.JsonNode, io.swagger.models.properties.PropertyBuilder$PropertyId)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getConverters()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.removeConverter(io.swagger.converter.ModelConverter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.subList(int, int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.ModelDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.getDefinedModels()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.modelByName</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.AbstractSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterOperation(io.swagger.core.filter.SwaggerSpecFilter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isOperationAllowed(io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isParamAllowed(io.swagger.models.parameters.Parameter, io.swagger.models.Operation, io.swagger.model.ApiDescription, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SwaggerSpecFilter.isPropertyAllowed(io.swagger.models.Model, io.swagger.models.properties.Property, java.lang.String, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._resolvedTypeNames</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValues.asPropertyArguments()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.BASE_CLASSES</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.EXTERNAL_CLASSES</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.KEY_CLASSES</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.NAMES</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.addKeys(java.util.Map, io.swagger.util.PrimitiveType, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.util.Map.clear()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.entrySet()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._typeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableEnumValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.asPropertyArguments()</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.addKeys(java.util.Map, io.swagger.util.PrimitiveType, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.getVendorExtensions(com.fasterxml.jackson.databind.JsonNode)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getKey()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.ServiceLoader</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.ServiceLoader.iterator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ServiceLoader.load(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">io.swagger.config.Scanner.classes()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.processedTypes</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedClasses</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.skippedPackages</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findTypeName(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._isSetType(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addPackageToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.isEmpty()</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.read(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.shouldProcess(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filterDefinitions(io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map, java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveSubtypes(io.swagger.models.ModelImpl, com.fasterxml.jackson.databind.BeanDescription, io.swagger.converter.ModelConverterContext)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.fromType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.removeAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">io.swagger.core.filter.SpecFilter.filter(io.swagger.models.Swagger, io.swagger.core.filter.SwaggerSpecFilter, java.util.Map, java.util.Map, java.util.Map)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TreeMap</name>
            <feature confirmed="no">
                <name>java.util.TreeMap.TreeMap()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.ModelConverterContextImpl(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TreeMap.TreeMap(java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.UUID</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.PrimitiveType.static {}</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.ConcurrentHashMap</name>
            <feature confirmed="no">
                <name>java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter.AbstractModelConverter(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.concurrent.CopyOnWriteArrayList</name>
            <feature confirmed="no">
                <name>java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.ModelConverters()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.find()</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.group(int)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.RANGE_PATTERN</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableRangeValues.create(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.validation.constraints</name>
        <class confirmed="no">
            <name>javax.validation.constraints.DecimalMax</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.validation.constraints.DecimalMax.inclusive()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.validation.constraints.DecimalMax.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.validation.constraints.DecimalMin</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.validation.constraints.DecimalMin.inclusive()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.validation.constraints.DecimalMin.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.validation.constraints.Max</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.validation.constraints.Max.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.validation.constraints.Min</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.validation.constraints.Min.value()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.validation.constraints.Size</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.validation.constraints.Size.max()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.validation.constraints.Size.min()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.applyBeanValidatorAnnotations(io.swagger.models.properties.Property, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind.annotation</name>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlAttribute</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlAttribute.name()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlAttribute.namespace()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyAttribute(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElement</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlElement.defaultValue()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.AbstractModelConverter._findDefaultValue(com.fasterxml.jackson.databind.introspect.Annotated)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlElement.name()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlElement.namespace()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlElement.required()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.SwaggerAnnotationIntrospector.hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlElementWrapper</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.apply(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlElementWrapper.name()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.applyElement(com.fasterxml.jackson.databind.introspect.AnnotatedMember, io.swagger.models.properties.Property)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlRootElement</name>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlRootElement.name()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.annotation.XmlRootElement.namespace()</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.commons.lang3</name>
        <class confirmed="no">
            <name>org.apache.commons.lang3.StringUtils</name>
            <feature confirmed="no">
                <name>org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.isEmpty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.AllowableValuesUtils.create(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.commons.lang3.StringUtils.trimToNull(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.JAXBAnnotationsHelper.setName(java.lang.String, java.lang.String, io.swagger.models.properties.Property)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForClass(java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.commons.lang3.text</name>
        <class confirmed="no">
            <name>org.apache.commons.lang3.text.WordUtils</name>
            <feature confirmed="no">
                <name>org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.TypeNameResolver.nameForGenericType(com.fasterxml.jackson.databind.JavaType)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.slf4j</name>
        <class confirmed="no">
            <name>org.slf4j.Logger</name>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</inbound>
            <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            <feature confirmed="no">
                <name>org.slf4j.Logger.debug(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.readAll(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolve(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.resolveProperty(com.fasterxml.jackson.databind.JavaType, io.swagger.converter.ModelConverterContext, java.lang.annotation.Annotation[], java.util.Iterator)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.shouldIgnoreClass(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.slf4j.Logger.error(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.slf4j.Logger.isDebugEnabled()</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.defineModel(java.lang.String, io.swagger.models.Model, java.lang.reflect.Type, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolve(java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.resolveProperty(java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.slf4j.Logger.warn(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.addClassToSkip(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.propertyFromNode(com.fasterxml.jackson.databind.JsonNode)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.slf4j.LoggerFactory</name>
            <feature confirmed="no">
                <name>org.slf4j.LoggerFactory.getLogger(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverterContextImpl.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.converter.ModelConverters.static {}</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.jackson.ModelResolver.ModelResolver(com.fasterxml.jackson.databind.ObjectMapper)</inbound>
                <inbound type="feature" confirmed="yes">io.swagger.util.PropertyDeserializer.PropertyDeserializer()</inbound>
            </feature>
        </class>
    </package>
</dependencies>
