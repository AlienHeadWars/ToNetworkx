<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>com.google.common.base</name>
        <class confirmed="no">
            <name>com.google.common.base.Function</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.FACTORY_TO_ACCEPTOR_TRANSFORMATION</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.static {}</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>com.google.common.base.Optional</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.effectiveMediaType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodAnnotations</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>com.google.common.base.Optional.fromNullable(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.base.Optional.of(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.base.Optional.orNull()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.base.Preconditions</name>
            <feature confirmed="no">
                <name>com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.base.Preconditions.checkNotNull(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.base.Predicate</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.concreteValueFactoryClassFilter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.google.common.collect</name>
        <class confirmed="no">
            <name>com.google.common.collect.Iterators</name>
            <feature confirmed="no">
                <name>com.google.common.collect.Iterators.emptyIterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.collect.Lists</name>
            <feature confirmed="no">
                <name>com.google.common.collect.Lists.newLinkedList()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Lists.transform(java.util.List, com.google.common.base.Function)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.collect.Maps</name>
            <feature confirmed="no">
                <name>com.google.common.collect.Maps.newHashMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Maps.newHashMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.collect.Sets</name>
            <feature confirmed="no">
                <name>com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Sets.newHashSet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Sets.newHashSet(java.lang.Iterable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.collect.Sets.newHashSet(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.collect.UnmodifiableIterator</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>com.google.common.util.concurrent</name>
        <class confirmed="no">
            <name>com.google.common.util.concurrent.ListenableFuture</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
        </class>
        <class confirmed="no">
            <name>com.google.common.util.concurrent.Monitor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersMonitor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.Monitor.Monitor()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.Monitor.enter()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.Monitor.enterIf(com.google.common.util.concurrent.Monitor$Guard)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.Monitor.leave()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.util.concurrent.Monitor$Guard</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersConfigChanged</inbound>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.Monitor$Guard.Monitor$Guard(com.google.common.util.concurrent.Monitor)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.google.common.util.concurrent.SettableFuture</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.val$responseFuture</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.SettableFuture.create()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>com.google.common.util.concurrent.SettableFuture.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.sun.hk2.component</name>
        <class confirmed="no">
            <name>com.sun.hk2.component.InjectionResolver</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="no">
                <name>com.sun.hk2.component.InjectionResolver.InjectionResolver(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>com.sun.ws.rs.ext</name>
        <class confirmed="yes">
            <name>com.sun.ws.rs.ext.RuntimeDelegateImpl</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.AbstractRuntimeDelegate</outbound>
            <feature confirmed="yes">
                <name>com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.HK2</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.HK2.create(org.glassfish.hk2.Services, org.glassfish.hk2.Module[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.HK2.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.AbstractRuntimeDelegate.AbstractRuntimeDelegate(org.glassfish.hk2.Services)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MessagingModules$HeaderDelegateProviders.MessagingModules$HeaderDelegateProviders()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.UnsupportedOperationException</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.current</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.val$f</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.access$100(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.current</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.val$f</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.access$000(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.files</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.isDirectory()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.listFiles()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileInputStream</name>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.io.File)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileInputStream.FileInputStream(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileNotFoundException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.FilterInputStream</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1</inbound>
            <feature confirmed="no">
                <name>java.io.FilterInputStream.FilterInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.IOException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter.finish()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter.writeStatusAndHeaders(long, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.close()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.InputStream</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceFinder.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.inputStream</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.io.InputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.OutputStream</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter.writeStatusAndHeaders(long, javax.ws.rs.core.Response)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.Reader</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.io.StringReader</name>
            <feature confirmed="no">
                <name>java.io.StringReader.StringReader(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.Boolean</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Boolean.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.booleanValue()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.parseBoolean(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Boolean.valueOf(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Byte</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Byte.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Byte.valueOf(byte)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.val$transformationClass</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getParameterType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.parameterType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$100(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplicationClass()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver.CookieParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver.FormParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver.HeaderParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.val$type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver.MatrixParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.val$valueFactoryProviderClass</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver.PathParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver.QueryParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.val$type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.c</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.val$_c</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.clazz</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isAnnotationPresent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceClass</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.returnType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.returnType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <feature confirmed="no">
                <name>java.lang.Class.cast(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredFields()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getDeclaredMethods()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getGenericSuperclass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getInterfaces()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAnnotationPresent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isAssignableFrom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isPrimitive()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassLoader</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.setClassLoader(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setClassLoader(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.classLoader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$300(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classloader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.classloader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.getResources(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.ClassLoader.loadClass(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.ClassNotFoundException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Double</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Double.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Double.valueOf(double)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.valueOf(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.Parameter$Source(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.valueOf(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Float</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Float.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Float.valueOf(float)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalAccessException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalArgumentException</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IllegalStateException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>java.lang.IllegalStateException.IllegalStateException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.IndexOutOfBoundsException</name>
            <feature confirmed="no">
                <name>java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end(int)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group(int)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.start(int)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Integer.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.toString(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Integer.valueOf(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Iterable</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Long</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Long.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Long.valueOf(long)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NullPointerException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$2</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$3</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$4</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$5</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addSingletons(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerProperties</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultDefaultValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchedResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchedResource(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.get()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.Object)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchedResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.values()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelContext</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.source</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelListener</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.PropertiesProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.Application$References()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.ContainerFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.ResourceConfig$Module$JaxrsApplicationFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.ServerProperties()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.LocalizationMessages()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.AbstractHttpContextValueFactory$1(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.MultivaluedParameterExtractorFactory(org.glassfish.jersey.server.internal.inject.StringReaderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.PrimitiveMapper()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.StringReaderProviders$DateProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.StringReaderProviders$StringConstructor()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.StringReaderProviders$TypeFromString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.StringReaderProviders$TypeValueOf()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders.StringReaderProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.RedirectingAcceptor$1(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.RouterModule$1()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.RouterModule$UriRoutingContextFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.SingleMatchResult(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.UriRoutingContext$1(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.UriRoutingContext$2(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeResourceFinderFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeResourceFinderFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeResourceFinderFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.PackageNamesScanner$ResourcesProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsSchemeResourceFinderFactory()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.AbstractJavaResourceMethodDispatcherProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.IntrospectionModeller$1()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.IntrospectionModeller$2()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.IntrospectionModeller$3()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.IntrospectionModeller$4()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.IntrospectionModeller$5()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.IntrospectionModeller$6()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.IntrospectionModeller$7()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.IntrospectionModeller()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.MultipleMethodAcceptor$1(org.glassfish.jersey.server.model.MultipleMethodAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.ResourceMethodInvocationHandlerFactory$1()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.ResourceMethodInvoker$Builder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.RuntimeModelProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.VoidVoidDispatcherProvider()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.MethodParameterHelper()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.getClass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Object.toString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Runnable</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$4</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$5</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>java.lang.Runnable.run()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.RuntimeException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.RuntimeException.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.SecurityException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.SecurityManager</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            <feature confirmed="no">
                <name>java.lang.SecurityManager.checkPermission(java.security.Permission)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Short</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <feature confirmed="no">
                <name>java.lang.Short.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Short.valueOf(short)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder.subPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder.bind(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.subPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$400(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.bind(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.defaultStringValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getDefaultStringValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getParameterName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.name</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.files(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.packages(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.COMMON_DELIMITERS</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.JAXRS_APPLICATION_CLASS</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.PROVIDER_CLASSNAMES</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.PROVIDER_CLASSPATH</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerProperties.PROVIDER_PACKAGES</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getDefaultValueString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.isDefaultValueRegistered()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.parameterName</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.CollectionExtractor$ListValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.CollectionExtractor$SetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.CollectionExtractor$SortedSetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.CookieParamValueFactoryProvider$CookieTypeParamValueFactory(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.name</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.name</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.name</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultStringValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getDefaultValueString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getDefaultValueString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.SingleValueExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.StringCollectionExtractor$ListString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.StringCollectionExtractor$SetString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.StringCollectionExtractor$SortedSetString(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getDefaultValueString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.child(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getFinalMatchingGroup()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.SingleMatchResult(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group(int)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.s</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMappedThrowable()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.className</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitOuterClass(java.lang.String, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitSource(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.parent</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.packages</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor.accept(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor.process(java.lang.String, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.httpMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(javax.ws.rs.FormParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.Parameter$Source(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.valueOf(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.defaultValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDefaultValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.hasDefaultValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.sourceName</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.value</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.getMessage()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.message</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.endsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equalsIgnoreCase(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.indexOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.lastIndexOf(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.length()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(char, char)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replaceAll(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.startsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.substring(int, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toCharArray()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toLowerCase()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.toUpperCase()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.trim()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(char)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(char)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.charAt(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.deleteCharAt(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.length()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String[]</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.getSecurityManager()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMappedThrowable()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.lang.Throwable.getMessage()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.UnsupportedOperationException</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.subPath(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.reset()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.child(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMappedThrowable()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Void</name>
            <feature confirmed="no">
                <name>java.lang.Void.TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.annotation</name>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.isOptional(java.lang.reflect.AnnotatedElement, java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotation</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotations</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isAnnotationPresent(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.annotations</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.annotations</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation.annotationType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Annotation[]</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</inbound>
            <feature confirmed="no">
                <name>java.lang.annotation.Annotation[].clone()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Documented</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.ElementType</name>
            <feature confirmed="no">
                <name>java.lang.annotation.ElementType.ANNOTATION_TYPE</name>
                <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Retention</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.RetentionPolicy</name>
            <feature confirmed="no">
                <name>java.lang.annotation.RetentionPolicy.RUNTIME</name>
                <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.annotation.Target</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang.reflect</name>
        <class confirmed="no">
            <name>java.lang.reflect.AnnotatedElement</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.isOptional(java.lang.reflect.AnnotatedElement, java.lang.annotation.Annotation)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.AnnotatedElement.getDeclaredAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Constructor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$constructor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ctor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getCtor()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getGenericParameterTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Constructor.newInstance(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Field</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getDeclaredAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getDeclaringClass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getGenericType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.getType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Field.toGenericString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.GenericArrayType</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.GenericArrayType.getGenericComponentType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationHandler</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.methodHandler</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.DEFAULT_HANDLER</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.InvocationTargetException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.InvocationTargetException.getTargetException()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Method</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.valueOf</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$fromStringMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$valueOf</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.method</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.method</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.method</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getMethod()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.method</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getDeclaredAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getDeclaringClass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getGenericReturnType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.getReturnType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.toGenericString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.Method.toString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.toString()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.ParameterizedType</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getOwnerType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getRawType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$pt</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getActualTypeArguments()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getOwnerType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getOwnerType()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.reflect.ParameterizedType.getRawType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getRawType()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.ReflectPermission</name>
            <feature confirmed="no">
                <name>java.lang.reflect.ReflectPermission.ReflectPermission(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Type</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.t</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getOwnerType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getRawType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$ptts</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.type</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.genericReturnType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getGenericReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.genericReturnType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getGenericReturnType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.TypeVariable</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.Type[]</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</inbound>
            <feature confirmed="no">
                <name>java.lang.reflect.Type[].clone()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.reflect.UndeclaredThrowableException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.net</name>
        <class confirmed="no">
            <name>java.net.MalformedURLException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URI</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.uri</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>java.net.URI.create(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getPath()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawQuery()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getRawSchemeSpecificPart()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.getScheme()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toString()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URI.toURL()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.net.URISyntaxException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
        </class>
        <class confirmed="no">
            <name>java.net.URL</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            <feature confirmed="no">
                <name>java.net.URL.URL(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getAuthority()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getPath()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getProtocol()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getQuery()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.getRef()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.openStream()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.net.URL.toURI()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.security</name>
        <class confirmed="no">
            <name>java.security.AccessController</name>
            <feature confirmed="no">
                <name>java.security.AccessController.doPrivileged(java.security.PrivilegedAction)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.security.Permission</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
        </class>
        <class confirmed="no">
            <name>java.security.PrivilegedAction</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.text</name>
        <class confirmed="no">
            <name>java.text.ParseException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Arrays</name>
            <feature confirmed="no">
                <name>java.util.Arrays.asList(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <feature confirmed="no">
                <name>java.util.Collection.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collection.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.emptyList()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.emptySet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.frequency(java.util.Collection, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.singleton(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.getSchemes()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List, java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableList(java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResources()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedTemplates()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.unmodifiableSet(java.util.Set)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Comparator</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <feature confirmed="no">
                <name>java.util.Comparator.compare(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Date</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Deque</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.stack</inbound>
            <feature confirmed="no">
                <name>java.util.Deque.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Deque.pop()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Deque.push(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <feature confirmed="no">
                <name>java.util.Enumeration.hasMoreElements()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Enumeration.nextElement()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.HashSet</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashSet.HashSet(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedHashSet</name>
            <feature confirmed="no">
                <name>java.util.LinkedHashSet.LinkedHashSet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.LinkedList</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResources()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResults()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedTemplates()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.paths</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchedResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</inbound>
            <feature confirmed="no">
                <name>java.util.LinkedList.LinkedList()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.addFirst(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.getLast()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.iterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.peek()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchedResource()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.LinkedList.push(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodConsumes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodProduces</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$000(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$100(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.currentAcceptors</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.acceptedRoutes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.acceptedRoutes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getMatchedResults()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResources()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResults()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedTemplates()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.valueProviders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.consumeMimeList</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedInputTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedOutputTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.produceMimeList</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.val$ml</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.StarTypeList</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.intersectingMediaTypes(java.util.List, java.util.List, java.util.List, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.getSupportedInputTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.getSupportedOutputTypes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameterized.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.constructors</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getConstructors()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceMethods</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceLocators</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceMethods</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.parameters</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.parameters</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.issues</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.cleanIssueList()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.getIssueList()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.issueList</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getComponents()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.parameters</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.valueProviders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.parameters</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.clear()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.cleanIssueList()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.get(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.indexOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.lastIndexOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.removeAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.set(int, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.subList(int, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.toArray(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addProperties(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addProperties(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$400(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getProperties()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.jaxbContexts</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToClassMap</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToDefaultValueMap</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.finderFactories</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.ANOT_HELPER_MAP</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.method2InflectorMap</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.locator2Acceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.method2Inflector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.PropertiesProvider.getProperties()</inbound>
            <feature confirmed="no">
                <name>java.util.Map.clear()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.isEmpty()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.putAll(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addProperties(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map$Entry</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getKey()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map$Entry.getValue()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.NoSuchElementException</name>
            <feature confirmed="no">
                <name>java.util.NoSuchElementException.NoSuchElementException()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$500(org.glassfish.jersey.server.ApplicationBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addClasses(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addModules(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addSingletons(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$200(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$300(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$500(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$600(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedClasses</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedSingletons</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getCustomModules()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.readerProviders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$100(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$200(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.annotations</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotatedClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.ParamAnnotationSET</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.providers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.providers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelContext.getAbstractRootResources()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>java.util.Set.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.clear()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.size()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.toArray()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.SortedSet</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.getInstance()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>java.util.Stack</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.files</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.files</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            <feature confirmed="no">
                <name>java.util.Stack.Stack()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Stack.empty()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Stack.pop()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.TreeSet</name>
            <feature confirmed="no">
                <name>java.util.TreeSet.TreeSet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.getInstance()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TreeSet.TreeSet(java.util.Comparator)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TreeSet.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.TreeSet.iterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.WeakHashMap</name>
            <feature confirmed="no">
                <name>java.util.WeakHashMap.WeakHashMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.concurrent</name>
        <class confirmed="no">
            <name>java.util.concurrent.Future</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.jar</name>
        <class confirmed="no">
            <name>java.util.jar.JarEntry</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
            <feature confirmed="no">
                <name>java.util.jar.JarEntry.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarEntry.isDirectory()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.jar.JarInputStream</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.jarInputStream</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</inbound>
            <feature confirmed="no">
                <name>java.util.jar.JarInputStream.JarInputStream(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarInputStream.close()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.jar.JarInputStream.getNextJarEntry()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.logging</name>
        <class confirmed="no">
            <name>java.util.logging.Level</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Level.CONFIG</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.FINE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.FINEST</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Level.SEVERE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.logging.Logger</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.LOGGER</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            <feature confirmed="no">
                <name>java.util.logging.Logger.finest(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.getLogger(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.isLoggable(java.util.logging.Level)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.severe(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.logging.Logger.warning(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.MatchResult</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.end(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.group()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.group(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.groupCount()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.MatchResult.start(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.matches()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.toMatchResult()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.quote(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.annotation</name>
        <class confirmed="no">
            <name>javax.annotation.Nonnull</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.annotation.Nullable</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getEffectiveAcceptableType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.naming</name>
        <class confirmed="no">
            <name>javax.naming.OperationNotSupportedException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.setAreInputTypesDeclared(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.setAreOutputTypesDeclared(boolean)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs</name>
        <class confirmed="no">
            <name>javax.ws.rs.Consumes</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Consumes.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.CookieParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver.CookieParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.CookieParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.DefaultValue</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.DefaultValue.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Encoded</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.FormParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver.FormParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(javax.ws.rs.FormParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.FormParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(javax.ws.rs.FormParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.HeaderParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver.HeaderParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.HeaderParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.HttpMethod</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.HttpMethod.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.MatrixParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver.MatrixParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.MatrixParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Path</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Path.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.PathParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver.PathParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.PathParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.Produces</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.Produces.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.QueryParam</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver.QueryParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.QueryParam.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.WebApplicationException</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs.core</name>
        <class confirmed="no">
            <name>javax.ws.rs.core.Application</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.createEndpoint(javax.ws.rs.core.Application, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$000(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.from(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplication()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.Application()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.getClasses()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Application.getSingletons()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Context</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Cookie</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Form</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Form.asMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.GenericEntity</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.HttpHeaders</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.MediaType</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getEffectiveAcceptableType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$effectiveResponseType</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$000(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$100(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.APPLICATION_FORM_URLENCODED_TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.MediaType(java.lang.String, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isWildcardSubtype()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.isWildcardType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MediaType.valueOf(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.MultivaluedHashMap</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.decodedTemplateValues</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.encodedTemplateValues</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedHashMap.MultivaluedHashMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedHashMap.addFirst(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedHashMap.entrySet()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedHashMap.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.MultivaluedMap</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters(boolean)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.PathSegment</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.PathSegment.getMatrixParameters()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Request</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$request</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Request.getHeaders()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Request.getMethod()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Request.getUri()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Request.getUriBuilder()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Request.readEntity(javax.ws.rs.core.TypeLiteral)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.RequestHeaders</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.RequestHeaders.asMap()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.RequestHeaders.getAcceptableMediaTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.RequestHeaders.getMediaType()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter.writeStatusAndHeaders(long, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$100(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.fromResponse(javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getEntity()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getHeaders()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getMetadata()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.getStatus()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.hasEntity()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.noContent()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.ok()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.status(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.status(javax.ws.rs.core.Response$Status)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.status(javax.ws.rs.core.Response$StatusType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response$ResponseBuilder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.build()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.status(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$ResponseBuilder.type(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response$Status</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.BAD_REQUEST</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.INTERNAL_SERVER_ERROR</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.METHOD_NOT_ALLOWED</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.NOT_ACCEPTABLE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.NOT_FOUND</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$Status.UNSUPPORTED_MEDIA_TYPE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.Response$StatusType</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.Response$StatusType.getStatusCode()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.ResponseHeaders</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.TypeLiteral</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.TypeLiteral.of(java.lang.Class, java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.UriBuilder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.path(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriBuilder.scheme(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.core.UriInfo</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.core.UriInfo.getRequestUriBuilder()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.ws.rs.ext</name>
        <class confirmed="no">
            <name>javax.ws.rs.ext.ContextResolver</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.context</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.unmarshaller</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.ContextResolver.getContext(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.MessageBodyWriter</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.MessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.Provider</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.ws.rs.ext.Providers</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <feature confirmed="no">
                <name>javax.ws.rs.ext.Providers.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind</name>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBContext</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.createUnmarshaller()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBContext.newInstance(java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBElement</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.JAXBElement.getValue()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.JAXBException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.UnmarshalException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.Unmarshaller</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.bind.annotation</name>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlRootElement</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
        </class>
        <class confirmed="no">
            <name>javax.xml.bind.annotation.XmlType</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.parsers</name>
        <class confirmed="no">
            <name>javax.xml.parsers.SAXParser</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.xml.parsers.SAXParser.getXMLReader()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.xml.parsers.SAXParserFactory</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>javax.xml.parsers.SAXParserFactory.newSAXParser()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.transform</name>
        <class confirmed="no">
            <name>javax.xml.transform.Source</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.xml.transform.sax</name>
        <class confirmed="no">
            <name>javax.xml.transform.sax.SAXSource</name>
            <feature confirmed="no">
                <name>javax.xml.transform.sax.SAXSource.SAXSource(org.xml.sax.XMLReader, org.xml.sax.InputSource)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.hk2</name>
        <class confirmed="no">
            <name>org.glassfish.hk2.Binder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Binder.annotatedWith(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Binder.to(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Binder.toFactory(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Binder.toFactory(org.glassfish.hk2.Factory)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Binder.toInstance(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.BinderFactory</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.Bindings</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.ComponentException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.get()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.ContractLocator</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.ContractLocator.get()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.ContractLocator.getProvider()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.DynamicBinderFactory</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.DynamicBinderFactory.commit()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.Factory</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.mbwFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.rcFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory.ResourceConfig$Module$ResourceConfigFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory.ServerModule$HttpHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory.ServerModule$RequestHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestReferencingFactory.ServerModule$RequestReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory.ServerModule$ResponseHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory.ServerModule$ResponseReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$000(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$100(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$200(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.request</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.response</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.uriInfo</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.access$000(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.spfProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.uriInfoProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.access$000(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.contextProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.uriInfoProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.routingCtxFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.routingCtx</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Factory.get()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.HK2</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.HK2.create(org.glassfish.hk2.Services, org.glassfish.hk2.Module[])</name>
                <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.HK2.get()</name>
                <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.Module</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.val$modules</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.module()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Module.configure(org.glassfish.hk2.BinderFactory)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.NamedBinder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.NamedBinder.to(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.NamedBinder.toFactory(org.glassfish.hk2.Factory)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.Provider</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.ResolvedBinder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.ResolvedBinder.in(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.ServiceLocator</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.ServiceLocator.get()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.Services</name>
            <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1200(org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServices()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$200(org.glassfish.jersey.server.ApplicationBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.getServices()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Services.bindDynamically()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Services.byType(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.Services.forContract(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.TypeLiteral</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$2</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$3</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$4</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$5</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$6</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$7</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$8</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.TypeLiteral.TypeLiteral()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.ResourceConfig$Module$1(org.glassfish.jersey.server.ResourceConfig$Module)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.ServerModule$1(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.ServerModule$2(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.ServerModule$3(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.ServerModule$4(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.ServerModule$5(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.ServerModule$6(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.ServerModule$7(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.ServerModule$8(org.glassfish.jersey.server.ServerModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.RouterModule$2(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.RouterModule$3(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.hk2.inject</name>
        <class confirmed="no">
            <name>org.glassfish.hk2.inject.Injector</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.injector</inbound>
            <feature confirmed="no">
                <name>org.glassfish.hk2.inject.Injector.inject(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.hk2.scopes</name>
        <class confirmed="no">
            <name>org.glassfish.hk2.scopes.PerLookup</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.hk2.scopes.Singleton</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.FeaturesAndProperties</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.internal</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.AbstractRuntimeDelegate</name>
            <inbound type="class" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.AbstractRuntimeDelegate.AbstractRuntimeDelegate(org.glassfish.hk2.Services)</name>
                <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ContextResolverFactory</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ContextResolverFactory.ContextResolverFactory(org.glassfish.jersey.internal.ServiceProviders)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ContextResolverFactory$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ContextResolverFactory$Module.ContextResolverFactory$Module(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ExceptionMapperFactory</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ExceptionMapperFactory.ExceptionMapperFactory(org.glassfish.jersey.internal.ServiceProviders)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ExceptionMapperFactory$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ExceptionMapperFactory$Module.ExceptionMapperFactory$Module(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ExtractorException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ExtractorException.getCause()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.JaxrsProviders$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.JaxrsProviders$Module.JaxrsProviders$Module()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.MappableException</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.MappableException.MappableException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ProcessingException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.Throwable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ServiceFinderModule</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceFinderModule.ServiceFinderModule(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ServiceProviders</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProviders.getCustom(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProviders.getDefault(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ServiceProviders$Builder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$700(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProvidersBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProviders$Builder.build()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderClasses(java.util.Set)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderInstances(java.util.Set)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.ServiceProvidersModule</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.ServiceProvidersModule.ServiceProvidersModule()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.internal.inject</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.inject.AbstractModule</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.ResourceConfig$Module()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.ServerModule()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.ParameterInjectionModule()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.RouterModule()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.ResourceModelModule()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.inject.ContextInjectionResolver</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.access$000(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.resolver</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.ContextInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.inject.ContextInjectionResolver$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.ContextInjectionResolver$Module.ContextInjectionResolver$Module()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.inject.Providers</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.Providers.asFactory(org.glassfish.hk2.Provider)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.Providers.factoryOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.inject.ReferencingFactory</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestReferencingFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory.ResourceConfig$Module$ResourceConfigFactory(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory.ServerModule$HttpHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory.ServerModule$RequestHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestReferencingFactory.ServerModule$RequestReferencingFactory(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory.ServerModule$ResponseHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory.ServerModule$ResponseReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.inject.ReferencingFactory.referenceFactory()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.internal.l10n</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.l10n.Localizable</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.LocalizableMessageFactory(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.l10n.Localizer</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.l10n.Localizer.Localizer()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.internal.util</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.AnnotatedMethod</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getGenericParameterTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getParameterAnnotations()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.getParameterTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.MethodList</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.MethodList(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.MethodList(java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasMetaAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasNotAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasNotMetaAnnotation(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasNumParams(int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.hasReturnType(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.isNotPublic()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.iterator()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.MethodList.nameStartsWith(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.ReflectionHelper</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.classForNameWithException(java.lang.String, java.lang.ClassLoader)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getArrayClass(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getContextClassLoader()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getFromStringStringMethod(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getStringConstructor(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getTypeArgumentAndClass(java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.getValueOfStringMethod(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.ReflectionHelper.resolveTypeVariable(java.lang.Class, java.lang.Class, java.lang.reflect.TypeVariable)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.internal.util.collection</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.collection.ClassTypePair</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.ClassTypePair.of(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.ClassTypePair.of(java.lang.Class, java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.collection.Pair</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.Pair.left()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.Pair.right()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.collection.Ref</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$1000(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$500(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$600(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$800(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$900(org.glassfish.jersey.server.Application$References)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.configuration</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.contextRespolvers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.exceptionMappers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.messageBodyWorkers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProviders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.httpHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.Ref.get()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.internal.util.collection.Tuples</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.message</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.MessageBodyWorkers</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.BasicValidator(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.workers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.workers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.workers</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyReaderMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyWriterMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.message.internal</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.HeaderValueException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.HttpDateFormat</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.HttpDateFormat.readDate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.MediaTypes</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MediaTypes.MEDIA_TYPE_COMPARATOR</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MediaTypes.intersect(java.util.List, java.util.List)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.intersectingMediaTypes(java.util.List, java.util.List, java.util.List, java.util.List)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MediaTypes.mostSpecific(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MediaTypes.typeEqual(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.MessageBodyFactory</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MessageBodyFactory.MessageBodyFactory(org.glassfish.jersey.internal.ServiceProviders)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.MessageBodyFactory$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MessageBodyFactory$Module.MessageBodyFactory$Module(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.MessagingModules$HeaderDelegateProviders</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MessagingModules$HeaderDelegateProviders.MessagingModules$HeaderDelegateProviders()</name>
                <inbound type="feature" confirmed="yes">com.sun.ws.rs.ext.RuntimeDelegateImpl.RuntimeDelegateImpl()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.MessagingModules$MessageBodyProviders</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.MessagingModules$MessageBodyProviders.MessagingModules$MessageBodyProviders()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.Requests</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Requests.baseUri(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Requests.getMessageWorkers(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Requests.httpHeaders(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Requests.relativePath(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Requests.relativePath(javax.ws.rs.core.Request, boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.message.internal.Responses</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.message.internal.Responses.toBuilder(javax.ws.rs.core.Response)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.process</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.Inflector</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.inflector</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$inflector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.inflector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.Inflector.apply(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.process.internal</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.DefaultRespondingContext</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.DefaultStagingContext</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.DefaultStagingContext.DefaultStagingContext()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.ServerModule$RequestStagingContext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.ServerModule$ResponseStagingContext()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.ExceptionMapper</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.FilterModule</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.FilterModule.FilterModule()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.HierarchicalRequestProcessor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.InflectorNotFoundException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.preMatchFilterAcceptor</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor.apply(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.RequestInvoker</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.invoker</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.RequestInvoker.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.RequestInvoker$Callback</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$2</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$3</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.RequestProcessor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.RequestScope</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.requestScope</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.RequestScope.enter()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.RequestScope.exit()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.RequestScope$Module</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.RequestScope$Module.RequestScope$Module()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.ResponseProcessor$Builder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.ResponseProcessor$RespondingContext</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.Stage</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.Stage$Root</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.Stages</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.Stages.asTreeAcceptor(org.glassfish.jersey.process.Inflector)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.Stages.terminalTreeContinuation(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.TreeAcceptor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$000(org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.rootAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setModelProvider(org.glassfish.jersey.server.model.RuntimeModelProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setRootAcceptor(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.child(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.rootRoute</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.acceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.TreeAcceptor.apply(javax.ws.rs.core.Request)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.process.internal.TreeAcceptor$Builder</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.child(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.process.internal.TreeAcceptor$Builder.build()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.isSatisfied()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.Application$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.application</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.Application()</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor</outbound>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor$Guard</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor.Monitor()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.Application$1)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.applicationModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.dirtyProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersConfigChanged</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersMonitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$000(org.glassfish.jersey.server.Application)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.rootAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$1100(org.glassfish.jersey.server.Application)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.references</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$1200(org.glassfish.jersey.server.Application)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$200(org.glassfish.jersey.server.Application)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.dirtyProviders</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.isSatisfied()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.addModules(org.glassfish.hk2.Module[])</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.applicationModule</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.module()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.SettableFuture</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.SettableFuture.create()</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker$Callback</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.ListenableFuture</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor.apply(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker$Callback</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestScope</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.RequestScope.enter()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.RequestScope.exit()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.invoker</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.preMatchFilterAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.requestScope</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</name>
                <outbound type="class" confirmed="no">java.util.concurrent.Future</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker$Callback</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.builder()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.builder(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">javax.annotation.Nullable</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.configureProviders()</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor</outbound>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor$Guard</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor.enterIf(com.google.common.util.concurrent.Monitor$Guard)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor.leave()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ContextResolverFactory.ContextResolverFactory(org.glassfish.jersey.internal.ServiceProviders)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExceptionMapperFactory.ExceptionMapperFactory(org.glassfish.jersey.internal.ServiceProviders)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.build()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderClasses(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderInstances(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MessageBodyFactory.MessageBodyFactory(org.glassfish.jersey.internal.ServiceProviders)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$1000(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$500(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$600(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$700(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$800(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$900(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.dirtyProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersConfigChanged</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersMonitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.references</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.dirtyProviders</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$200(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.getServiceProviders()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$500(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.references</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.getServices()</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.services</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.handleFailure(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Throwable.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.FINE</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.type(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.BAD_REQUEST</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.INTERNAL_SERVER_ERROR</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.NOT_FOUND</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.status(javax.ws.rs.core.Response$StatusType)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.internal.HeaderValueException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.InflectorNotFoundException</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.invoker</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.mbwFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.module()</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.applicationModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.preMatchFilterAcceptor</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.providersConfigChanged</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor$Guard</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.providersMonitor</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.references</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1100(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.requestScope</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestScope</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.process.internal.RequestInvoker$Callback)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.rootAcceptor</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$000(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setModelProvider(org.glassfish.jersey.server.model.RuntimeModelProvider)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setRootAcceptor(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.routingContextFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor.enter()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor.leave()</outbound>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Runnable.run()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.dirtyProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.providersMonitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.addModules(org.glassfish.hk2.Module[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1200(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServices()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.setModelProvider(org.glassfish.jersey.server.model.RuntimeModelProvider)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.rootAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.getRuntimeModel()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.runUpdateInProvidersMonitor(java.lang.Runnable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.setRootAcceptor(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.rootAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getGenericSuperclass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.status(int)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.fromResponse(javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getEntity()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getMetadata()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getStatus()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.hasEntity()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.MessageBodyWriter</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.MessageBodyWriter.writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.MappableException.MappableException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyWriter(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.getMessageWorkers(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.routingContextFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter.writeStatusAndHeaders(long, javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getEffectiveAcceptableType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodType()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$1</name>
            <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor$Guard</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.Application$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.Monitor</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.Monitor$Guard.Monitor$Guard(com.google.common.util.concurrent.Monitor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$1.isSatisfied()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$200(org.glassfish.jersey.server.Application)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.Application$1(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.Monitor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$1.isSatisfied()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker$Callback</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.SettableFuture</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.val$responseFuture</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.SettableFuture</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.SettableFuture.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.val$responseFuture</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.SettableFuture</outbound>
                <outbound type="feature" confirmed="no">com.google.common.util.concurrent.SettableFuture.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.val$responseFuture</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$2.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$2.val$responseFuture</name>
                <outbound type="class" confirmed="no">com.google.common.util.concurrent.SettableFuture</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.Application$2(org.glassfish.jersey.server.Application, com.google.common.util.concurrent.SettableFuture)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$2.result(javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$3</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker$Callback</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$request</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$writer</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$request</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$writer</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$300(org.glassfish.jersey.server.Application, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$request</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$writer</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.val$request</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$3.val$writer</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerResponseWriter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$4</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.val$newValue</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$4.run()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.val$newValue</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$References</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$600(org.glassfish.jersey.server.Application$References)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1100(org.glassfish.jersey.server.Application)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$4.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$4.val$newValue</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$5</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.Runnable</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.val$modules</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.addModules(org.glassfish.hk2.Module[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$5.run()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.BinderFactory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Bindings</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ContractLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ContractLocator.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.DynamicBinderFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.DynamicBinderFactory.commit()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Module.configure(org.glassfish.hk2.BinderFactory)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.bindDynamically()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.forContract(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.val$modules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1200(org.glassfish.jersey.server.Application)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$5.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$5.val$modules</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.Application$5(org.glassfish.jersey.server.Application, org.glassfish.hk2.Module[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$5.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$ApplicationModule</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.applicationModule</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.module()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application)</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.Application$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.Application$1)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.bind()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.configure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.annotatedWith(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.NamedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.to(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.toFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.PreMatchRequestFilterAcceptor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage$Root</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.Application$ApplicationModule.bind()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.Application$ApplicationModule.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.this$0</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.get()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ComponentException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$000(org.glassfish.jersey.server.Application)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$ApplicationModule.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.Application$ApplicationModule(org.glassfish.jersey.server.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.configure()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$ApplicationModule.get()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder.bind(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder.build()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$Builder$BoundBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder.bind(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.subPath(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.bind(java.lang.String)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$BoundBuilder.consumes(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$BoundBuilder.method(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$BoundBuilder.produces(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$BoundBuilder.subPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$300(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.consumes(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.produces(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder.to(org.glassfish.jersey.process.Inflector)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.Application$References</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$1100(org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.references</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.Application$References()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$1000(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.contextRespolvers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$500(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProviders</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$600(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.configuration</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$700(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProvidersBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$800(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.messageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.access$900(org.glassfish.jersey.server.Application$References)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.exceptionMappers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.configuration</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$600(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.contextRespolvers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$1000(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.exceptionMappers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$900(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.messageBodyWorkers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$800(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.serviceProviders</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$500(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.Application$References.serviceProvidersBuilder</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.access$700(org.glassfish.jersey.server.Application$References)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ApplicationBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.toArray()</outbound>
                <outbound type="class" confirmed="no">javax.annotation.Nullable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ContractLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ContractLocator.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.HK2</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.HK2.create(org.glassfish.hk2.Services, org.glassfish.hk2.Module[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.HK2.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ServiceLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ServiceLocator.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.byType(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.forContract(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.Application()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.module()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.runtimeModelCreator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.empty()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplicationClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getCustomModules()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.ServerModule()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.access$200(org.glassfish.jersey.server.ApplicationBuilder)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.access$400(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.access$500(org.glassfish.jersey.server.ApplicationBuilder)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.getMessage()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.isFatal()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.application</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.bind(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.build()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ContractLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ContractLocator.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.forContract(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.build()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderClasses(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders$Builder.setProviderInstances(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MessageBodyFactory.MessageBodyFactory(org.glassfish.jersey.internal.ServiceProviders)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setRootAcceptor(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.runtimeModelCreator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.process(org.glassfish.jersey.server.model.ResourceModelComponent)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$400(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.severe(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.warning(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.getIssueList()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.resourceConfig</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.resources</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$500(org.glassfish.jersey.server.ApplicationBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.runtimeModelCreator</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$200(org.glassfish.jersey.server.ApplicationBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resources</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.BasicValidator(org.glassfish.jersey.message.MessageBodyWorkers)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.applicationBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.bind(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</name>
                <outbound type="feature" confirmed="no">com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Preconditions.checkNotNull(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$000(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$100(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$300(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</name>
                <outbound type="feature" confirmed="no">com.google.common.base.Preconditions.checkArgument(boolean, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Preconditions.checkNotNull(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resource</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceConsumes</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$000(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.consumes(javax.ws.rs.core.MediaType[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceMethodBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$300(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.method(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resourceProduces</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$100(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.produces(javax.ws.rs.core.MediaType[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.subPath(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$400(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$500(org.glassfish.jersey.server.ApplicationBuilder)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.this$2</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.applicationBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodConsumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodProduces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.applicationBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodConsumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$300(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodConsumes</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodProduces</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$ResourceMethodBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodProduces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$300(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.ApplicationBuilder$AppBoundBuilder$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.consumes(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.produces(javax.ws.rs.core.MediaType[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application$Builder$BoundBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.applicationBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodConsumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.methodProduces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$000(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.access$100(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.methods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.this$2</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.val$transformationClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ContractLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ContractLocator.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.forContract(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.Inflector.apply(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.this$2</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.val$transformationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$200(org.glassfish.jersey.server.ApplicationBuilder)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.this$2</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.val$transformationClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.ApplicationBuilder$AppBoundBuilder$1$1(org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ContainerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ContainerFactory.ContainerFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ServiceProviders</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders.getCustom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProviders.getDefault(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.getServiceProviders()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ContainerProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ContainerProvider.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ContainerFactory.createContainer(java.lang.Class, org.glassfish.jersey.server.Application)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ContainerResponseWriter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.Application$3(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.failure(java.lang.Throwable)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.result(javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$3.val$writer</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.access$400(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.apply(javax.ws.rs.core.Request, org.glassfish.jersey.server.ContainerResponseWriter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ContainerResponseWriter.finish()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ContainerResponseWriter.writeStatusAndHeaders(long, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.OutputStream</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException</name>
            <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(java.lang.Throwable, int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$StatusType.getStatusCode()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.defaultStringValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.name</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.parameterType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.defaultStringValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getDefaultStringValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.getDefaultStringValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.defaultStringValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.getParameterName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.name</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.getParameterType()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.parameterType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getParameterName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.parameterType</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.getParameterType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$CookieParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$CookieParamException.ParamException$CookieParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.BAD_REQUEST</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$CookieParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$FormParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.BAD_REQUEST</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$FormParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$HeaderParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.BAD_REQUEST</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$HeaderParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$MatrixParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$MatrixParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$PathParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$PathParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$QueryParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$QueryParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ParamException$URIParamException</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$URIParamException.ParamException$URIParamException(java.lang.Throwable, java.lang.Class, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.NOT_FOUND</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$StatusType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException.ParamException(java.lang.Throwable, javax.ws.rs.core.Response$StatusType, java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ParamException$URIParamException.serialVersionUID</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig</name>
            <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.FeaturesAndProperties</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.Application$4(org.glassfish.jersey.server.Application, org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.run()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$4.val$newValue</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setResourceConfig(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.resourceConfig</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptySet()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.Application()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedSingletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.from(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.Application()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedSingletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.Application()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedSingletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$000(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$100(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$200(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$300(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$400(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$500(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.access$600(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.application</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$000(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplication()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.applicationClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$100(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplicationClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.builder()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.builder(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.builder(javax.ws.rs.core.Application)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.builder(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.cachedClasses</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.cachedSingletons</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.classLoader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.customModules</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$600(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getCustomModules()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.empty()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.from(javax.ws.rs.core.Application)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getApplication()</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getApplicationClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.applicationClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getClasses()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.getClasses()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerClasses</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.resourceFinders</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceFinder.hasNext()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceFinder.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceFinder.open()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotatedClasses()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getCustomModules()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.customModules</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toCharArray()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.quote(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.toArray(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getProperties()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.getSingletons()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Application.getSingletons()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.cachedSingletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.providerInstances</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.configureProviders()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.booleanValue()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.parseBoolean(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.PropertiesProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.PropertiesProvider.getProperties()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.properties</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$400(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperties()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getProperty(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.isProperty(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.providerClasses</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$200(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.providerInstances</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$300(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getSingletons()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.resourceFinders</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$500(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(org.glassfish.jersey.server.ResourceConfig, javax.ws.rs.core.Application)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addProperties(java.util.Map)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setClassLoader(java.lang.ClassLoader)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(javax.ws.rs.core.Application)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addClasses(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addClasses(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addFinder(org.glassfish.jersey.server.ResourceFinder)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addModules(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addModules(org.glassfish.hk2.Module[])</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addProperties(java.util.Map)</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addSingletons(java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.addSingletons(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.build()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.files(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.packages(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.setClassLoader(java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Builder.setProperty(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$Module</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.ResourceConfig$Module$1(org.glassfish.jersey.server.ResourceConfig$Module)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module.ResourceConfig$Module()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ResourceConfig$Module.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ResourceConfig$Module.bind(org.glassfish.hk2.TypeLiteral)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module.configure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toFactory(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ResolvedBinder.in(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.FeaturesAndProperties</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.referenceFactory()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestScope</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.ResourceConfig$Module$1(org.glassfish.jersey.server.ResourceConfig$Module)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceConfig$Module.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceConfig$Module.bind(org.glassfish.hk2.TypeLiteral)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$Module$1</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$1.ResourceConfig$Module$1(org.glassfish.jersey.server.ResourceConfig$Module)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$1.ResourceConfig$Module$1(org.glassfish.jersey.server.ResourceConfig$Module)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.ResourceConfig$Module$JaxrsApplicationFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ComponentException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.rcFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getApplication()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.rcFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.get()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory.ResourceConfig$Module$ResourceConfigFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.empty()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(javax.ws.rs.core.Application)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Maps.newHashMap(java.util.Map)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet(java.lang.Iterable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Iterable</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.HashMap</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$000(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$100(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$200(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$300(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$400(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$500(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.access$600(org.glassfish.jersey.server.ResourceConfig)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.builder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(org.glassfish.hk2.Module[])</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addProperties(java.util.Map)</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.putAll(java.util.Map)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.newHashSet(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.HashSet</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.loadClass(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.String[]</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.CONFIG</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Application</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getContextClassLoader()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.application</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.applicationClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.ResourceConfig(javax.ws.rs.core.Application, java.lang.Class, java.lang.ClassLoader, java.util.Set, java.util.Set, java.util.Map, java.util.Set, java.util.Set)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.empty()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setClassLoader(java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classes</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addClasses(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.customModules</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addModules(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addProperties(java.util.Map)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.resourceFinders</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setClassLoader(java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.classLoader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.setProperty(java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.properties</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.singletons</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(javax.ws.rs.core.Application)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.ResourceConfig$ResourceConfigBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addSingletons(java.util.Set)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ResourceFinder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Iterator</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Builder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.addFinder(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ResourceFinder.hasNext()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ResourceFinder.next()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceFinder.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceFinder.remove()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ResourceFinder.reset()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.ServerModule$1(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.ServerModule$2(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.ServerModule$3(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.ServerModule$4(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.ServerModule$5(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.ServerModule$6(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.ServerModule$7(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.ServerModule$8(org.glassfish.jersey.server.ServerModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule.ServerModule()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ServerModule.bind()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ServerModule.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ServerModule.bind(org.glassfish.hk2.TypeLiteral)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule.configure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.HttpHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.ResponseHeaders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.to(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toFactory(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Module</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.NamedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ResolvedBinder.in(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.PerLookup</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ContextResolverFactory$Module.ContextResolverFactory$Module(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExceptionMapperFactory$Module.ExceptionMapperFactory$Module(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.JaxrsProviders$Module.JaxrsProviders$Module()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceFinderModule.ServiceFinderModule(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ServiceProvidersModule.ServiceProvidersModule()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver$Module.ContextInjectionResolver$Module()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.referenceFactory()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MessageBodyFactory$Module.MessageBodyFactory$Module(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MessagingModules$MessageBodyProviders.MessagingModules$MessageBodyProviders()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.DefaultRespondingContext</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.FilterModule.FilterModule()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.HierarchicalRequestProcessor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestInvoker</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestProcessor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestScope</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.RequestScope$Module.RequestScope$Module()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.ResponseProcessor$Builder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.ResponseProcessor$RespondingContext</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ContainerProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module.ResourceConfig$Module()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.ServerModule$1(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.ServerModule$2(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.ServerModule$3(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.ServerModule$4(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.ServerModule$5(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.ServerModule$6(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.ServerModule$7(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.ServerModule$8(org.glassfish.jersey.server.ServerModule)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestReferencingFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper(org.glassfish.jersey.server.ServerModule$1)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ServerModule.bind()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ServerModule.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ServerModule.bind(org.glassfish.hk2.TypeLiteral)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ServerModule.install(org.glassfish.hk2.Module[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.ParameterInjectionModule()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.RouterModule()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.ResourceModelModule()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.ServerModule.install(org.glassfish.hk2.Module[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$1</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper(org.glassfish.jersey.server.ServerModule$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$1.ServerModule$1(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$1.ServerModule$1(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$2</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$2.ServerModule$2(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$2.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$2.ServerModule$2(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$3</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$3.ServerModule$3(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$3.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$3.ServerModule$3(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$4</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$4.ServerModule$4(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$4.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$4.ServerModule$4(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$5</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$5.ServerModule$5(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$5.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$5.ServerModule$5(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$6</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$6.ServerModule$6(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$6.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$6.ServerModule$6(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$7</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$7.ServerModule$7(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$7.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$7.ServerModule$7(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$8</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$8.ServerModule$8(org.glassfish.jersey.server.ServerModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$8.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$8.ServerModule$8(org.glassfish.jersey.server.ServerModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory.ServerModule$HttpHeadersReferencingFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory.ServerModule$RequestHeadersReferencingFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$RequestReferencingFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestReferencingFactory.ServerModule$RequestReferencingFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.DefaultStagingContext</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.ServerModule$RequestStagingContext()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.DefaultStagingContext.DefaultStagingContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.HttpHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.httpHeaders(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.httpHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestReference</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.HttpHeaders</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.httpHeaders(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.httpHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestReference</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.httpHeadersReference</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestHeadersReference</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestReference</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory.ServerModule$ResponseHeadersReferencingFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory.ServerModule$ResponseReferencingFactory(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ReferencingFactory.ReferencingFactory(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.DefaultStagingContext</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.ServerModule$ResponseStagingContext()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.DefaultStagingContext.DefaultStagingContext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.ResponseHeaders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseReference</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.ResponseHeaders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.set(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.Stage</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseHeadersReference</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseReference</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseHeadersReference</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseReference</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.after(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.before(org.glassfish.jersey.process.internal.Stage, javax.ws.rs.core.Response)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerModule$ServerExceptionMapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.ExceptionMapper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper(org.glassfish.jersey.server.ServerModule$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper(org.glassfish.jersey.server.ServerModule$1)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ServerModule$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.ServerModule$ServerExceptionMapper()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Throwable)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ServerExceptionMapper.apply(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.ServerProperties</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.COMMON_DELIMITERS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.JAXRS_APPLICATION_CLASS</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.PROVIDER_CLASSNAMES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.PROVIDER_CLASSPATH</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.PROVIDER_PACKAGES</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.ServerProperties.ServerProperties()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.internal</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.LocalizationMessages</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.LocalizationMessages()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.localize(org.glassfish.jersey.internal.l10n.Localizable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizable</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.getMessage(java.lang.String, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.localizer</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.UNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.WARNING_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableAMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableDEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERRORS_AND_WARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableERROR_UNMARSHALLING_JAXB(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_ENTITY(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_CONSUMES_FORM_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableGET_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableMULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_LOC(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableNON_PUB_SUB_RES_METHOD(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableRES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_RETURNS_VOID(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableSUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableTYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableUNABLE_TO_LOAD_CLASS(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNINGS_DETECTED_WITH_RESOURCE_CLASSES(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizableWARNING_MSG(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.LocalizationMessages.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.LocalizableMessageFactory.LocalizableMessageFactory(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.l10n.Localizer.Localizer()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.localizer</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.messageFactory</outbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.internal.inject</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.AbstractHttpContextValueFactory$1(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.CookieParamValueFactoryProvider$CookieParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.CookieParamValueFactoryProvider$CookieTypeParamValueFactory(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.EntityParamValueFactoryProvider$EntityValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.FormParamValueFactoryProvider$FormParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.HeaderParamValueFactoryProvider$HeaderParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$000(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.uriInfo</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$100(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.request</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$200(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.response</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ComponentException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.AbstractHttpContextValueFactory$1(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.request</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$100(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.response</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$200(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.uriInfo</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$000(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.AbstractHttpContextValueFactory$1(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getProperties()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$100(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$200(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.access$000(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.AbstractHttpContextValueFactory$1(org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getRequest()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getResponse()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.parameterName</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.valueReader</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader$ValidateDefaultValue</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.spi.StringValueReader$ValidateDefaultValue.value()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.spi.StringValueReader.fromString(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.SingleValueExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.valueReader</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.spi.StringValueReader.fromString(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getDefaultValueString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.isDefaultValueRegistered()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.valueReader</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.spi.StringValueReader.fromString(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getDefaultValueString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.parameterName</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.isDefaultValueRegistered()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValueString</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.parameterName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.getName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.valueReader</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.compatibleSource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.mpep</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.compatibleSource</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.mpep</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.compatibleSource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.injector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.mpep</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.mpep</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.CollectionExtractor$ListValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.CollectionExtractor$SetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.CollectionExtractor$SortedSetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.defaultValue()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.CollectionExtractor.defaultValue()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.CollectionExtractor.fromString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getName()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.CollectionExtractor.isDefaultValueRegistered()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.fromString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.CollectionExtractor$ListValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.CollectionExtractor$SetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.CollectionExtractor$SortedSetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor.isDefaultValueRegistered()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.CollectionExtractor$ListValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.getInstance()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.CollectionExtractor$SetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.CollectionExtractor$SortedSetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver.CookieParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.COOKIE</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.CookieParamValueFactoryProvider$CookieParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.CookieParamValueFactoryProvider$CookieTypeParamValueFactory(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.CookieParamValueFactoryProvider$CookieParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.CookieParamValueFactoryProvider$CookieParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.CookieParamValueFactoryProvider$CookieTypeParamValueFactory(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.name</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Cookie</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.CookieParamValueFactoryProvider$CookieTypeParamValueFactory(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver.CookieParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</name>
                <outbound type="class" confirmed="no">com.sun.hk2.component.InjectionResolver</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.resolver</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.access$000(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.resolver</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.CONTEXT</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.UNKNOWN</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.resolver</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.access$000(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.val$parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AnnotatedElement</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ComponentException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.ContextInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.val$parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.access$000(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.component.Inhabitant</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.val$parameter</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.EntityParamValueFactoryProvider$EntityValueFactory(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.EntityParamValueFactoryProvider$EntityValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.readEntity(javax.ws.rs.core.TypeLiteral)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.TypeLiteral</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.TypeLiteral.of(java.lang.Class, java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.parameter</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.EntityParamValueFactoryProvider$EntityValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver.FormParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.FORM</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.FormParamValueFactoryProvider$FormParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.FormParamValueFactoryProvider$FormParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Form</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.ensureValidRequest(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalStateException</outbound>
                <outbound type="feature" confirmed="no">java.lang.IllegalStateException.IllegalStateException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.APPLICATION_FORM_URLENCODED_TYPE</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getMethod()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.RequestHeaders.getMediaType()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MediaTypes.typeEqual(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.FormParamValueFactoryProvider$FormParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Form</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Form.asMap()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ExtractorException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.getCause()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$FormParamException.ParamException$FormParamException(java.lang.Throwable, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.extractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Form</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Form</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver.FormParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver.HeaderParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.HEADER</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.HeaderParamValueFactoryProvider$HeaderParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.HeaderParamValueFactoryProvider$HeaderParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.HeaderParamValueFactoryProvider$HeaderParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.RequestHeaders.asMap()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ExtractorException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.getCause()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$HeaderParamException.ParamException$HeaderParamException(java.lang.Throwable, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getRequest()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver.HeaderParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.HttpContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieTypeParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.cacheForm(org.glassfish.jersey.server.internal.inject.HttpContext, javax.ws.rs.core.Form)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getCachedForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.getForm(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HttpContext.getProperties()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HttpContext.getRequest()</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HttpContext.getResponse()</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Providers</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.Providers.getContextResolver(java.lang.Class, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.context</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.unmarshaller</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.context</name>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.ContextResolver.getContext(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.context</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.newInstance(java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.jaxbContexts</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.ext.ContextResolver.getContext(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBContext</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBContext.createUnmarshaller()</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getJAXBContext(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.unmarshaller</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.jaxbContexts</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getStoredJAXBContext(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.static {}</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.jaxbContexts</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.unmarshaller</name>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.ContextResolver</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.getUnmarshaller(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Providers</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.spfProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider.JaxbStringReaderProvider(javax.ws.rs.ext.Providers)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.access$000(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.spfProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getUnmarshaller(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.spfProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.access$000(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.val$type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.Reader</outbound>
                <outbound type="feature" confirmed="no">java.io.StringReader.StringReader(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBElement</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.JAXBElement.getValue()</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.JAXBException</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.UnmarshalException</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.Unmarshaller</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source)</outbound>
                <outbound type="feature" confirmed="no">javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
                <outbound type="class" confirmed="no">javax.xml.parsers.SAXParser</outbound>
                <outbound type="feature" confirmed="no">javax.xml.parsers.SAXParser.getXMLReader()</outbound>
                <outbound type="class" confirmed="no">javax.xml.parsers.SAXParserFactory</outbound>
                <outbound type="feature" confirmed="no">javax.xml.parsers.SAXParserFactory.newSAXParser()</outbound>
                <outbound type="class" confirmed="no">javax.xml.transform.Source</outbound>
                <outbound type="feature" confirmed="no">javax.xml.transform.sax.SAXSource.SAXSource(org.xml.sax.XMLReader, org.xml.sax.InputSource)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_UNMARSHALLING_JAXB(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.val$type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.access$000(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getUnmarshaller(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.xml.sax.InputSource</outbound>
                <outbound type="feature" confirmed="no">org.xml.sax.InputSource.InputSource(java.io.Reader)</outbound>
                <outbound type="class" confirmed="no">org.xml.sax.XMLReader</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.val$type</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.JaxbStringReaderProvider$RootElementProvider$1(org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver.MatrixParamValueFactoryProvider$InjectionResolver()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.MATRIX</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver.MatrixParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.decode</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.PathSegment.getMatrixParameters()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ExtractorException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.getCause()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$MatrixParamException.ParamException$MatrixParamException(java.lang.Throwable, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo.getPathSegments(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.CookieParamValueFactoryProvider$CookieParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$CookieParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.FormParamValueFactoryProvider$FormParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.HeaderParamValueFactoryProvider$HeaderParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.MatrixParamValueFactoryProvider$MatrixParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.extractor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$FormParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$HeaderParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.MultivaluedParameterExtractorFactory(org.glassfish.jersey.server.internal.inject.StringReaderFactory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.stringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.stringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.stringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getTypeArgumentAndClass(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getValueOfStringMethod(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.DEFAULT_COULD_NOT_PROCESS_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToClassMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToDefaultValueMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.SingleValueExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.stringReaderFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.MultivaluedParameterExtractorFactory(org.glassfish.jersey.server.internal.inject.StringReaderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.mpep</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</name>
            <outbound type="class" confirmed="no">com.sun.hk2.component.InjectionResolver</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Predicate</outbound>
                <outbound type="feature" confirmed="no">com.sun.hk2.component.InjectionResolver.InjectionResolver(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.concreteValueFactoryClassFilter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver.CookieParamValueFactoryProvider$InjectionResolver()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver.FormParamValueFactoryProvider$InjectionResolver()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver.HeaderParamValueFactoryProvider$InjectionResolver()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver.MatrixParamValueFactoryProvider$InjectionResolver()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver.PathParamValueFactoryProvider$InjectionResolver()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver.QueryParamValueFactoryProvider$InjectionResolver()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.concreteValueFactoryClassFilter</name>
                <outbound type="class" confirmed="no">com.google.common.base.Predicate</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Predicate</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AnnotatedElement</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.AnnotatedElement.getDeclaredAnnotations()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.concreteValueFactoryClassFilter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.component.ComponentException</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.component.Inhabitant</outbound>
                <outbound type="feature" confirmed="no">org.jvnet.tiger_types.Types.erasure(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">org.jvnet.tiger_types.Types.getTypeArgument(java.lang.reflect.Type, int)</outbound>
                <outbound type="feature" confirmed="no">org.jvnet.tiger_types.Types.isSubClassOf(java.lang.reflect.Type, java.lang.reflect.Type)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.isOptional(java.lang.reflect.AnnotatedElement, java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.AnnotatedElement</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1</name>
            <outbound type="class" confirmed="no">com.google.common.base.Predicate</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.val$valueFactoryProviderClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.val$valueFactoryProviderClass</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.val$valueFactoryProviderClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.ParamInjectionResolver$1(org.glassfish.jersey.server.internal.inject.ParamInjectionResolver, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.ParameterInjectionModule</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.ParameterInjectionModule()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.bind()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</name>
                <outbound type="class" confirmed="no">com.sun.hk2.component.InjectionResolver</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.NamedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ResolvedBinder.in(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.bind()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver.PathParamValueFactoryProvider$InjectionResolver()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.PATH</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$InjectionResolver.PathParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.name</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.decode</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.name</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.name</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.decode</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.PathSegment</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.name</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.extractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.decode</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.PathParamValueFactoryProvider$PathParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ExtractorException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.getCause()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$PathParamException.ParamException$PathParamException(java.lang.Throwable, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo.getPathParameters(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.PrimitiveMapper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.TYPE</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</name>
                <outbound type="class" confirmed="no">java.lang.Boolean</outbound>
                <outbound type="feature" confirmed="no">java.lang.Boolean.valueOf(boolean)</outbound>
                <outbound type="class" confirmed="no">java.lang.Byte</outbound>
                <outbound type="feature" confirmed="no">java.lang.Byte.valueOf(byte)</outbound>
                <outbound type="class" confirmed="no">java.lang.Double</outbound>
                <outbound type="feature" confirmed="no">java.lang.Double.valueOf(double)</outbound>
                <outbound type="class" confirmed="no">java.lang.Float</outbound>
                <outbound type="feature" confirmed="no">java.lang.Float.valueOf(float)</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Long</outbound>
                <outbound type="feature" confirmed="no">java.lang.Long.valueOf(long)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.Short</outbound>
                <outbound type="feature" confirmed="no">java.lang.Short.valueOf(short)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToClassMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToDefaultValueMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveMapper.static {}</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToClassMap()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.getPrimitiveToDefaultValueMap()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToClassMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveMapper.primitiveToDefaultValueMap</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultDefaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultStringValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.valueOf</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultDefaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultStringValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getDefaultValueString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.trim()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultDefaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getDefaultValueString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.defaultStringValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.valueOf</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.valueOf</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.PrimitiveValueOfExtractor(java.lang.reflect.Method, java.lang.String, java.lang.String, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PrimitiveValueOfExtractor.getValue(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver.QueryParamValueFactoryProvider$InjectionResolver()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.QUERY</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$InjectionResolver.QueryParamValueFactoryProvider$InjectionResolver()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.ParamInjectionResolver(java.lang.Class, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.AbstractHttpContextValueFactory()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.extractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.decode</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.extractor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.QueryParamValueFactoryProvider$QueryParamValueFactory(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ExtractorException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.getCause()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ParamException$QueryParamException.ParamException$QueryParamException(java.lang.Throwable, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getDefaultValueString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.decode</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.extractor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo.getQueryParameters(boolean)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getDefaultValueString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getDefaultValueString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.defaultValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.SingleStringValueExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleStringValueExtractor.getName()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor.SingleValueExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor.defaultValue()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.getFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.defaultValue()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.fromString(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.getName()</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor.fromString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.inject.SingleValueExtractor.getName()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.StringCollectionExtractor$ListString(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.StringCollectionExtractor$SetString(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.StringCollectionExtractor$SortedSetString(java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getDefaultValueString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedMap.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getDefaultValueString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.defaultValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.StringCollectionExtractor$ListString(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.StringCollectionExtractor$SetString(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.StringCollectionExtractor$SortedSetString(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.parameter</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.parameter</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getName()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.StringCollectionExtractor$ListString(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$ListString.getInstance()</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.StringCollectionExtractor$SetString(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.StringCollectionExtractor$SortedSetString(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.StringCollectionExtractor(java.lang.String, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.getInstance(java.lang.Class, java.lang.String, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.extract(javax.ws.rs.core.MultivaluedMap)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringCollectionExtractor.extract(javax.ws.rs.core.MultivaluedMap)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringCollectionExtractor$SortedSetString.getInstance()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.SortedSet</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.MultivaluedParameterExtractorFactory(org.glassfish.jersey.server.internal.inject.StringReaderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.stringReaderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.readerProviders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.readerProviders</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderFactory.readerProviders</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders.StringReaderProviders()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader._fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getTargetException()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader._fromString(java.lang.String)</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.StringReaderProviders$DateProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.val$type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="class" confirmed="no">java.util.Date</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ExtractorException.ExtractorException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.HttpDateFormat.readDate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.val$type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.val$type</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.StringReaderProviders$DateProvider$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.StringReaderProviders$StringConstructor()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getStringConstructor(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$constructor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.newInstance(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$constructor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$constructor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.val$type</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1.StringReaderProviders$StringConstructor$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor, java.lang.Class, java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor$1._fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.this$0</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.StringReaderProviders$TypeFromString()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.StringReaderProviders$TypeFromStringEnum()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getFromStringStringMethod(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$fromStringMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$fromStringMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$type</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$fromStringMethod</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.val$type</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1.StringReaderProviders$TypeFromString$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString, java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString$1._fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.StringReaderProviders$TypeFromStringEnum()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.StringReaderProviders$TypeFromString()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReaderProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.StringReaderProviders$TypeValueOf()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getValueOfStringMethod(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.spi.StringValueReader</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader.StringReaderProviders$AbstractStringReader(org.glassfish.jersey.server.internal.inject.StringReaderProviders$1)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$valueOf</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$valueOf</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$type</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.val$valueOf</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1.StringReaderProviders$TypeValueOf$1(org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf, java.lang.Class, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf$1._fromString(java.lang.String)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.internal.routing</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Lists.newLinkedList()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Lists.newLinkedList()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.currentAcceptors</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.currentAcceptors</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.acceptedRoutes</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.build()</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.child(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor$Builder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.currentAcceptors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ContractLocator</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ContractLocator.getProvider()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Provider</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Services.forContract(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.asFactory(org.glassfish.hk2.Provider)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor$Builder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.factoryOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.rootRoute</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.google.common.collect.UnmodifiableIterator</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.relativePath(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.rootRoute</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchResult(java.util.regex.MatchResult)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.SingleMatchResult(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.rootRoute</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.initializerFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.initializerFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.this$0</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.MatchResultInitializerAcceptor(org.glassfish.hk2.Factory, org.glassfish.jersey.process.internal.TreeAcceptor, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$1)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.contextProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.acceptedRoutes</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.emptyIterator()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)</outbound>
                <outbound type="class" confirmed="no">com.google.common.collect.UnmodifiableIterator</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.right()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.Stages.terminalTreeContinuation(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.contextProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getFinalMatchingGroup()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchResult(java.util.regex.MatchResult)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.FACTORY_TO_ACCEPTOR_TRANSFORMATION</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.getTemplate()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.match(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.acceptorFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.this$0</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.PathPatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$1)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.acceptorFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.initializerFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.acceptorFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.acceptorFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.initializerFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.initializerFactory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.this$0</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.acceptedRoutes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.build(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.acceptedRoutes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.build()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.contextProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.acceptedRoutes</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.emptyIterator()</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)</outbound>
                <outbound type="class" confirmed="no">com.google.common.collect.UnmodifiableIterator</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.matches()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.toMatchResult()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.right()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.Stages.terminalTreeContinuation(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.acceptedRoutes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.contextProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getFinalMatchingGroup()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchResult(java.util.regex.MatchResult)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.FACTORY_TO_ACCEPTOR_TRANSFORMATION</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.acceptorFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.this$0</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.PatternRouteAcceptor(org.glassfish.hk2.Factory, java.util.List, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$1)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.acceptorFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.initializerFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.acceptorFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.acceptorFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.initializerFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.build(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.initializerFactory</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</name>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.Object)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.acceptedRoutes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.build(java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.acceptedRoutes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.access$000(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.PatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PatternRouteBuilder, org.glassfish.hk2.Services, java.util.regex.Pattern)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.build()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.RedirectingAcceptor$1(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.patternEndsInSlash</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.uriInfoProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.access$000(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.uriInfoProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.Stages.terminalTreeContinuation(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.patternEndsInSlash</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.contextProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getFinalMatchingGroup()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.patternEndsInSlash</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.google.common.collect.UnmodifiableIterator</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.Stages.asTreeAcceptor(org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.RedirectingAcceptor$1(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.uriInfoProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.access$000(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.RedirectingAcceptor$1(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.redirect(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.path(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriInfo.getRequestUriBuilder()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.access$000(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.RedirectingAcceptor$1(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$1.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.uriInfoProvider</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.contextProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.uriInfoProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.RedirectingAcceptor(org.glassfish.hk2.Factory, org.glassfish.hk2.Factory, boolean, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.contextProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.uriInfoProvider</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.build(boolean, boolean)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.RouterModule$2(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.RouterModule$3(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.FACTORY_TO_ACCEPTOR_TRANSFORMATION</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.RouterModule()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.bind()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.bind(org.glassfish.hk2.TypeLiteral)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.configure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriInfo</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.to(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.toFactory(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.NamedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.ResolvedBinder.in(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.RequestScope</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.RouterModule$2(org.glassfish.jersey.server.internal.routing.RouterModule)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.RouterModule$3(org.glassfish.jersey.server.internal.routing.RouterModule)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.RouterModule.bind()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.RouterModule.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.RouterModule.bind(org.glassfish.hk2.TypeLiteral)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule.static {}</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.RouterModule$1()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.FACTORY_TO_ACCEPTOR_TRANSFORMATION</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$1</name>
            <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$1.RouterModule$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$1.apply(java.lang.Object)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$2</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$2.RouterModule$2(org.glassfish.jersey.server.internal.routing.RouterModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$2.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$2.RouterModule$2(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$3</name>
            <outbound type="class" confirmed="no">org.glassfish.hk2.TypeLiteral</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$3.RouterModule$3(org.glassfish.jersey.server.internal.routing.RouterModule)</name>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.TypeLiteral.TypeLiteral()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$3.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$3.RouterModule$3(org.glassfish.jersey.server.internal.routing.RouterModule)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.rootBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.rootBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.AbstractRouteToPathBuilder(org.glassfish.hk2.Services, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder$1.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.route(java.util.regex.Pattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.hk2.Factory)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor$Builder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor$Builder</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder._to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.AbstractRouteToPathBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.lastRoutedBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.lastRoutedBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder.build()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getEffectiveAcceptableType()</name>
                <outbound type="class" confirmed="no">javax.annotation.Nullable</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getFinalMatchingGroup()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor.getLastMatch()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getMatchedResults()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodAnnotations()</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.getResponseMethodType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.writeResponse(org.glassfish.jersey.server.ContainerResponseWriter, javax.ws.rs.core.Request, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchResult()</name>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchedResource()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushLeftHandPath()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchResult(java.util.regex.MatchResult)</name>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchedResource(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">javax.annotation.Nonnull</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodType(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.RouterModule$UriRoutingContextFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.ctx</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.get()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.get()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ComponentException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.ctx</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.SingleMatchResult(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.s</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.end()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.s</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.end(int)</name>
                <outbound type="feature" confirmed="no">java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.group()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.s</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.group(int)</name>
                <outbound type="feature" confirmed="no">java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.groupCount()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.s</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.SingleMatchResult(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.end()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.group()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.start()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.start(int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.SingleMatchResult.start(int)</name>
                <outbound type="feature" confirmed="no">java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.SingleMatchResult.start()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.uri.ExtendedUriInfo</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.ctx</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.UriRoutingContext$1(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.UriRoutingContext$2(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.fromNullable(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Lists.newLinkedList()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.effectiveMediaType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.paths</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodAnnotations</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.decodedTemplateValues</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedHashMap</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.effectiveMediaType</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.encodedTemplateValues</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedHashMap</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.internal.UriBuilderImpl.UriBuilderImpl()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.internal.UriBuilderImpl.uri(java.net.URI)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.baseUri(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.baseUri(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.internal.UriBuilderImpl.UriBuilderImpl()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.internal.UriBuilderImpl.uri(java.net.URI)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEffectiveAcceptableType()</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.orNull()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.effectiveMediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawQuery()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.peek()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.groupCount()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriTemplate.getTemplateVariables()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMappedThrowable()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResources()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableList(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResults()</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedTemplates()</name>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableList(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Lists.transform(java.util.List, com.google.common.base.Function)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableList(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.UriRoutingContext$1(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.paths</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.relativePath(javax.ws.rs.core.Request, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Requests.relativePath(javax.ws.rs.core.Request, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.end(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group()</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.start(int)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters()</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
                <outbound type="feature" confirmed="no">com.google.common.collect.Lists.transform(java.util.List, com.google.common.base.Function)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map$Entry</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getKey()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map$Entry.getValue()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedHashMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedHashMap.MultivaluedHashMap()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedHashMap.entrySet()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedHashMap.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.UriRoutingContext$2(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.decodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.encodedTemplateValues</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH_SEGMENT</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decodePath(java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.getLast()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.subList(int, int)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters()</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decodeQuery(java.net.URI, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters(boolean)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decodeQuery(java.net.URI, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getUri()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getEncodedPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getUriBuilder()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref.get()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.orNull()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation[]</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodAnnotations</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.orNull()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResults()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedResources()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchedResource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.paths</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.peek()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchedResource()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.peek()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushLeftHandPath()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getFinalMatchingGroup()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.paths</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchResult(java.util.regex.MatchResult)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.push(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchResults</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushMatchedResource(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.push(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.matchedResources</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.addFirst(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.MatchResult</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.MatchResult.group(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MultivaluedHashMap</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedHashMap.MultivaluedHashMap()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MultivaluedHashMap.addFirst(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.decodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.encodedTemplateValues</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.peekMatchResult()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH_SEGMENT</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriTemplate</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriTemplate.getTemplateVariables()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.request</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Ref</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUri()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPath(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUri()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getRequestUriBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodAnnotations</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodType</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getResponseMethodType()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.of(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.effectiveMediaType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.of(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodAnnotations</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.setResponseMethodType(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">com.google.common.base.Optional</outbound>
                <outbound type="feature" confirmed="no">com.google.common.base.Optional.of(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.NullPointerException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.responseMethodType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext.templates</name>
                <outbound type="class" confirmed="no">java.util.LinkedList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedTemplates()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$1</name>
            <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.UriRoutingContext$1(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getMatchedURIs(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.UriRoutingContext$1(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$2</name>
            <outbound type="class" confirmed="no">com.google.common.base.Function</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.UriRoutingContext$2(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.UriRoutingContext$2(org.glassfish.jersey.server.internal.routing.UriRoutingContext)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.internal.scanning</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceProcessor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener, org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedHashSet.LinkedHashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener, org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.annotations</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classloader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.accept(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$100(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.annotations</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$200(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classes</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$300(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classloader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.annotations</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$100(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classVisitor</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classes</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$200(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotatedClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classloader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$300(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotatedClasses()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classes</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.getAnnotationSet(java.lang.Class[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replaceAll(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Provider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.Class[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.newJaxrsResourceAndProviderListener(java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.ext.Provider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classVisitor</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.ClassReader(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="no">org.objectweb.asm.ClassReader.accept(org.objectweb.asm.ClassVisitor, int)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.ClassVisitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getClasses()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener, org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.objectweb.asm.ClassVisitor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.classVisitor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener, org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener, org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.AnnotationAcceptingListener(java.lang.ClassLoader, java.lang.Class[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.className</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassNotFoundException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.classForNameWithException(java.lang.String, java.lang.ClassLoader)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$300(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isAnnotated</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isScoped</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.AnnotationAcceptingListener$AnnotatedClassVisitor(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isScoped</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$100(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.AnnotationVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAttribute(org.objectweb.asm.Attribute)</name>
                <outbound type="class" confirmed="no">org.objectweb.asm.Attribute</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitEnd()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replaceAll(java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.getClassForName(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isAnnotated</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isScoped</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.access$200(org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.FieldVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.className</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.isScoped</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.objectweb.asm.MethodVisitor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitOuterClass(java.lang.String, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitSource(java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.BundleSchemeResourceFinderFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.getSchemes()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.accessed</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.uri</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.accessed</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.hasNext()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.accessed</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.accessed</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.uri</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toURL()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.accessed</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.uri</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.reset()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.uri</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.BundleSchemeResourceFinderFactory$BundleSchemeScanner(org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeResourceFinderFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.getSchemes()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.singleton(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.this$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getPath()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.this$0</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI, org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.access$100(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.hasNext()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.access$100(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.remove()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.reset()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.this$2</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.val$f</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.current</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.files</name>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.empty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.pop()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.access$100(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.next</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.FileNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.reset()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.this$1</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.val$f</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1</name>
            <outbound type="class" confirmed="no">java.util.Stack</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.Stack()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.push(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.this$2</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.val$f</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.push(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.this$2</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1.FileSchemeResourceFinderFactory$FileSchemeScanner$1$1(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FilesScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.files(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.access$000(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.files</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.hasNext()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.access$000(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.remove()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.this$1</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.val$f</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.current</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.files</name>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.util.Stack</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.empty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.pop()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.files</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.access$000(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.next</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.io.File)</outbound>
                <outbound type="class" confirmed="no">java.io.FileNotFoundException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.reset()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1.val$f</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1</name>
            <outbound type="class" confirmed="no">java.util.Stack</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.isDirectory()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.listFiles()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Stack.Stack()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.push(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.this$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.val$f</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.FilesScanner$1(org.glassfish.jersey.server.internal.scanning.FilesScanner, java.io.File)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.push(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.this$1</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1$1.FilesScanner$1$1(org.glassfish.jersey.server.internal.scanning.FilesScanner$1)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.reset()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarInputStream</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarInputStream.JarInputStream(java.io.InputStream)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.jarInputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.parent</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.SecurityException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.startsWith(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.getName()</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.isDirectory()</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarInputStream</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarInputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarInputStream.getNextJarEntry()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.CONFIG</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.FINE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.jarInputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.parent</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.jarInputStream</name>
                <outbound type="class" confirmed="no">java.util.jar.JarInputStream</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.next</name>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarEntry</outbound>
                <outbound type="feature" confirmed="no">java.util.jar.JarEntry.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.util.jar.JarInputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.jarInputStream</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.parent</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.remove()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.reset()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeResourceFinderFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getRawSchemeSpecificPart()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.io.FileInputStream.FileInputStream(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.MalformedURLException</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getSchemes()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.inputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String, org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="no">java.io.InputStream.close()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.FINE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.inputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.inputStream</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.remove()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.remove()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.reset()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.reset()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.jarFileScanner</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner.JarZipSchemeResourceFinderFactory$JarZipSchemeScanner(org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory, java.io.InputStream, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeResourceFinderFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.JarZipSchemeResourceFinderFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.classloader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.finderFactories</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.packages</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsSchemeResourceFinderFactory()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getContextClassLoader()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.getElements(java.lang.String[], java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$ResourceConfigBuilder.packages(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.finderFactories</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.getSchemes()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toLowerCase()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getScheme()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.finderFactories</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.create(java.net.URI)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.classloader</name>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.finderFactories</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.hasNext()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(char, char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.hasMoreElements()</outbound>
                <outbound type="feature" confirmed="no">java.util.Enumeration.nextElement()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$000()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.classloader</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.packages</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.packages</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.remove()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.reset()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</name>
                <outbound type="class" confirmed="no">java.lang.SecurityException</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getAuthority()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getPath()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getProtocol()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getQuery()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.getRef()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.PATH</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent$Type.QUERY</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriComponent.contextualEncode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toURI(java.net.URL)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.create(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.net.URISyntaxException</outbound>
                <outbound type="class" confirmed="no">java.net.URL</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.toURI()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.PackageNamesScanner$ResourcesProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.PackageNamesScanner$ResourcesProvider$1()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$000()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getInstance()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</name>
                <outbound type="class" confirmed="no">java.lang.SecurityException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.setResourcesProvider(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getInstance()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.PackageNamesScanner$ResourcesProvider$1()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.provider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$000()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getResources(java.lang.String, java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.provider</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getInstance()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.setInstance(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</name>
                <outbound type="class" confirmed="no">java.lang.SecurityException</outbound>
                <outbound type="class" confirmed="no">java.lang.SecurityManager</outbound>
                <outbound type="feature" confirmed="no">java.lang.SecurityManager.checkPermission(java.security.Permission)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.getSecurityManager()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ReflectPermission.ReflectPermission(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.security.Permission</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.provider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.access$100(org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.PackageNamesScanner$ResourcesProvider$1()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.PackageNamesScanner$ResourcesProvider()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider.getInstance()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.PackageNamesScanner$ResourcesProvider$1.getResources(java.lang.String, java.lang.ClassLoader)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.ClassLoader</outbound>
                <outbound type="feature" confirmed="no">java.lang.ClassLoader.getResources(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException()</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.Throwable)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory$BundleSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner$1.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner$1.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.resourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.resourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.resourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.hasNext()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.open()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.remove()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.reset()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Deque</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.stack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.FileSchemeResourceFinderFactory$FileSchemeScanner(org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory, java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.FilesScanner(java.lang.String[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.reset()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.init()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Deque</outbound>
                <outbound type="feature" confirmed="no">java.util.Deque.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Deque.pop()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceFinder.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.stack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.hasNext()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.NoSuchElementException.NoSuchElementException()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.ResourceFinder.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceFinder.open()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.open()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Deque</outbound>
                <outbound type="feature" confirmed="no">java.util.Deque.push(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.stack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.processFile(java.io.File)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.remove()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceFinder.remove()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.current</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FilesScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.remove()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.reset()</name>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.stack</name>
                <outbound type="class" confirmed="no">java.util.Deque</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.ResourceProcessor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceProcessor.accept(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.ResourceProcessor.process(java.lang.String, java.io.InputStream)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.BundleSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.addResourceFinder(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory.getSchemes()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.add(org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.UriSchemeResourceFinderFactory</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.VfsSchemeResourceFinderFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.PackageNamesScanner(java.lang.ClassLoader, java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.endsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equalsIgnoreCase(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.indexOf(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.lastIndexOf(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.net.URI</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.getScheme()</outbound>
                <outbound type="feature" confirmed="no">java.net.URI.toString()</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.URL(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.net.URL.openStream()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.UriBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.build(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.fromUri(java.net.URI)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.UriBuilder.scheme(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory$FileSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.FileSchemeResourceFinderFactory()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.FileSchemeResourceFinderFactory.create(java.net.URI)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.JarFileScanner(java.io.InputStream, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarFileScanner.open()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderException.ResourceFinderException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.ResourceFinderStack()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.push(org.glassfish.jersey.server.ResourceFinder)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.getSchemes()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1</name>
            <outbound type="class" confirmed="no">java.io.FilterInputStream</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</name>
                <outbound type="feature" confirmed="no">java.io.FilterInputStream.FilterInputStream(java.io.InputStream)</outbound>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.close()</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1.VfsSchemeResourceFinderFactory$1(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.ResourceFinder</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack, org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory.create(java.net.URI)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.hasNext()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.hasNext()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.open()</name>
                <outbound type="class" confirmed="no">java.io.InputStream</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.open()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.remove()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.next()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.reset()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack.reset()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.resourceFinderStack</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.ResourceFinderStack</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.hasNext()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.next()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.open()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.remove()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.reset()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory$VfsSchemeScanner.VfsSchemeResourceFinderFactory$VfsSchemeScanner(org.glassfish.jersey.server.internal.scanning.VfsSchemeResourceFinderFactory, org.glassfish.jersey.server.internal.scanning.ResourceFinderStack)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.model</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.methodHandler</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.UndeclaredThrowableException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.MappableException.MappableException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.methodHandler</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.methodHandler</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.invoke(java.lang.Object, java.lang.Object[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.method</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.AbstractJavaResourceMethodDispatcherProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.MethodParamDispatcherProvider()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.GenericEntity</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.getServices()</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.services</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.getServices()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.valueProviders</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.valueProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.valueProviders</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.ok()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.getParamValues()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.getParamValues()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.getParamValues()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.getParamValues()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getGenericReturnType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.t</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.ok()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.getParamValues()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.getParamValues()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.t</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.getParamValues()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.getParamValues()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractResourceMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.toUpperCase()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.consumeMimeList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.httpMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.produceMimeList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.resource</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.areInputTypesDeclared()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.isConsumesDeclared</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.areOutputTypesDeclared()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.isProducesDeclared</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.consumeMimeList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedInputTypes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.getDeclaringResource()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.resource</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.httpMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedInputTypes()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.consumeMimeList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedOutputTypes()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.produceMimeList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.httpMethod</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.isConsumesDeclared</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.areInputTypesDeclared()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.setAreInputTypesDeclared(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.isProducesDeclared</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.areOutputTypesDeclared()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.setAreOutputTypesDeclared(boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.produceMimeList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedOutputTypes()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.resource</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getDeclaringResource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.setAreInputTypesDeclared(boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.isConsumesDeclared</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.setAreOutputTypesDeclared(boolean)</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.isProducesDeclared</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.httpMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.resource</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.AbstractSubResourceMethod</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.uriPath</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractSubResourceMethod.getPath()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.uriPath</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.AbstractSubResourceMethod.uriPath</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.getPath()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.BasicValidator</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.BasicValidator()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.BasicValidator(org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.workers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.ParamAnnotationSET</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.StarTypeList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.indexOf(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.subList(int, int)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getHttpMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_IN(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_RMS_OUT(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.intersectingMediaTypes(java.util.List, java.util.List, java.util.List, java.util.List)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.hasEntity()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaredAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_ENTITY(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_CONSUMES_FORM_PARAM(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.GET_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.MULTIPLE_HTTP_METHOD_DESIGNATORS(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUB_RES_METHOD_TREATED_AS_RES_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.TYPE_OF_METHOD_NOT_RESOLVABLE_TO_CONCRETE_TYPE(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getParameters()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.hasEntity()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.MethodList(java.util.List)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.isNotPublic()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_LOC(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NON_PUB_SUB_RES_METHOD(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.AMBIGUOUS_PARAMETER(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.ParamAnnotationSET</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</name>
                <outbound type="feature" confirmed="no">java.lang.Integer.toString(int)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameterized.getParameters()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredFields()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Field</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getDeclaredAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getGenericType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.getType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Field.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.toGenericString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getParameterTypes()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.MethodList(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNumParams(int)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasReturnType(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.iterator()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.nameStartsWith(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableSet(java.util.Set)</outbound>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.security.AccessController.doPrivileged(java.security.PrivilegedAction)</outbound>
                <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyReaderMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.StarTypeList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getParameters()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaredAnnotations()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyWriterMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.StarTypeList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getSupportedOutputTypes()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.intersectingMediaTypes(java.util.List, java.util.List, java.util.List, java.util.List)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MediaTypes.intersect(java.util.List, java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.isConcreteType(java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.isConcreteParameterizedType(java.lang.reflect.ParameterizedType)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.BasicValidator.issueList</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.sameHttpMethod(org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.server.model.AbstractResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getPath()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriTemplate.UriTemplate(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.UriTemplate.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.static {}</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.MediaType(java.lang.String, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.ParamAnnotationSET</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.StarTypeList</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.createParamAnnotationSet()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.RES_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_HAS_ENTITY_PARAM(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_RETURNS_VOID(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_LOC_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getPath()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.length()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.SUBRES_METHOD_URI_PATH_INVALID(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.BasicValidator.issueList</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getPath()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator.workers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.BasicValidator(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.BasicValidator$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.security.PrivilegedAction</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.c</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.val$_c</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.val$ml</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getDeclaredMethods(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.run()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getDeclaredMethods()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.util.Arrays.asList(java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.c</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.val$ml</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.val$_c</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.BasicValidator$1.val$ml</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.BasicValidator$1(org.glassfish.jersey.server.model.BasicValidator, java.lang.Class, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator$1.run()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.areInputTypesDeclared()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.areOutputTypesDeclared()</name>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.getSupportedInputTypes()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.getSupportedOutputTypes()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.setAreInputTypesDeclared(boolean)</name>
                <outbound type="class" confirmed="no">javax.naming.OperationNotSupportedException</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent.setAreOutputTypesDeclared(boolean)</name>
                <outbound type="class" confirmed="no">javax.naming.OperationNotSupportedException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.inflector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.setAreInputTypesDeclared(boolean)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.setAreOutputTypesDeclared(boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.getSupportedInputTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.getSupportedOutputTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.inflector</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.setAreInputTypesDeclared(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InflectorBasedResourceMethod.setAreOutputTypesDeclared(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.ANOT_HELPER_MAP</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.IntrospectionModeller()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Consumes.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.setAreInputTypesDeclared(boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Produces.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.setAreOutputTypesDeclared(boolean)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.WeakHashMap.WeakHashMap()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.IntrospectionModeller$1()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.IntrospectionModeller$2()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.IntrospectionModeller$3()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.IntrospectionModeller$4()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.IntrospectionModeller$5()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.IntrospectionModeller$6()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.IntrospectionModeller$7()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.DefaultValue</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.DefaultValue.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.ANOT_HELPER_MAP</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.UNKNOWN</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.FINEST</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.finest(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.isLoggable(java.util.logging.Level)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.MethodList(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.NEW_AR_CREATED_BY_INTROSPECTION_MODELER(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getInterfaces()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getGenericReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.GenericArrayType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.GenericArrayType.getGenericComponentType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getActualTypeArguments()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getRawType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.TypeVariable</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.getArrayClass(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.ReflectionHelper.resolveTypeVariable(java.lang.Class, java.lang.Class, java.lang.reflect.TypeVariable)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.of(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.of(java.lang.Class, java.lang.reflect.Type)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.getValue(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getMethod(java.lang.String, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.isRootResource(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getAnnotation(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getAnnotatedResourceClass(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.removeAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameterized.getParameters()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterAnnotations()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Constructor.getParameterTypes()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Encoded</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getGenericParameterTypes()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getParameterAnnotations()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getParameterTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.ANOT_HELPER_MAP</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HttpMethod.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.ResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasNotMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.iterator()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getResource()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Consumes</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HttpMethod</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HttpMethod.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Path</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.Path.value()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.Produces</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getAnnotations()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMetaMethodAnnotations(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.AnnotatedMethod.getMethod()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.MethodList</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.hasMetaAnnotation(java.lang.Class)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.MethodList.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.rawClass()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.ClassTypePair.type()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addConsumes(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Consumes)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.addProduces(org.glassfish.jersey.internal.util.AnnotatedMethod, org.glassfish.jersey.server.model.AbstractResourceMethod, javax.ws.rs.Produces)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericReturnType(java.lang.Class, java.lang.reflect.Method)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.ResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getMethod()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$1.IntrospectionModeller$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$1.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.CONTEXT</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(javax.ws.rs.core.Context)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Context</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$2.IntrospectionModeller$2()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$2.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.HEADER</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(javax.ws.rs.HeaderParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.HeaderParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.HeaderParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$3</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$3.IntrospectionModeller$3()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$3.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.COOKIE</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(javax.ws.rs.CookieParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.CookieParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.CookieParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$4</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$4.IntrospectionModeller$4()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$4.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.MATRIX</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(javax.ws.rs.MatrixParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.MatrixParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.MatrixParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$5</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$5.IntrospectionModeller$5()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$5.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.QUERY</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(javax.ws.rs.QueryParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.QueryParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.QueryParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$6</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$6.IntrospectionModeller$6()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$6.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.PATH</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(javax.ws.rs.PathParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.PathParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.PathParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$7</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$7.IntrospectionModeller$7()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParamAnotHelperMap()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$7.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.FORM</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(javax.ws.rs.FormParam)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(javax.ws.rs.FormParam)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.FormParam</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.FormParam.value()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getValueOf(java.lang.annotation.Annotation)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$8</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$pt</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$ptts</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.getGenericType(java.lang.Class, java.lang.Class, java.lang.Class, java.lang.reflect.Type)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Type[].clone()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$ptts</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.getOwnerType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getOwnerType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$pt</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.getRawType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.ParameterizedType.getRawType()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.val$pt</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.val$pt</name>
                <outbound type="class" confirmed="no">java.lang.reflect.ParameterizedType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getOwnerType()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getRawType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$8.val$ptts</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.IntrospectionModeller$8(java.lang.reflect.Type[], java.lang.reflect.ParameterizedType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$8.getActualTypeArguments()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getValueOf(java.lang.annotation.Annotation)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.InvocableResourceMethod</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ConsumesProducesEnabledComponent</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ObjectOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker.AbstractJavaResourceMethodDispatcherProvider$ResponseOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker.AbstractJavaResourceMethodDispatcherProvider$VoidOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.method</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getDeclaringResource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker.AbstractJavaResourceMethodDispatcherProvider$TypeOutInvoker(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getParameters()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getSupportedInputTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.getSupportedOutputTypes()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveOutputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.InvocableResourceMethod.hasEntity()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.MethodParamDispatcherProvider</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MethodParamDispatcherProvider.MethodParamDispatcherProvider()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.AbstractJavaResourceMethodDispatcherProvider()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.getServices()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.MethodParamDispatcherProvider.getServices()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.MultipleMethodAcceptor$1(org.glassfish.jersey.server.model.MultipleMethodAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.this$0</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.this$0</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getHttpMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.method2InflectorMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.routingCtxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.workers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$000(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$100(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaredAnnotations()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List, java.util.Comparator)</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.valueOf(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.right()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyReaderMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers.getMessageBodyWriterMediaTypes(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedInputTypes()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getSupportedOutputTypes()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getReturnType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.MultipleMethodAcceptor$1(org.glassfish.jersey.server.model.MultipleMethodAcceptor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="feature" confirmed="no">com.google.common.collect.Iterators.singletonIterator(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">com.google.common.collect.UnmodifiableIterator</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.getMessage()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.WebApplicationException.WebApplicationException(javax.ws.rs.core.Response)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getMethod()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.RequestHeaders.getAcceptableMediaTypes()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.entity(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$Status</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.METHOD_NOT_ALLOWED</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.NOT_ACCEPTABLE</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$Status.UNSUPPORTED_MEDIA_TYPE</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.status(int)</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.status(javax.ws.rs.core.Response$Status)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MediaTypes.mostSpecific(javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.Stages.asTreeAcceptor(org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setEffectiveAcceptableType(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.method2InflectorMap</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.routingCtxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.method2InflectorMap</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.responseWithContentTypeHeader(javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.Responses.toBuilder(javax.ws.rs.core.Response)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$100(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.routingCtxFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.typeNotSpecific(javax.ws.rs.core.MediaType)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardSubtype()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isWildcardType()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$000(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor.workers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.util.Comparator</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.MultipleMethodAcceptor$1(org.glassfish.jersey.server.model.MultipleMethodAcceptor)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(java.lang.Object, java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="feature" confirmed="no">java.util.Comparator.compare(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.message.internal.MediaTypes.MEDIA_TYPE_COMPARATOR</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(java.lang.Object, java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.MultipleMethodAcceptor$1(org.glassfish.jersey.server.model.MultipleMethodAcceptor)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$effectiveResponseType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$inflector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.Inflector.apply(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.this$0</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$effectiveResponseType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$000(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.access$100(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.Response)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$effectiveResponseType</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.val$inflector</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.MultipleMethodAcceptor$2(org.glassfish.jersey.server.model.MultipleMethodAcceptor, org.glassfish.jersey.process.Inflector, javax.ws.rs.core.MediaType)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$2.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(java.lang.Object, java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.inflector</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.isConsumable(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.MediaType.isCompatible(javax.ws.rs.core.MediaType)</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Request.getHeaders()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.RequestHeaders</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.RequestHeaders.getMediaType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</name>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$1.compare(org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector, org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.this$0</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.MultipleMethodAcceptor$ConsumesProducesInflector(org.glassfish.jersey.server.model.MultipleMethodAcceptor, javax.ws.rs.core.MediaType, javax.ws.rs.core.MediaType, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.MediaType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.consumes</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor$ConsumesProducesInflector.produces</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ParamQualifier</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Documented</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.ElementType.ANNOTATION_TYPE</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Retention</outbound>
            <outbound type="feature" confirmed="no">java.lang.annotation.RetentionPolicy.RUNTIME</outbound>
            <outbound type="class" confirmed="no">java.lang.annotation.Target</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.Parameter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.AnnotatedElement</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.DelegatedInjectionValueFactoryProvider$1(org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider, org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.val$parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.EntityParamValueFactoryProvider$EntityValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.parameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.get(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassFields(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkResourceClassSetters(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotation</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotations</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.clazz</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.defaultValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.encoded</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.sourceName</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.annotation</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.clazz</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.defaultValue</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDefaultValue()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.hasDefaultValue()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.encoded</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getAnnotation()</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.cast(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotations</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isAnnotationPresent(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getAnnotations()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation[].clone()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotations</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getDeclaredAnnotations()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation[].clone()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.annotations</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getDefaultValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.defaultValue</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getParameterClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.clazz</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getParameterType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider$EntityValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getSource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.getSourceName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.sourceName</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.get(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.getWithoutDefaultValue(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.hasDefaultValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.defaultValue</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.isAnnotationPresent(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation(java.lang.Class)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.isEncoded()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.encoded</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.createValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.isQualified()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotationPresent(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation.annotationType()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ParamQualifier</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.source</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.sourceName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter.type</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.Parameter$Source</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.AbstractValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.compatibleSource</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$ParamAnnotationHelper.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.source</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.$VALUES</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.values()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.CONTEXT</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$1.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.COOKIE</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$3.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.ENTITY</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.getEffectiveInputTypes(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.addAllCombinations(java.util.List, org.glassfish.jersey.internal.util.collection.Pair)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.FORM</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$7.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.HEADER</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$2.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.MATRIX</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$4.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.PATH</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$6.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.Parameter$Source(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.QUERY</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller$5.getSource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.UNKNOWN</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createParameter(java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.$VALUES</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.CONTEXT</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.COOKIE</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.FORM</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.HEADER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.MATRIX</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.PATH</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.Parameter$Source(java.lang.String, int)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.QUERY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.UNKNOWN</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameter$Source.values()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.$VALUES</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.server.model.Parameter$Source[]</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.Parameter$Source[].clone()</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.server.model.Parameter$Source[]</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.values()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.Parameter$Source[].clone()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.values()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.Parameterized</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Constructor, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, org.glassfish.jersey.internal.util.AnnotatedMethod, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameterized.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameters(org.glassfish.jersey.server.model.Parameterized, java.lang.reflect.Method)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.processParameters(java.lang.Class, java.lang.Class, org.glassfish.jersey.server.model.Parameterized, boolean, java.lang.Class[], java.lang.reflect.Type[], java.lang.annotation.Annotation[][])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.Parameterized.hasEntity()</name>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.PathAnnotated</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PathAnnotated.getPath()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.PathValue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.uriPath</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isSubResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getPath()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.uriPath</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.value</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PathValue.getValue()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.value</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PathValue.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PathValue.value</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.rc</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.routingCtx</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.acceptor</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor.apply(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushLeftHandPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchedResource(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.rc</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.routingCtx</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.rc</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.routingCtx</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceClass</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.resource</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.access$400(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getDeclaringResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.resource</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.InflectorBasedResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, java.util.List, java.util.List, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getDeclaringResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.rc</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.resource</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.annotation.Nullable</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.constructors</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceMethods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceLocators</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceMethods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.takeExistingOrCreateVirtualResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.PathValue(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.constructors</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceMethods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceLocators</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceMethods</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.constructors</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getConstructors()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getConstructors()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.constructors</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getPath()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.resourceMethods</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder$1.to(org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder$AppBoundBuilder.ApplicationBuilder$AppBoundBuilder(org.glassfish.jersey.server.ApplicationBuilder, java.lang.String, java.lang.String, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceLocators</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.subResourceMethods</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getComponents()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.isRootResource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.lookupResourceClass(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.isSubResource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.uriPath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.resourceClass</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.resourceMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.subResourceLocators</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.subResourceMethods</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getConstructors()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getResourceMethods()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceLocators()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getSubResourceMethods()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceClass.uriPath</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.Class, org.glassfish.jersey.server.model.PathValue)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.ResourceClass(java.lang.String, org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isSubResource()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceConstructor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ctor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.parameters</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.ctor</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getCtor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.getCtor()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Constructor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ctor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.parameters</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.hasEntity()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getParameters()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceConstructor.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.ResourceConstructor(java.lang.reflect.Constructor)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.getParameters()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethod</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.AbstractResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.genericReturnType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.parameters</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.returnType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.genericReturnType</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getGenericReturnType()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.ResourceMethod.getDeclaringResource()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.getGenericReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.genericReturnType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.getMethod()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.parameters</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.getReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.returnType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.hasEntity()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getParameters()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.returnType</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.ResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.getReturnType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethod.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.method</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
            <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Scoped</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.dispatcherProviderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.providers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.providers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.providers</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.LOGGER</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
            <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Scoped</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.invocationHandlerProviderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.DEFAULT_HANDLER</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.LOGGER</name>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.providers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Level</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Level.SEVERE</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.LocalizationMessages.ERROR_PROCESSING_METHOD(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.DEFAULT_HANDLER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.LOGGER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.providers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.providers</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</name>
                <outbound type="feature" confirmed="no">java.lang.Class.getName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.util.logging.Logger</outbound>
                <outbound type="feature" confirmed="no">java.util.logging.Logger.getLogger(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.ResourceMethodInvocationHandlerFactory$1()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.DEFAULT_HANDLER</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.LOGGER</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.ResourceMethodInvocationHandlerFactory$1()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory$1.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])</name>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalArgumentException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodInvoker</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.routingContextFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaredAnnotations()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchedResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodAnnotations(java.lang.annotation.Annotation[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.setResponseMethodType(java.lang.reflect.Type)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getGenericReturnType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.dispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.routingContextFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.dispatcher</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.method</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker.routingContextFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.resourceMethodInvokerBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.resourceMethodInvokerBuilder</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.ResourceMethodInvoker$Builder()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.dispatcherProviderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.invocationHandlerProviderFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.routingContextFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.dispatcherProviderFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.invocationHandlerProviderFactory</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.routingContextFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelComponent</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelComponent.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelComponent.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelContext</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelListener.onLoaded(org.glassfish.jersey.server.model.ResourceModelContext)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelContext.getAbstractRootResources()</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelIssue</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.fatal</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.message</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.source</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkIntersectingMediaTypes(org.glassfish.jersey.server.model.ResourceClass, java.lang.String, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.InvocableResourceMethod, java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkMethod(org.glassfish.jersey.server.model.AbstractResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkNonPublicMethods(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkParameter(org.glassfish.jersey.server.model.Parameter, java.lang.Object, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.fatal</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.isFatal()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.getMessage()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.message</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.getSource()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.source</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.isFatal()</name>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.fatal</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.allIssueLogMessages(java.util.List)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.message</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.getMessage()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelIssue.source</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.ResourceModelIssue(java.lang.Object, java.lang.String, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.getSource()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelListener</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelListener.onLoaded(org.glassfish.jersey.server.model.ResourceModelContext)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelContext</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelModule</name>
            <outbound type="class" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelModule.ResourceModelModule()</name>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.AbstractModule.AbstractModule()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.ResourceModelModule.bind()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.ResourceModelModule.bind(java.lang.Class, java.lang.Class[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelModule.configure()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Binder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Binder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.NamedBinder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.NamedBinder.to(java.lang.Class)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.ResolvedBinder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.ResourceModelModule.bind()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.ResourceModelModule.bind(java.lang.Class, java.lang.Class[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelValidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.issueList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.BasicValidator()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.BasicValidator(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.cleanIssueList()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.clear()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.issueList</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelIssue.isFatal()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.getIssueList()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.getIssueList()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.issueList</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.fatalIssuesFound()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.issueList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.ResourceModelValidator()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.cleanIssueList()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.getIssueList()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.getComponents()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.validateResources(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelValidator$ModelException</name>
            <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.issues</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.processIssues(org.glassfish.jersey.server.model.ResourceModelValidator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.issues</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator$ModelException.ResourceModelValidator$ModelException(java.util.List)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.ResourceModelVisitor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelValidator.validate(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.method2Inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.RuntimeModelProvider()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.method2Inflector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.resourceMethodInvokerBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet(java.util.Comparator)</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.right()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.lastRoutedBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.method2Inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.rootBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.COMPARATOR</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.lastRoutedBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.locator2Acceptor</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.method2Inflector</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.process(org.glassfish.jersey.server.model.ResourceModelComponent)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.resourceMethodInvokerBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.rootBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.routedBuilder()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.lastRoutedBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.rootBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.EMPTY_PATH</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getPath()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern$RightHandPath</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern$RightHandPath.capturingZeroSegments</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String, org.glassfish.jersey.uri.PathPattern$RightHandPath)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelFromSubResource.workers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.RuntimeModelProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setModelProvider(org.glassfish.jersey.server.model.RuntimeModelProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProvider.RuntimeModelProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProvider.getRuntimeModel()</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.setModelProvider(org.glassfish.jersey.server.model.RuntimeModelProvider)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProvider.process(org.glassfish.jersey.server.model.ResourceModelComponent)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent.getComponents()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.ApplicationBuilder(org.glassfish.jersey.server.ResourceConfig)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.runtimeModelCreator</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.RuntimeModelProvider()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProvider.RuntimeModelProvider()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.LinkedList.LinkedList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern$RightHandPath</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern$RightHandPath.capturingZeroSegments</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String, org.glassfish.jersey.uri.PathPattern$RightHandPath)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.resourceMethodInvokerBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod.getDeclaringResource()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Comparator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.clear()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.TreeSet(java.util.Comparator)</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.TreeSet.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.left()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair.right()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder.root(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder.route(java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToBuilder.to(org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder.build()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MultipleMethodAcceptor.MultipleMethodAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.hk2.Factory, java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PushResourceAndDelegateTreeAcceptor.PushResourceAndDelegateTreeAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.process.internal.TreeAcceptor)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getDeclaringResource(java.util.List)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.lastRoutedBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.rootBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getResource()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.uri.PathPattern</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.COMPARATOR</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(char)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.lastRoutedBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.method2Inflector</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.process(org.glassfish.jersey.server.model.ResourceModelComponent)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.resourceMethodInvokerBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.rootBuilder</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.routedBuilder()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RootRouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteBuilder</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RouteToPathBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.lastRoutedBuilder</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.rootBuilder</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Inject</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ApplicationBuilder.build()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimStartingSlashes(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.substring(int)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.trimTrailingSlashes(java.lang.StringBuilder)</name>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.deleteCharAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.length()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitInflectorResourceMethod(org.glassfish.jersey.server.model.InflectorBasedResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InflectorBasedResourceMethod.inflector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceClass(org.glassfish.jersey.server.model.ResourceClass)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceConstructor(org.glassfish.jersey.server.model.ResourceConstructor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceConstructor</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.ResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.util.collection.Tuples.of(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.locator2Acceptor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.Inflector</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.PathValue.getValue()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass.isRootResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.createInflector(org.glassfish.jersey.server.model.InvocableResourceMethod)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.currentResourcePath</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.joinUriPaths(java.lang.String[])</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getDeclaringResource()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.SubResourceMethod.getPath()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.workers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.RuntimeModelProviderFromAbstractModel(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.setWorkers(org.glassfish.jersey.message.MessageBodyWorkers)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.SubResourceLocator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.locator</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.annotations</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.parameters</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.resource</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.uriPath</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getAnnotations()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation[]</outbound>
                <outbound type="feature" confirmed="no">java.lang.annotation.Annotation[].clone()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.annotations</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getComponents()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.toString()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.parameters</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getPath()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.uriPath</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.getResource()</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.resource</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceLocatorsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.hasEntity()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getParameters()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.resource</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocator.uriPath</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.SubResourceLocator(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, org.glassfish.jersey.server.model.PathValue, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getPath()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.locator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.routingContextFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.services</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.valueProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.workers</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(java.lang.Object)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.getClass()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.inject.Injector.inject(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.util.collection.Pair</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.process.internal.TreeAcceptor.apply(javax.ws.rs.core.Request)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushLeftHandPath()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushMatchedResource(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.createResource(java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelComponent</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.RuntimeModelFromSubResource(org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.process(org.glassfish.jersey.server.model.ResourceModelComponent)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.injector</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.routingContextFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.workers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(java.lang.Object)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</name>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.IllegalAccessException</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationTargetException</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.InvocationTargetException.getCause()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.UndeclaredThrowableException</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.MappableException.MappableException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.Throwable)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.peekMatchedResource()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator.getMethod()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.locator</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.routingContextFactory</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.valueProviders</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.injector</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.inject.Injector</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.locator</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocator</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.routingContextFactory</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.services</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.valueProviders</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.workers</name>
                <outbound type="class" confirmed="no">org.glassfish.jersey.message.MessageBodyWorkers</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.SubResourceMethod</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathAnnotated</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractSubResourceMethod.AbstractSubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.server.model.PathValue, java.lang.String)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.PathValue</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceClass</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.annotations</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.genericReturnType</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.parameters</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.returnType</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.accept(org.glassfish.jersey.server.model.ResourceModelVisitor)</name>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelVisitor.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.annotations</name>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.genericReturnType</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getGenericReturnType()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getDeclaringResource()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getGenericReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.genericReturnType</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getHttpMethod()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.checkConsumesProducesAmbiguities(org.glassfish.jersey.server.model.ResourceClass)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getMethod()</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.IntrospectionModeller.workOutSubResourceMethodsList(org.glassfish.jersey.server.model.ResourceClass, org.glassfish.jersey.internal.util.MethodList, boolean, javax.ws.rs.Consumes, javax.ws.rs.Produces)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getParameters()</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.parameters</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getPath()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.getReturnType()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.returnType</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.hasEntity()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getParameters()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.method</name>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getMethod()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.toString()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.parameters</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getParameters()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.returnType</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.SubResourceMethod(org.glassfish.jersey.server.model.ResourceClass, java.lang.reflect.Method, java.lang.Class, java.lang.reflect.Type, org.glassfish.jersey.server.model.PathValue, java.lang.String, java.lang.annotation.Annotation[])</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.getReturnType()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.SubResourceMethod.toString()</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder()</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getDeclaringClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceMethod.method</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.glassfish.hk2.scopes.Singleton</outbound>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</outbound>
            <outbound type="class" confirmed="no">org.jvnet.hk2.annotations.Scoped</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.VoidVoidDispatcherProvider()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Void.TYPE</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Method</outbound>
                <outbound type="feature" confirmed="no">java.lang.reflect.Method.getReturnType()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.isEmpty()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod.getMethod()</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.InvocableResourceMethod.getParameters()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher.AbstractJavaResourceMethodDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler, org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$1</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.VoidVoidDispatcherProvider$VoidToVoidDispatcher(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response$ResponseBuilder.build()</outbound>
                <outbound type="feature" confirmed="no">javax.ws.rs.core.Response.noContent()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.invoke(java.lang.Object, java.lang.Object[])</outbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.invoke(java.lang.Object, java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider$VoidToVoidDispatcher.doDispatch(java.lang.Object, javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.spi</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.PropertiesProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.PropertiesProvider.getProperties()</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig.mergeProperties(java.util.Map, javax.ws.rs.core.Application)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name>org.glassfish.jersey.server.spi.internal</name>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper.MethodParameterHelper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(int)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.emptyList()</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.frequency(java.util.Collection, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.get(int)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.lastIndexOf(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.set(int, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Services</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.inject.Providers.getProviders(org.glassfish.hk2.Services, java.lang.Class)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.ENTITY</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source.UNKNOWN</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSource()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isQualified()</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameterized</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameterized.getParameters()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.MethodParamDispatcherProvider.createValueProviders(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.SubResourceLocatorAcceptor(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Services, org.glassfish.hk2.Factory, org.glassfish.jersey.message.MessageBodyWorkers, org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getParameterValues(java.util.List)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.RuntimeException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.WebApplicationException</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.hk2.Factory.get()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <outbound type="feature" confirmed="no">org.glassfish.jersey.internal.ProcessingException.ProcessingException(java.lang.String, java.lang.Throwable)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider$AbstractMethodParamInvoker.getParamValues()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.SubResourceLocatorAcceptor.getResource()</inbound>
            </feature>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter</name>
            <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.MethodParameterHelper$SourceOverrideParameter.MethodParameterHelper$SourceOverrideParameter(org.glassfish.jersey.server.model.Parameter, org.glassfish.jersey.server.model.Parameter$Source)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.annotation.Annotation</outbound>
                <outbound type="class" confirmed="no">java.lang.reflect.Type</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter$Source</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.Parameter(java.lang.annotation.Annotation[], java.lang.annotation.Annotation, org.glassfish.jersey.server.model.Parameter$Source, java.lang.String, java.lang.reflect.Type, java.lang.Class, boolean, java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotation()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getAnnotations()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getDefaultValue()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterClass()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getParameterType()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.getSourceName()</outbound>
                <outbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.Parameter.isEncoded()</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcher</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.dispatcher</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher.dispatch(java.lang.Object, javax.ws.rs.core.Request)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Request</outbound>
                <outbound type="class" confirmed="no">javax.ws.rs.core.Response</outbound>
                <outbound type="class" confirmed="no">org.glassfish.jersey.internal.ProcessingException</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceModelModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod, java.lang.reflect.InvocationHandler)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.build(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod, org.glassfish.jersey.server.model.ResourceMethodInvoker$1)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</name>
                <outbound type="class" confirmed="no">java.lang.reflect.InvocationHandler</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.InvocableResourceMethod</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.create(org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker.ResourceMethodInvoker(org.glassfish.hk2.inject.Injector, org.glassfish.hk2.Factory, org.glassfish.jersey.server.spi.internal.ResourceMethodDispatcher$Provider, org.glassfish.jersey.server.spi.internal.ResourceMethodInvocationHandlerProvider, org.glassfish.jersey.server.model.InvocableResourceMethod)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>org.glassfish.jersey.server.spi.internal.ValueFactoryProvider</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractValueFactoryProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver$1.apply(org.glassfish.jersey.server.spi.internal.ValueFactoryProvider)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.createValueProviders(org.glassfish.hk2.Services, org.glassfish.jersey.server.model.Parameterized)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            <feature confirmed="yes">
                <name>org.glassfish.jersey.server.spi.internal.ValueFactoryProvider.getValueFactory(org.glassfish.jersey.server.model.Parameter)</name>
                <outbound type="class" confirmed="no">org.glassfish.hk2.Factory</outbound>
                <outbound type="class" confirmed="yes">org.glassfish.jersey.server.model.Parameter</outbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.spi.internal.MethodParameterHelper.getValueFactory(java.util.Set, org.glassfish.jersey.server.model.Parameter)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.spi</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.spi.StringValueReader</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.valueReader</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$ListValueOf.CollectionExtractor$ListValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SetValueOf.CollectionExtractor$SetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor$SortedSetValueOf.CollectionExtractor$SortedSetValueOf(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.CollectionExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CollectionExtractor.getInstance(java.lang.Class, org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.process(org.glassfish.jersey.server.internal.inject.StringReaderFactory, java.lang.String, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.SingleValueExtractor.SingleValueExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$AbstractStringReader</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider$1</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromStringEnum.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.spi.StringValueReader.fromString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.defaultValue()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.spi.StringValueReader$ValidateDefaultValue</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.spi.StringValueReader$ValidateDefaultValue.value()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractStringReaderExtractor.AbstractStringReaderExtractor(org.glassfish.jersey.spi.StringValueReader, java.lang.String, java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.spi.StringValueReaderProvider</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParameterInjectionModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$DateProvider</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$StringConstructor</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeFromString</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderProviders$TypeValueOf</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.spi.StringValueReaderProvider.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.getStringReader(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[])</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.uri</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.ExtendedUriInfo</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory$1.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HttpContext.getUriInfo()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule.configure()</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.ExtendedUriInfo.getPathParameters(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.ExtendedUriInfo.getPathSegments(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider$MatrixParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.ExtendedUriInfo.getPathSegments(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamListPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider$PathParamPathSegmentValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.ExtendedUriInfo.getQueryParameters(boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider$QueryParamValueFactory.get(org.glassfish.jersey.server.internal.inject.HttpContext)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.PathPattern</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.PathPatternRouteBuilder$1(org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder, org.glassfish.hk2.Services, org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.Object)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(org.glassfish.jersey.uri.PathPattern)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.addMethodInflector(org.glassfish.jersey.uri.PathPattern, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.COMPARATOR</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.getRuntimeModel()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.getRuntimeModel()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.EMPTY_PATH</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitResourceMethod(org.glassfish.jersey.server.model.ResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder$1.route(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.route(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.visitSubResourceLocator(org.glassfish.jersey.server.model.SubResourceLocator)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.PathPattern(java.lang.String, org.glassfish.jersey.uri.PathPattern$RightHandPath)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.getTemplate()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern.match(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.PathPattern$RightHandPath</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.PathPattern$RightHandPath.capturingZeroSegments</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.visitSubResourceMethod(org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.addMethodInflector(java.lang.String, org.glassfish.jersey.server.model.AbstractResourceMethod, org.glassfish.jersey.process.Inflector)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.UriComponent</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent.contextualEncode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent.decode(java.lang.String, org.glassfish.jersey.uri.UriComponent$Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent.decodePath(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathSegments(boolean)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent.decodeQuery(java.net.URI, boolean)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getQueryParameters(boolean)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.UriComponent$Type</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent$Type.PATH</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$1.apply(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext$2.apply(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.JarZipSchemeResourceFinderFactory.getInputStream(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent$Type.PATH_SEGMENT</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameters(boolean)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriComponent$Type.QUERY</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.PackageNamesScanner.toExternalForm(java.net.URL)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.UriTemplate</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor.apply(javax.ws.rs.core.Request)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$RoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getPathParameterBounds(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriTemplate.UriTemplate(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriTemplate.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.BasicValidator.samePath(org.glassfish.jersey.server.model.SubResourceMethod, org.glassfish.jersey.server.model.SubResourceMethod)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.UriTemplate.getTemplateVariables()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getLastPathParameterIndex(java.lang.String, org.glassfish.jersey.uri.UriTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.pushTemplate(org.glassfish.jersey.uri.UriTemplate)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.glassfish.jersey.uri.internal</name>
        <class confirmed="no">
            <name>org.glassfish.jersey.uri.internal.UriBuilderImpl</name>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.internal.UriBuilderImpl.UriBuilderImpl()</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.glassfish.jersey.uri.internal.UriBuilderImpl.uri(java.net.URI)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getAbsolutePathBuilder()</inbound>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.getBaseUriBuilder()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.jvnet.hk2.annotations</name>
        <class confirmed="no">
            <name>org.jvnet.hk2.annotations.Inject</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.configuration</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.contextRespolvers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.exceptionMappers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.messageBodyWorkers</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProviders</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application$References.serviceProvidersBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.invoker</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.mbwFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.preMatchFilterAcceptor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.references</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.requestScope</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.Application.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$JaxrsApplicationFactory.rcFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ResourceConfig$Module$ResourceConfigFactory.ResourceConfig$Module$ResourceConfigFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$HttpHeadersReferencingFactory.ServerModule$HttpHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestHeadersReferencingFactory.ServerModule$RequestHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestReferencingFactory.ServerModule$RequestReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.httpHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$RequestStagingContext.requestReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseHeadersReferencingFactory.ServerModule$ResponseHeadersReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseReferencingFactory.ServerModule$ResponseReferencingFactory(org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseHeadersReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.ServerModule$ResponseStagingContext.responseReference</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.request</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.response</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.AbstractHttpContextValueFactory.uriInfo</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.CookieParamValueFactoryProvider.CookieParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider.DelegatedInjectionValueFactoryProvider(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.EntityParamValueFactoryProvider.EntityParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.FormParamValueFactoryProvider.FormParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.HeaderParamValueFactoryProvider.HeaderParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider.JaxbStringReaderProvider$RootElementProvider(org.glassfish.hk2.Factory, javax.ws.rs.ext.Providers)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MatrixParamValueFactoryProvider.MatrixParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorFactory.MultivaluedParameterExtractorFactory(org.glassfish.jersey.server.internal.inject.StringReaderFactory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.PathParamValueFactoryProvider.PathParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.QueryParamValueFactoryProvider.QueryParamValueFactoryProvider(org.glassfish.jersey.server.internal.inject.MultivaluedParameterExtractorProvider, org.glassfish.hk2.inject.Injector)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.StringReaderFactory.StringReaderFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder.MatchResultInitializerAcceptor$Builder(org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder.PathPatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PathPatternRouteBuilder.PathPatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PathPatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder.PatternRouteAcceptor$Builder(org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.PatternRouteBuilder.PatternRouteBuilder(org.glassfish.hk2.Services, org.glassfish.jersey.server.internal.routing.PatternRouteAcceptor$Builder, org.glassfish.jersey.server.internal.routing.MatchResultInitializerAcceptor$Builder)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RedirectingAcceptor$Builder.RedirectingAcceptor$Builder(org.glassfish.jersey.server.internal.routing.RedirectingAcceptor, org.glassfish.hk2.Factory, org.glassfish.hk2.Factory)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.RouterModule$UriRoutingContextFactory.ctx</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.routing.UriRoutingContext.UriRoutingContext(org.glassfish.jersey.internal.util.collection.Ref)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.AbstractJavaResourceMethodDispatcherProvider.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory.ResourceMethodDispatcherFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory.ResourceMethodInvocationHandlerFactory(org.glassfish.hk2.Services)</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.dispatcherProviderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.invocationHandlerProviderFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvoker$Builder.routingContextFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.ctxFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.resourceMethodInvokerBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.rootBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelFromSubResource.services</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.ctxFactory</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.injector</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.resourceMethodInvokerBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.rootBuilder</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.model.RuntimeModelProviderFromAbstractModel.services</inbound>
        </class>
        <class confirmed="no">
            <name>org.jvnet.hk2.annotations.Scoped</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodDispatcherFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.ResourceMethodInvocationHandlerFactory</inbound>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.model.VoidVoidDispatcherProvider</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.jvnet.hk2.component</name>
        <class confirmed="no">
            <name>org.jvnet.hk2.component.ComponentException</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
        </class>
        <class confirmed="no">
            <name>org.jvnet.hk2.component.Inhabitant</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.DelegatedInjectionValueFactoryProvider$1.get()</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.jvnet.tiger_types</name>
        <class confirmed="no">
            <name>org.jvnet.tiger_types.Types</name>
            <feature confirmed="no">
                <name>org.jvnet.tiger_types.Types.erasure(java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.jvnet.tiger_types.Types.getTypeArgument(java.lang.reflect.Type, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.jvnet.tiger_types.Types.isSubClassOf(java.lang.reflect.Type, java.lang.reflect.Type)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.getValue(java.lang.Object, org.jvnet.hk2.component.Inhabitant, java.lang.reflect.AnnotatedElement, java.lang.reflect.Type, java.lang.Class)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>org.objectweb.asm</name>
        <class confirmed="no">
            <name>org.objectweb.asm.AnnotationVisitor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAnnotation(java.lang.String, boolean)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.Attribute</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitAttribute(org.objectweb.asm.Attribute)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.ClassReader</name>
            <feature confirmed="no">
                <name>org.objectweb.asm.ClassReader.ClassReader(java.io.InputStream)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            </feature>
            <feature confirmed="no">
                <name>org.objectweb.asm.ClassReader.accept(org.objectweb.asm.ClassVisitor, int)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.ClassVisitor</name>
            <inbound type="class" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor</inbound>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener.process(java.lang.String, java.io.InputStream)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.FieldVisitor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)</inbound>
        </class>
        <class confirmed="no">
            <name>org.objectweb.asm.MethodVisitor</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.scanning.AnnotationAcceptingListener$AnnotatedClassVisitor.visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.xml.sax</name>
        <class confirmed="no">
            <name>org.xml.sax.InputSource</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            <feature confirmed="no">
                <name>org.xml.sax.InputSource.InputSource(java.io.Reader)</name>
                <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.xml.sax.XMLReader</name>
            <inbound type="feature" confirmed="yes">org.glassfish.jersey.server.internal.inject.JaxbStringReaderProvider$RootElementProvider$1.fromString(java.lang.String)</inbound>
        </class>
    </package>
</dependencies>
